[
  {
    "user": "U05630XEA",
    "subtype": "channel_join",
    "text": "<@U05630XEA|klaw> has joined the channel",
    "ts": "1433430287.000047",
    "id": "04li46",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Hey...",
    "ts": "1433433784.000048",
    "id": "04li47",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Has anyone used Retrofit?",
    "ts": "1433434040.000049",
    "id": "04li48",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yup",
    "ts": "1433434093.000050",
    "id": "04li49",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Use it all the time",
    "ts": "1433434098.000051",
    "id": "04li50",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "What's up",
    "ts": "1433434101.000052",
    "id": "04li51",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<@U04U18ANZ>: ^",
    "ts": "1433434109.000053",
    "id": "04li52",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "I have some doubts about it.",
    "ts": "1433434126.000054",
    "id": "04li53",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Does it support Response Caching?",
    "ts": "1433434137.000055",
    "id": "04li54",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "<@U0542GLTE>:  ??",
    "ts": "1433434382.000056",
    "id": "04li55",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yes, through OkHttp",
    "ts": "1433434457.000057",
    "id": "04li56",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "in general how do you design the network layer",
    "ts": "1433434473.000058",
    "id": "04li57",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Do you make a Singleton Class or make a Instance of Builder every time?",
    "ts": "1433434489.000059",
    "id": "04li58",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Singleton",
    "ts": "1433434493.000060",
    "id": "04li59",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "and inject with Dagger",
    "ts": "1433434497.000061",
    "id": "04li60",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "```    @Singleton\n    @Provides\n    UserApiService provideUserService(RestAdapter restAdapter) {\n\n        return restAdapter.create(UserApiService.class);\n    }```",
    "ts": "1433434537.000062",
    "id": "04li61",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Dagger is dependency injection lib?",
    "ts": "1433434559.000063",
    "id": "04li62",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yes, some argue technicalities of it",
    "ts": "1433434577.000064",
    "id": "04li63",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "but, it's used primarily for dependency injection through the objectgraph using reflection for Dagger 1. I would highly recommend using Dagger 2 if you are at this stage in the project",
    "ts": "1433434626.000065",
    "id": "04li64",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "yes i am building the app",
    "ts": "1433434650.000066",
    "id": "04li65",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "but i am very unhappy with the network layer",
    "ts": "1433434657.000067",
    "id": "04li66",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "I have made a RestClient class with a static method setuprestclient",
    "ts": "1433434731.000068",
    "id": "04li67",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yeah. I do it Module creates the restAdapters, the managers implement the restAdapter calls, and then the classes use the managers",
    "ts": "1433434786.000069",
    "id": "04li68",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "is this a good way <http://blog.robinchutaux.com/blog/a-smart-way-to-use-retrofit/>?",
    "ts": "1433434792.000070",
    "id": "04li69",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "That way, if I want to rip out the entire thing, I just touch network code and not anything else",
    "ts": "1433434802.000071",
    "id": "04li70",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "also do you write all apis under a single interface?",
    "ts": "1433434821.000072",
    "id": "04li71",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "or you use multiple interfaces?",
    "ts": "1433434829.000073",
    "id": "04li72",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I use endpoints as the interfaces",
    "ts": "1433434846.000074",
    "id": "04li73",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "So if it's /api/users then that's the user if its /api/posts then its posts if its /api/stores then it's stores, etc",
    "ts": "1433434878.000075",
    "id": "04li74",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "^ I like that approach a lot",
    "ts": "1433434882.000076",
    "id": "04li75",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "does retrofit gives multiple interface?",
    "ts": "1433434933.000077",
    "id": "04li76",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "when i tried it gave me error",
    "ts": "1433434942.000078",
    "id": "04li77",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": ":disappointed:",
    "ts": "1433434943.000079",
    "id": "04li78",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "that it is not supported",
    "ts": "1433434950.000080",
    "id": "04li79",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "public interface ApiService {\n    @GET(\"/list/city\")\n    void getCities(RestCallback&lt;HashMap&lt;String, Object&gt;&gt; callback);\n\n    @GET(\"/lead/Leads\")\n    void getAllLeads(RestCallback&lt;HashMap&lt;String, Object&gt;&gt; callback);",
    "ts": "1433435017.000081",
    "id": "04li80",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Can i separate these both out?",
    "ts": "1433435026.000082",
    "id": "04li81",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yes",
    "ts": "1433435143.000083",
    "id": "04li82",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Create them as separate services",
    "ts": "1433435148.000084",
    "id": "04li83",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "In a separate interface file",
    "ts": "1433435161.000085",
    "id": "04li84",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "I did that but it gave me error.",
    "ts": "1433435177.000086",
    "id": "04li85",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Are you creating a rest adapater from both classes?",
    "ts": "1433435195.000087",
    "id": "04li86",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "cause it would be two separate adapters",
    "ts": "1433435206.000088",
    "id": "04li87",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "```    @Singleton\n    @Provides\n    GcmRegistrationService provideGcmRegistrationService(RestAdapter restAdapter) {\n\n        return restAdapter.create(GcmRegistrationService.class);\n    }\n\n    @Singleton\n    @Provides\n    AuthApiService provideAuthService(@Named(\"auth\") RestAdapter restAdapter) {\n\n        return restAdapter.create(AuthApiService.class);\n    }\n\n    @Singleton\n    @Provides\n    PostApiService providePostService(RestAdapter restAdapter) {\n\n        return restAdapter.create(PostApiService.class);\n    }\n```",
    "ts": "1433435235.000089",
    "id": "04li88",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U04U18ANZ|shobhit> uploaded a file: <https://androidchat.slack.com/files/shobhit/F056SAF91/restclient.java|RestClient>",
    "file": {
      "id": "F056SAF91",
      "created": 1433435262,
      "timestamp": 1433435262,
      "name": "RestClient.java",
      "title": "RestClient",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U04U18ANZ",
      "editable": true,
      "size": 698,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F056SAF91/restclient.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F056SAF91/download/restclient.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/shobhit/F056SAF91/restclient.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F056SAF91-fd0602319c",
      "edit_link": "https://androidchat.slack.com/files/shobhit/F056SAF91/restclient.java/edit",
      "preview": "public class RestClient\r\n{\r\n    private static final String BASE_URL = \"your base url\";\r\n    private ApiService apiService;\r\n\r\n    public RestClient()\r\n    {\r\n        Gson gson = new GsonBuilder()\r\n                .setDateFormat(\"yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'SSS'Z'\")\r\n                .create();\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">public</span> <span class=\"cm-keyword\">class</span> <span class=\"cm-variable\">RestClient</span></pre></div>\n<div><pre>{</pre></div>\n<div><pre>    <span class=\"cm-keyword\">private</span> <span class=\"cm-keyword\">static</span> <span class=\"cm-keyword\">final</span> <span class=\"cm-variable\">String</span> <span class=\"cm-variable\">BASE_URL</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">&quot;your base url&quot;</span>;</pre></div>\n<div><pre>    <span class=\"cm-keyword\">private</span> <span class=\"cm-variable\">ApiService</span> <span class=\"cm-variable\">apiService</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre>    <span class=\"cm-keyword\">public</span> <span class=\"cm-variable\">RestClient</span>()</pre></div>\n<div><pre>    {</pre></div>\n<div><pre>        <span class=\"cm-variable\">Gson</span> <span class=\"cm-variable\">gson</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GsonBuilder</span>()</pre></div>\n<div><pre>                .<span class=\"cm-variable\">setDateFormat</span>(<span class=\"cm-string\">&quot;yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'SSS'Z'&quot;</span>)</pre></div>\n<div><pre>                .<span class=\"cm-variable\">create</span>();</pre></div>\n</div>\n</div>\n",
      "lines": 10,
      "lines_more": 16,
      "preview_is_truncated": null,
      "channels": [
        "C054ZUY2W"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U04U18ANZ",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U04U18ANZ|shobhit>",
    "bot_id": null,
    "ts": "1433435263.000090",
    "id": "04li89",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "i make object of this RestClient",
    "ts": "1433435270.000091",
    "id": "04li90",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "class",
    "ts": "1433435327.000092",
    "id": "04li91",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I'm not a fan of how that's set up",
    "ts": "1433435340.000093",
    "id": "04li92",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "If you do it that way, you only have a since service.",
    "ts": "1433435356.000094",
    "id": "04li93",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Either that, or you need to go `private LeadsApiService leadsApiService`",
    "ts": "1433435382.000095",
    "id": "04li94",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "and then create one in your constructor and set up a Getter for it",
    "ts": "1433435397.000096",
    "id": "04li95",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "hmm. but i like your idea",
    "ts": "1433435415.000097",
    "id": "04li96",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Dagger makes it pretty easy to just fly around",
    "ts": "1433435430.000098",
    "id": "04li97",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "i wasn't too happy about the current implementation",
    "ts": "1433435435.000099",
    "id": "04li98",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "plus, I can switch from RetroFit to Ion tomorrow, and never touch anything but the networking layer.",
    "ts": "1433435448.000100",
    "id": "04li99",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "correct",
    "ts": "1433435479.000101",
    "id": "04li100",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Now for all apis , there Json Structure can be different so i have to write a Adapter for it for each Api service",
    "ts": "1433435535.000102",
    "id": "04li101",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "No, use GSON",
    "ts": "1433435554.000103",
    "id": "04li102",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "and just use POJOs",
    "ts": "1433435561.000104",
    "id": "04li103",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Retrofit you can say... okay this response is going to have `List&lt;Person&gt; personList` coming back",
    "ts": "1433435600.000105",
    "id": "04li104",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "and then it will serialize the data directly to your `Person` class",
    "ts": "1433435613.000106",
    "id": "04li105",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "using `@Expose` and `@SerializedName`",
    "ts": "1433435624.000107",
    "id": "04li106",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "even better would be to have your fields public",
    "ts": "1433435646.000108",
    "id": "04li107",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "so no @Expose",
    "ts": "1433435651.000109",
    "id": "04li108",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "So you could do something like \n\n\n```\n@SerializedName(\"first_name\")\n@Expose\nprivate String firstName\n```",
    "ts": "1433435660.000110",
    "id": "04li109",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "I've yet to use Dagger at all yet. I remember playing around with Dagger 1 awhile back and not really seeing the benefits at the time. I think I'm ready to give it another try with Dagger 2 but getting it to work with Kotlin should be fun; currently as of M12 Kotlin requires you to stay in Java to actually use generated code.",
    "ts": "1433435668.000111",
    "id": "04li110",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "(public because it’s a pojo so you don’t really care and it’s better to not have getters/setters if you don’t need them)",
    "ts": "1433435680.000112",
    "id": "04li111",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "better for perfs",
    "ts": "1433435688.000113",
    "id": "04li112",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "same as <@U053LEHJN>",
    "ts": "1433435702.000114",
    "id": "04li113",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "depending on your model structure.",
    "ts": "1433435703.000115",
    "id": "04li114",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "of course, if you’re doing something else than just return the field then…",
    "ts": "1433435730.000116",
    "id": "04li115",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "i created a abstract class \"public abstract T getDataFromHashMap(HashMap&lt;String, Object&gt; data, String Uri);\"",
    "ts": "1433435743.000117",
    "id": "04li116",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Dependency Injection is necessary to me for mature and testable code",
    "ts": "1433435748.000118",
    "id": "04li117",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0542GLTE>: heh, I haven't really bothered with tests either up until this point",
    "ts": "1433435781.000119",
    "id": "04li118",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "as a BaseAdapter",
    "ts": "1433435790.000120",
    "id": "04li119",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "and extend other httpAdapters with this and implemented it with the POJO",
    "ts": "1433435812.000121",
    "id": "04li120",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "hmm",
    "ts": "1433435829.000122",
    "id": "04li121",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "is this documented anywhere ?? atleast i can get my head over it. i have just started android dev.",
    "ts": "1433435875.000123",
    "id": "04li122",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yeah. Hold on. I think I can find a couple",
    "ts": "1433435887.000124",
    "id": "04li123",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I need to write a blog post apparently :disappointed:",
    "ts": "1433436020.000125",
    "id": "04li124",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "hehe",
    "ts": "1433436039.000126",
    "id": "04li125",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<http://slides.com/austinmusice/androidnetworking#/17>",
    "attachments": [
      {
        "service_name": "Slides",
        "title": "Networking With Android by Austin Musice",
        "title_link": "http://slides.com/austinmusice/androidnetworking",
        "text": "Networking Best Practices for Android",
        "fallback": "Slides: Networking With Android by Austin Musice",
        "image_url": "https://s3.amazonaws.com/media-p.slid.es/thumbnails/secure/db4dfd/decks.jpg",
        "from_url": "http://slides.com/austinmusice/androidnetworking",
        "image_width": 250,
        "image_height": 250,
        "image_bytes": 28293,
        "id": 1
      }
    ],
    "ts": "1433436076.000127",
    "id": "04li126",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "that slide and the one before it",
    "ts": "1433436084.000129",
    "id": "04li127",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<http://slides.com/austinmusice/mobile-apis#/6>",
    "attachments": [
      {
        "service_name": "Slides",
        "title": "Mobile APIs by Austin Musice",
        "title_link": "http://slides.com/austinmusice/mobile-apis",
        "text": "Brief discussion on strategies related to developing mobile APIs",
        "fallback": "Slides: Mobile APIs by Austin Musice",
        "image_url": "https://s3.amazonaws.com/media-p.slid.es/thumbnails/secure/239fd1/decks.jpg",
        "from_url": "http://slides.com/austinmusice/mobile-apis",
        "image_width": 250,
        "image_height": 250,
        "image_bytes": 18446,
        "id": 1
      }
    ],
    "ts": "1433436121.000130",
    "id": "04li128",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "That's some of it",
    "ts": "1433436125.000132",
    "id": "04li129",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I need to write one on the entire strucutre.",
    "ts": "1433436130.000133",
    "id": "04li130",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I will work on that this weekend, I know it doesn't help you that much right now",
    "ts": "1433436142.000134",
    "id": "04li131",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "That's fine. atleast i have something to start with.",
    "ts": "1433436200.000135",
    "id": "04li132",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Design patterns are tricky sometimes for me.",
    "ts": "1433436212.000136",
    "id": "04li133",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "and so is the documentation of retrofit.",
    "ts": "1433436225.000137",
    "id": "04li134",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Lack there of",
    "ts": "1433436253.000138",
    "id": "04li135",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Do you have any open source app or anything on Github?",
    "ts": "1433436437.000139",
    "id": "04li136",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "i would love to take a look",
    "ts": "1433436450.000140",
    "id": "04li137",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "I’ve been working on a simple app recently and have some of the networking layer completed. Its not as nice as what amusice has been providing, and doesn’t use dagger but it might be able to point you in the right direction to get started. Also feel free to critic any code in there and let me know if I could improve on anything <@U04U18ANZ> \n\n<https://github.com/davidargylethacker/flying-saucer-android/tree/develop/FlyingSaucer>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "davidargylethacker/flying-saucer-android",
        "title_link": "https://github.com/davidargylethacker/flying-saucer-android/tree/develop/FlyingSaucer",
        "text": "flying-saucer-android - A wonderful android application for a wonderful draught emporium.",
        "fallback": "GitHub: davidargylethacker/flying-saucer-android",
        "thumb_url": "https://avatars3.githubusercontent.com/u/1740130?v=3&s=400",
        "from_url": "https://github.com/davidargylethacker/flying-saucer-android/tree/develop/FlyingSaucer",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1433436778.000141",
    "id": "04li138",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Nothing using this model. Like I said, I need to whip something up",
    "ts": "1433436821.000143",
    "id": "04li139",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Thanks <@U0552GXEN>",
    "ts": "1433436833.000144",
    "id": "04li140",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I might be able to do a simple twitter client or something this weekend just to get this up, along with a blog post.",
    "ts": "1433436841.000145",
    "id": "04li141",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054F26NW",
    "text": "That would be awesome!",
    "ts": "1433436874.000146",
    "id": "04li142",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "cool",
    "ts": "1433436884.000147",
    "id": "04li143",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "nice",
    "ts": "1433439040.000148",
    "id": "04li144",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "im still trying to get my head around dagger",
    "ts": "1433439050.000149",
    "id": "04li145",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "<@U0552GXEN>: you can remove butterknife and use the new data binding introduced at IO :simple_smile:",
    "ts": "1433439617.000150",
    "id": "04li146",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TJ135Y",
    "text": "not sure that data binging is production ready at the moment :simple_smile: scheduled release is Q3 2015 :wink:",
    "ts": "1433439796.000151",
    "id": "04li147",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "It’s pretty nice. Gets rid of all the findViewById garbage. Also pretty alright in the layouts too",
    "ts": "1433439899.000152",
    "id": "04li148",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "Though they do say that it is definitely subject to change",
    "ts": "1433439909.000153",
    "id": "04li149",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "So :confused:",
    "ts": "1433439913.000154",
    "id": "04li150",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TJ135Y",
    "text": "sure, I like data binding concept. Used it a lot years ago with Adobe Flex :simple_smile:\nbut now for Android, it's not stable and proven enough imho",
    "ts": "1433439958.000155",
    "id": "04li151",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "what is unstable about it",
    "ts": "1433439982.000156",
    "id": "04li152",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "Well it’s all compile time. No runtime reflection or anything",
    "ts": "1433439991.000157",
    "id": "04li153",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "I don’t think it’s dependant on any version of android",
    "ts": "1433439998.000158",
    "id": "04li154",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054F26NW",
    "text": "Is there a blog about it somewhere? Something I could use to catch up?",
    "ts": "1433440017.000159",
    "id": "04li155",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "Huge overview - <https://developer.android.com/tools/data-binding/guide.html>",
    "attachments": [
      {
        "text": "This document explains how to use the Data Binding Library to write declarative layouts and minimize the glue code necessary to bind your application logic and layouts. The Data Binding Library offers both flexibility and broad comnpatibility — it&amp;#39…",
        "fallback": "This document explains how to use the Data Binding Library to write declarative layouts and minimize the glue code necessary to bind your application logic and layouts. The Data Binding Library offers both flexibility and broad comnpatibility — it&amp;#39…",
        "from_url": "https://developer.android.com/tools/data-binding/guide.html",
        "id": 1
      }
    ],
    "ts": "1433440036.000160",
    "id": "04li156",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "right as greg mentions, it surely just works or doesn't",
    "ts": "1433440046.000162",
    "id": "04li157",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "given that it is not reflection based",
    "ts": "1433440057.000163",
    "id": "04li158",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "I’ve been playing around with it a lot actually.",
    "ts": "1433440064.000164",
    "id": "04li159",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054F26NW",
    "text": "Thanks, <@U053NFVP0> !",
    "ts": "1433440067.000165",
    "id": "04li160",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "Documentation has/had some quirks about it",
    "ts": "1433440079.000166",
    "id": "04li161",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "<@U051G3BC3> good call I wasn't aware that the new data binding stuff was also able to accomplish the functionality of butter knife. ",
    "ts": "1433440135.000167",
    "id": "04li162",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054F26NW",
    "text": "I’ve been programming in Swift lately. I’m very much used to the earth shifting out from under me.",
    "ts": "1433440138.000168",
    "id": "04li163",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "Thanks for the link <@U053NFVP0>! Did they have any video sessions from io about it too?",
    "ts": "1433440169.000169",
    "id": "04li164",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "<@U0552GXEN>: Not all the functionality, but some of it. It doesn’t (as far as I’m aware) cover the OnClick stuff.",
    "ts": "1433440187.000170",
    "id": "04li165",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "As far as videos",
    "ts": "1433440189.000171",
    "id": "04li166",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "They talked about it briefly (see ~1.5 minutes) during the “Whats new in Android” for sure. Not sure if they touched it in “Whats new in Android Tools\"",
    "ts": "1433440214.000172",
    "id": "04li167",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053NFVP0",
    "text": "It was very “Here’s this thing. Not really going to talk about it” even though that seems to have been the most exciting thing about the whole talk",
    "ts": "1433440257.000173",
    "id": "04li168",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "Yeah! I was so excited about because it has been something that android lacked for a long time. I was very disappointed they did not have a full presentation devoted to it. ",
    "ts": "1433440617.000174",
    "id": "04li169",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "Another great feature that is deprived of good documentation",
    "ts": "1433440667.000175",
    "id": "04li170",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "<@U0552GXEN>: I was at the IO and when they showed Data Biding API someone yelled “BYE BYE BUTTERKNIFE” in the room. :smile:",
    "ts": "1433440742.000176",
    "id": "04li171",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "but clearly, not ready yet",
    "ts": "1433440792.000177",
    "id": "04li172",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "just be aware of it :simple_smile:",
    "ts": "1433440797.000178",
    "id": "04li173",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0552GXEN",
    "text": "hahah :satisfied: Thats awesome, I’ll definitely check it out. Pumped to hear of a solution that exists during compile time",
    "ts": "1433441234.000179",
    "id": "04li174",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "yeeeep",
    "ts": "1433441288.000180",
    "id": "04li175",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "In the new design library: Is it possible to make the `CollapsingToolbarLayout` show menu items only when the toolbar is in collaped state`?",
    "ts": "1433441408.000181",
    "id": "04li176",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Oh. Hey @ian.shaun.thomas. Didn't see you join. ",
    "ts": "1433441988.000182",
    "id": "04li177",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yeah I jumped in here",
    "ts": "1433442015.000183",
    "id": "04li178",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<@U04TK850N>: that's something I really want to know",
    "ts": "1433442265.000184",
    "id": "04li179",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "What I tried",
    "ts": "1433442437.000185",
    "id": "04li180",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "```AppBarLayout appBar = (AppBarLayout) findViewById(R.id.app_bar);\n appBar.addOnOffsetChangedListener(new AppBarLayout.OnOffsetChangedListener() {\n     @Override\n     public void onOffsetChanged(AppBarLayout appBarLayout, int i) {\n         Log.d(\"APPBAR\", String.valueOf(i));\n     }\n});```",
    "edited": {
      "user": "U04TK850N",
      "ts": "1433442470.000000"
    },
    "ts": "1433442441.000186",
    "id": "04li181",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "but apparently that doesn't get called :confused:",
    "ts": "1433442478.000188",
    "id": "04li182",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "or only three times on creation, and then never after",
    "ts": "1433442487.000189",
    "id": "04li183",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Oh wait, it's held in a `WeakReference`, so I had to let the activity implement it",
    "ts": "1433442692.000190",
    "id": "04li184",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "just no ideas about the values",
    "ts": "1433442763.000191",
    "id": "04li185",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053V4202",
    "subtype": "channel_join",
    "text": "<@U053V4202|radther> has joined the channel",
    "ts": "1433444210.000192",
    "id": "04li186",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U04TK850N>: man, I'm so glad I get to use lambdas after seeing even that little sample you posted",
    "ts": "1433444442.000193",
    "id": "04li187",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": ":stuck_out_tongue:",
    "ts": "1433444472.000194",
    "id": "04li188",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054F232D",
    "subtype": "channel_join",
    "text": "<@U054F232D|ramen> has joined the channel",
    "ts": "1433446802.000195",
    "id": "04li189",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546MZGX",
    "text": "<@U04TK850N>: another problem I've been having related to that... kinda... it's how to expand the toolbar manually. I want it to expand (or to show up again) when I switch to a different tab. But I couldn't figure it out yet.",
    "edited": {
      "user": "U0546MZGX",
      "ts": "1433452391.000000"
    },
    "ts": "1433452381.000196",
    "id": "04li190",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "yeah, didn't see any way to do this either",
    "ts": "1433452520.000198",
    "id": "04li191",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546MZGX",
    "text": "yeah that's a big problem for me... I'm showing a map on one of the tabs. I have to use padding, otherwise the google logo would be hidden. but using padding if you come from another tab when the toolbar is collapsed, the map has an empty space below.",
    "ts": "1433453445.000199",
    "id": "04li192",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546MZGX",
    "text": "oh well",
    "ts": "1433453450.000200",
    "id": "04li193",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0568DQUU",
    "subtype": "channel_join",
    "text": "<@U0568DQUU|jacob.winn> has joined the channel",
    "ts": "1433454926.000201",
    "id": "04li194",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053L0WSY",
    "subtype": "channel_join",
    "text": "<@U053L0WSY|dlmiddlecote> has joined the channel",
    "ts": "1433458144.000202",
    "id": "04li195",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "I read somewhere that the new databinding library uses kotlin under the hood",
    "ts": "1433464148.000203",
    "id": "04li196",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "design support library seems pretty cool - just a bit weary of a couple of bugs atm - <https://medium.com/android-bites/first-steps-with-the-design-support-library-8dcf06230ddd>",
    "attachments": [
      {
        "service_name": "Medium",
        "title": "First steps with the Design Support Library",
        "title_link": "https://medium.com/android-bites/first-steps-with-the-design-support-library-8dcf06230ddd",
        "text": "Google introduced Material Design almost a year ago and with it several spec documents. These are just ideas and develop…",
        "fallback": "Medium: First steps with the Design Support Library",
        "image_url": "https://d262ilb51hltx0.cloudfront.net/max/800/1*xuw_xHUoU1F2H3U7j8epXw.png",
        "ts": 1433134940,
        "from_url": "https://medium.com/android-bites/first-steps-with-the-design-support-library-8dcf06230ddd",
        "image_width": 300,
        "image_height": 250,
        "image_bytes": 117821,
        "id": 1
      }
    ],
    "ts": "1433464221.000204",
    "id": "04li197",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053Q5XP2",
    "text": "you didn't see the io talk about the floating action square?",
    "ts": "1433464249.000206",
    "id": "04li198",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "does the FAB really have to be a circle anyway? they should have made it a configurable attribute haha",
    "ts": "1433466899.000207",
    "id": "04li199",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060BU6CX",
    "subtype": "channel_join",
    "text": "<@U060BU6CX|pnikosis> has joined the channel",
    "ts": "1433487087.000208",
    "id": "04li200",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]