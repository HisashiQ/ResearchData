[
  {
    "user": "U0D8P42SC",
    "text": "i could do with a nice Guiness right now ... and its 9am here",
    "ts": "1446105424.000670",
    "id": "29li2291",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "there are 2 n in guinness.",
    "ts": "1446106804.000671",
    "id": "29li2292",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "spell it right or don’t even think about drinking it",
    "ts": "1446106823.000672",
    "id": "29li2293",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": ":smile:",
    "ts": "1446106825.000673",
    "id": "29li2294",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0D8P42SC",
    "text": "whatever, I do what i want!",
    "ts": "1446106965.000674",
    "id": "29li2295",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CT7JDN3",
    "text": "how can I batch volley requests ? Any hints ?",
    "ts": "1446108075.000675",
    "id": "29li2296",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: did u write storIO.. ? woa",
    "ts": "1446109508.000676",
    "id": "29li2297",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DDT7AGZ",
    "subtype": "channel_join",
    "text": "<@U0DDT7AGZ|seroperson> has joined the channel",
    "ts": "1446110339.000677",
    "id": "29li2298",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: can you tell me why you use auto-parcel over parceler ?",
    "ts": "1446110603.000678",
    "id": "29li2299",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> yep, StorIO written by me, mostly :) With help of nikitin-da. ",
    "ts": "1446110670.000679",
    "id": "29li2300",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> because I like AutoValue",
    "ts": "1446110707.000680",
    "id": "29li2301",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "im going to rip out sugarorm and plugin in storIO, wish me luck",
    "ts": "1446110830.000681",
    "id": "29li2302",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "GL&amp;HF",
    "ts": "1446110848.000682",
    "id": "29li2303",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> feel free to ping me :)",
    "ts": "1446110923.000683",
    "id": "29li2304",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "yiss!!!",
    "ts": "1446110932.000684",
    "id": "29li2305",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "do i have to annotate all model columns with `@StorIOSQLiteColumn` ?",
    "ts": "1446111171.000685",
    "id": "29li2306",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "why not just a class level annotation and then use `@Ignore` where applicable?",
    "ts": "1446111215.000686",
    "id": "29li2307",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> because Annotation Processor won't see non-annotated fields, + this is much more explicit == less error prone ",
    "ts": "1446111323.000687",
    "id": "29li2308",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "oh really? u cant just use reflection with the AP?",
    "ts": "1446111352.000688",
    "id": "29li2309",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> please read README carefully :) I hope it'll help you a lot! ",
    "ts": "1446111357.000689",
    "id": "29li2310",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> reflection is runtime API, we can use private JDK features, but we don't want to",
    "ts": "1446111393.000690",
    "id": "29li2311",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "im using sqlite do u mean `StorIOSQLite.md` or r u saying everything?",
    "ts": "1446111401.000691",
    "id": "29li2312",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> I'd suggest to read README and then go to documentation about StorIOSQLite if needed :) ",
    "ts": "1446111887.000692",
    "id": "29li2313",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "BTW, looks like we can get info about non-annotated fields, but as I said — we prefer less magic for library that works with your DB ",
    "ts": "1446111941.000693",
    "id": "29li2314",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0D8P42SC",
    "text": "has any of you guys tried <https://github.com/JakeWharton/hugo> (and got it to work)?",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "JakeWharton/hugo",
        "title_link": "https://github.com/JakeWharton/hugo",
        "text": "hugo - Annotation-triggered method call logging for your debug builds.",
        "fallback": "GitHub: JakeWharton/hugo",
        "thumb_url": "https://avatars2.githubusercontent.com/u/66577?v=3&s=400",
        "from_url": "https://github.com/JakeWharton/hugo",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1446113916.000694",
    "id": "29li2315",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I used it. Worked fine for me ",
    "ts": "1446114563.000696",
    "id": "29li2316",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0D8P42SC",
    "text": "just didnt log anything for me, perhaps I forgot something, will try again. Just wanted to make sure it works in general.",
    "ts": "1446114906.000697",
    "id": "29li2317",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0D8P42SC",
    "text": "thanks!",
    "ts": "1446114907.000698",
    "id": "29li2318",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "check ur log levels",
    "ts": "1446115553.000699",
    "id": "29li2319",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: can u point me to the documentation on how i can write adapters to support my enum or `Date` or `DateTime` objets?",
    "ts": "1446119260.000700",
    "id": "29li2320",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: at the moment our annotation processor does not support custom types <https://github.com/pushtorefresh/storio/issues/475>\n\n1. I'll work on it for StorIO 1.7.0!\n2. Annotation processor is not required part of StorIO, you always can write custom Put/Get/Delete resolvers with any implementation that you need, that's current way to handle custom types in the entities\n3. You can add a package private field just for serialization! I mean, you can provide `Date`/`DateTime` to the public usage but internally store it as `long` etc and mark it with `@StorIOSQLiteColumn` annotation!",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Support for custom field types on generated resolvers · Issue #475 · pushtorefresh/storio · GitHub",
        "title_link": "https://github.com/pushtorefresh/storio/issues/475",
        "text": "Hi, first let me tell you that I think this project is absolutely great and you guys rock. Also, I wanted to ask you if there is a possibility for adding custom type converters/mappers for unsuppor...",
        "fallback": "GitHub: Support for custom field types on generated resolvers · Issue #475 · pushtorefresh/storio",
        "thumb_url": "https://avatars2.githubusercontent.com/u/5355932?v=3&s=400",
        "from_url": "https://github.com/pushtorefresh/storio/issues/475",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1446121218.000701",
    "id": "29li2321",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: thanks, do fields have to be package private or can they be public ?",
    "ts": "1446121274.000703",
    "id": "29li2322",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: just not `private` so generated code could access them without reflection: `package private` (empty), `public` or `protected` is okay!",
    "edited": {
      "user": "U091EBYSU",
      "ts": "1446121432.000000"
    },
    "ts": "1446121414.000704",
    "id": "29li2323",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "great!",
    "ts": "1446121450.000706",
    "id": "29li2324",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "maybe ill store my enums as strings and have helper methods...",
    "ts": "1446121470.000707",
    "id": "29li2325",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: you can store a field as string provide it as  `enum` via getter/etc for public use",
    "ts": "1446122033.000708",
    "id": "29li2326",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "i’m definitely doing more work.. but i like it so far..",
    "ts": "1446122323.000709",
    "id": "29li2327",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: at least you have to write less code in compare to `SQLBrite` (BTW, somebody please high five from me to Jake on Droidcon), and `StorIO` has nicer API :simple_smile:",
    "ts": "1446123091.000710",
    "id": "29li2328",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "wharton?",
    "ts": "1446123117.000711",
    "id": "29li2329",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "yep",
    "ts": "1446123345.000712",
    "id": "29li2330",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "StorIO looks pretty good, ill try and play around with it - nice work <@U091EBYSU> !",
    "ts": "1446123896.000713",
    "id": "29li2331",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04U5KS3Z>: aww, thanks!",
    "ts": "1446124030.000714",
    "id": "29li2332",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "np im always in the search for a good db solution",
    "ts": "1446124064.000715",
    "id": "29li2333",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: i’ve historically used DD, with find() methods to get related objects on my entity.. whats a neat way to do that with storIO?",
    "ts": "1446124677.000716",
    "id": "29li2334",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "only thing i can think of is a static variable of the db handle",
    "ts": "1446124695.000717",
    "id": "29li2335",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: StorIO is not ORM, so it does not generate any kind of SQL for you, it will be a regular query to the db\n\n```\nstorIOSQLite\n  .get()\n  .listOfObjects(Your.class) // or cursor()\n  .withQuery(Query.builder() // btw, Queries are immutable so you can save and share them, see sample app\n    ...)\n  .prepare()\n  .createObservable() // or executeAsBlocking()\n```",
    "ts": "1446125217.000718",
    "id": "29li2336",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "i did it! i’m fully integrated with StorIO.. and sugarOrm free",
    "ts": "1446126298.000719",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U091EBYSU"
        ],
        "count": 1
      }
    ],
    "id": "29li2337",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "whats the easiest way to blow away my database on startup while im in heavy development without going into the app settings and clearing data?",
    "ts": "1446126343.000720",
    "id": "29li2338",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: i often like going `object.getListOfRelatedObjects()` how can i organise my code to achieve this?",
    "ts": "1446126490.000721",
    "id": "29li2339",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: it's totally up to you! Choose any way that fits your needs. \n\n1. Make kind of relations between entities and resolve related entities at time of retrieving parent entity, for example retrieve all tweets of the user at time of retrieving user from db.\n2. Just provide a method to from the entity to do this, example  `someUser.getTweets(storIOSQLite)` which will use retrieve all tweets for this user.",
    "ts": "1446127921.000722",
    "id": "29li2340",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEHN9M0",
    "subtype": "channel_join",
    "text": "<@U0DEHN9M0|alexdao> has joined the channel",
    "ts": "1446132295.000723",
    "id": "29li2341",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DELUE7R",
    "subtype": "channel_join",
    "text": "<@U0DELUE7R|chemouna> has joined the channel",
    "ts": "1446135033.000724",
    "id": "29li2342",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "subtype": "channel_join",
    "text": "<@U0DEXQR0X|jesse> has joined the channel",
    "ts": "1446142059.000725",
    "id": "29li2343",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "Does anyone here have experience with Android Volley?",
    "ts": "1446142093.000726",
    "id": "29li2344",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "I'd like to leverage Volley's cache for offline access, however, I get a network connection error when I'm offline.",
    "ts": "1446142178.000727",
    "id": "29li2345",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "I can see that responses are being added to the cache.",
    "ts": "1446142213.000728",
    "id": "29li2346",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "are you certain your servers headers have cache responses?",
    "ts": "1446142307.000729",
    "id": "29li2347",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I dont use volley but thats general an issue you see if the content is not indicating it should be cached the network layer will just keep assuming it has to download it again if the headers of the next request changed",
    "ts": "1446142368.000730",
    "id": "29li2348",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "or in this case it cant even get that far",
    "ts": "1446142379.000731",
    "id": "29li2349",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "<@U055GGAHS>: I'm sure they do not, however I sorta monkey patched the response by overriding `parseNetworkResponse`.",
    "ts": "1446142457.000732",
    "id": "29li2350",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "And I've stepped through the caching logic, I can see the responses being added to the cache.",
    "ts": "1446142490.000733",
    "id": "29li2351",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "¯\\_(ツ)_/¯",
    "ts": "1446142553.000734",
    "id": "29li2352",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": ":stuck_out_tongue: thanks anywho",
    "ts": "1446142564.000735",
    "id": "29li2353",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "i dont think you will find many people using volley so SO might be a better resource",
    "ts": "1446142565.000736",
    "id": "29li2354",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "Do you have a preferred networking library?",
    "ts": "1446142591.000737",
    "id": "29li2355",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "most people seem to be using retrofit and/or okhttp",
    "ts": "1446142625.000738",
    "id": "29li2356",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I use ION mostly",
    "ts": "1446142635.000739",
    "id": "29li2357",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "+1 for okhttp/retrofit",
    "ts": "1446142729.000740",
    "id": "29li2358",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "well you shouldn’t trust him ^ but everyone else is ok",
    "ts": "1446142745.000741",
    "id": "29li2359",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "I ended up with Volley because the feature list looked good and it was listed <http://developer.android.com/training/volley/index.html> . . . looked vaguely official.",
    "attachments": [
      {
        "text": "Volley: Easy, Fast Networking for Android Volley is an HTTP library that makes networking for Android apps easier and most importantly, faster. Volley is available through the open AOSP repository. Volley offers the following benefits: Volley excels at…",
        "fallback": "Volley: Easy, Fast Networking for Android Volley is an HTTP library that makes networking for Android apps easier and most importantly, faster. Volley is available through the open AOSP repository. Volley offers the following benefits: Volley excels at…",
        "from_url": "http://developer.android.com/training/volley/index.html",
        "id": 1
      }
    ],
    "ts": "1446142785.000742",
    "id": "29li2360",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "But there's essentially no documentation.",
    "ts": "1446142792.000744",
    "id": "29li2361",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "ah well let me introduce you to your first major “great the google documentation burned me\"",
    "ts": "1446142832.000745",
    "id": "29li2362",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "always second guess anything google says because they say shit then do something else entirely in their own software. You can’t trust those guys",
    "ts": "1446142869.000746",
    "id": "29li2363",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "So of the options listed above, can anyone speak to what works well for offline access?",
    "ts": "1446142871.000747",
    "id": "29li2364",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "ION works properly when the server is sending correct headers",
    "ts": "1446142904.000748",
    "id": "29li2365",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I haven’t tried ‘fixing’ the headers like you apparently need to do but it should be possible through its configuration",
    "ts": "1446142937.000749",
    "id": "29li2366",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "okhttp is likely the exact same, you should be able to do it but it would be better to fix the server tbh",
    "ts": "1446142953.000750",
    "id": "29li2367",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "Great, thanks for the tips.",
    "ts": "1446143012.000751",
    "id": "29li2368",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "for clarity i think the main difference between okhttp and ion is which android deity you align with. I prefer Koushik, seems most people prefer Jake",
    "ts": "1446143122.000752",
    "id": "29li2369",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "these names are alien to me. Are there any atheists in the community?",
    "ts": "1446143344.000753",
    "id": "29li2370",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "i assure you, you know both you just didn’t realize it",
    "ts": "1446143426.000754",
    "id": "29li2371",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<https://www.linkedin.com/pub/koushik-dutta/5/517/3a5> (clockwordmod, cynanogen)",
    "ts": "1446143519.000755",
    "id": "29li2372",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "most of the libraries i use, i use just because i haven't tried the alternatives yet :stuck_out_tongue:",
    "ts": "1446143533.000756",
    "id": "29li2373",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<https://www.linkedin.com/in/jakewharton> (everything square basically)",
    "ts": "1446143549.000757",
    "id": "29li2374",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "ION looks cleaner",
    "ts": "1446143580.000758",
    "id": "29li2375",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<@U0542GLTE>: gave on a talk on some of options I believe",
    "ts": "1446143912.000759",
    "id": "29li2376",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "Is there anymore to the ION docs?",
    "ts": "1446144046.000760",
    "id": "29li2377",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "kinda.. <https://github.com/koush/ion/tree/master/ion/test/src/com/koushikdutta/ion/test>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "koush/ion",
        "title_link": "https://github.com/koush/ion/tree/master/ion/test/src/com/koushikdutta/ion/test",
        "text": "ion - Android Asynchronous Networking and Image Loading",
        "fallback": "GitHub: koush/ion",
        "thumb_url": "https://avatars1.githubusercontent.com/u/73924?v=3&s=400",
        "from_url": "https://github.com/koush/ion/tree/master/ion/test/src/com/koushikdutta/ion/test",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1446144188.000761",
    "id": "29li2378",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "you can supplement that information with this too <https://github.com/koush/AndroidAsync> as ION is based on androidasync",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "koush/AndroidAsync",
        "title_link": "https://github.com/koush/AndroidAsync",
        "text": "AndroidAsync - Asynchronous socket, http (client+server), websocket, and <http://socket.io|socket.io> library for android. Based on nio, not threads.",
        "fallback": "GitHub: koush/AndroidAsync",
        "thumb_url": "https://avatars1.githubusercontent.com/u/73924?v=3&s=400",
        "from_url": "https://github.com/koush/AndroidAsync",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1446144220.000763",
    "id": "29li2379",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<http://www.slides.com/austinmusice|www.slides.com/austinmusice>",
    "ts": "1446144269.000765",
    "id": "29li2380",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "It’s the networking with Android one",
    "ts": "1446144275.000766",
    "id": "29li2381",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "btw <@U0542GLTE>, was your picture taking by a bar phone from 96? its like 0.3MP",
    "ts": "1446144501.000767",
    "reactions": [
      {
        "name": "trollface",
        "users": [
          "U055GGAHS",
          "U04U5KS3Z"
        ],
        "count": 2
      }
    ],
    "id": "29li2382",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "such definition, much pixels",
    "ts": "1446144516.000768",
    "id": "29li2383",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Just pulled from g+ that way",
    "ts": "1446144893.000769",
    "id": "29li2384",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "They are probably trying to save space so the profile pictures don't cost them more than the content. ",
    "ts": "1446144913.000770",
    "id": "29li2385",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DEXQR0X",
    "text": "This seems to answer the question about ignoring the caching headers: <https://github.com/koush/ion/issues/448>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Feature: force cache · Issue #448 · koush/ion · GitHub",
        "title_link": "https://github.com/koush/ion/issues/448",
        "text": "In my app, I'm downloading some csv files from a remote server that I know they are not changing in few minutes. That server that does not allow cache Cache-Control:no-store, no-cache, must-revali...",
        "fallback": "GitHub: Feature: force cache · Issue #448 · koush/ion",
        "thumb_url": "https://avatars1.githubusercontent.com/u/3747027?v=3&s=400",
        "from_url": "https://github.com/koush/ion/issues/448",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1446145164.000771",
    "id": "29li2386",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "pinned_item",
    "user": "U07DEGHHT",
    "item_type": "C",
    "attachments": [
      {
        "fallback": "[October 29th, 2015 11:25 AM] ian.shaun.thomas: for clarity i think the main difference between okhttp and ion is which android deity you align with. I prefer Koushik, seems most people prefer Jake",
        "ts": "1446143122.000752",
        "author_subname": "ian.shaun.thomas",
        "channel_id": "C054ZUY2W",
        "channel_name": "libraries",
        "is_msg_unfurl": true,
        "text": "for clarity i think the main difference between okhttp and ion is which android deity you align with. I prefer Koushik, seems most people prefer Jake",
        "author_name": "Ian 🇺🇸 Thomas",
        "author_link": "https://androidchat.slack.com/team/ian.shaun.thomas",
        "author_icon": "https://avatars.slack-edge.com/2015-06-04/5231744419_89a1eb3c0869d6ab7d32_48.jpg",
        "mrkdwn_in": [
          "text"
        ]
      }
    ],
    "text": "<@U07DEGHHT|nickpontiff> pinned a message to this channel.",
    "ts": "1446145174.000773",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U055GGAHS"
        ],
        "count": 1
      }
    ],
    "id": "29li2387",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "i dont think that’s true at all",
    "ts": "1446145561.000774",
    "id": "29li2388",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "okhttp has great docs",
    "ts": "1446145594.000775",
    "id": "29li2389",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "so does retrofit",
    "ts": "1446145596.000776",
    "id": "29li2390",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "volley has none.",
    "ts": "1446145599.000777",
    "id": "29li2391",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "has nothing to do with who wrote it",
    "ts": "1446145607.000778",
    "id": "29li2392",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I still don’t get why Google recommends Volley",
    "ts": "1446147131.000779",
    "id": "29li2393",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I don’t get why they made volley",
    "ts": "1446147173.000780",
    "id": "29li2394",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "when they made it, it was like 2 years later than they should have because good options already existed",
    "ts": "1446147190.000781",
    "id": "29li2395",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DF58EJD",
    "subtype": "channel_join",
    "text": "<@U0DF58EJD|cosic> has joined the channel",
    "ts": "1446147576.000782",
    "id": "29li2396",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "wasn't the release literally just the project with no documentation?",
    "ts": "1446147690.000783",
    "id": "29li2397",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "they had a talk on it at IO that year",
    "ts": "1446148181.000784",
    "id": "29li2398",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i'm guessing there's a lot of red tape around using libraries they didn't make themselves",
    "ts": "1446148423.000785",
    "id": "29li2399",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "and every app they make includes networking",
    "ts": "1446148447.000786",
    "id": "29li2400",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "does google actually recommend it",
    "ts": "1446150374.000787",
    "id": "29li2401",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "and it was written a long time ago",
    "ts": "1446150388.000788",
    "id": "29li2402",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "before okhttp i think",
    "ts": "1446150393.000789",
    "id": "29li2403",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yes, yes, and yes",
    "ts": "1446150401.000790",
    "id": "29li2404",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "i’m not sure its really “recommended\"",
    "ts": "1446150429.000791",
    "id": "29li2405",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "just like people say glide is “recommended\"",
    "ts": "1446150462.000792",
    "id": "29li2406",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U0542GLTE|amusice> uploaded a file: <https://androidchat.slack.com/files/amusice/F0DF3BRSQ/screen_shot_2015-10-29_at_4.28.28_pm.png|Screen Shot 2015-10-29 at 4.28.28 PM.png>",
    "file": {
      "id": "F0DF3BRSQ",
      "created": 1446150527,
      "timestamp": 1446150527,
      "name": "Screen Shot 2015-10-29 at 4.28.28 PM.png",
      "title": "Screen Shot 2015-10-29 at 4.28.28 PM.png",
      "mimetype": "image/png",
      "filetype": "png",
      "pretty_type": "PNG",
      "user": "U0542GLTE",
      "editable": false,
      "size": 112513,
      "mode": "hosted",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F0DF3BRSQ/screen_shot_2015-10-29_at_4.28.28_pm.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F0DF3BRSQ/download/screen_shot_2015-10-29_at_4.28.28_pm.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_64": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_64.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_80": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_80.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_360.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360_w": 239,
      "thumb_360_h": 360,
      "thumb_480": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_480.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_480_w": 318,
      "thumb_480_h": 480,
      "thumb_160": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_160.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_720": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_720.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_720_w": 478,
      "thumb_720_h": 720,
      "thumb_960": "https://files.slack.com/files-tmb/T04PLNDMP-F0DF3BRSQ-fbd5eee275/screen_shot_2015-10-29_at_4.28.28_pm_960.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_960_w": 637,
      "thumb_960_h": 960,
      "image_exif_rotation": 1,
      "original_w": 642,
      "original_h": 968,
      "permalink": "https://androidchat.slack.com/files/amusice/F0DF3BRSQ/screen_shot_2015-10-29_at_4.28.28_pm.png",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F0DF3BRSQ-460e3daa5e",
      "channels": [
        "C054ZUY2W"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U0542GLTE",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U0542GLTE|amusice>",
    "bot_id": null,
    "ts": "1446150530.000793",
    "id": "29li2407",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "i’m not sure i’d go by those",
    "ts": "1446150593.000794",
    "id": "29li2408",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "AFAIK they also mention asynctasks. and putting all your logic in activities and fragments",
    "ts": "1446150621.000795",
    "id": "29li2409",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Oh, I am just saying, literally in the getting started docs",
    "ts": "1446151930.000796",
    "id": "29li2410",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "That’s why you see people say that all the time",
    "ts": "1446151935.000797",
    "id": "29li2411",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "yeah those people also say because google bought bump, “glide is from google\"",
    "ts": "1446153191.000798",
    "id": "29li2412",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: hey im cooking with gas now! can u give me some ideas about how i can implement an adapter to drive my list view while being non blocking with rxjava?",
    "ts": "1446156020.000799",
    "id": "29li2413",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE>: sure! Just make `get()…createObservable()`, subscribe to it and it will emit new result each time tables used in query changed!",
    "ts": "1446156112.000800",
    "id": "29li2414",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "That’s basically how  StorIO makes work with db reactive!",
    "ts": "1446156149.000801",
    "id": "29li2415",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: i have a listview which delegates to another class which allows for each row to have their own different view. i just cant grok how to get the observable to update each individual item!",
    "ts": "1446156866.000802",
    "id": "29li2416",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "also in other words, each item in my listview needs to do another query to fetch out results from my db",
    "ts": "1446156990.000803",
    "id": "29li2417",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "i understand storIO is not an ORM so which is why i have to first get a list of my entities, then for each entity i have to get it’s related child entities",
    "ts": "1446157036.000804",
    "id": "29li2418",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "i could easily run `executeAsBlocking` but i want to setup the reactive pattern in my app",
    "ts": "1446157143.000805",
    "id": "29li2419",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "oh… do i have to create a get resolver which can figure out the object graph  … ?",
    "ts": "1446157240.000806",
    "id": "29li2420",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> We have a sample of that in the sample app! Also, if you're going to display a list of entity with subentities, I'd suggest you to use `JOIN` in your query to make it efficient, don't do such mappings in memory because it's much slower. ",
    "ts": "1446157444.000807",
    "id": "29li2421",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "but then i’ll have to create a get resolver right? then i feel like im doing ORM framework-y stuff! doh!",
    "ts": "1446157483.000808",
    "id": "29li2422",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U04UBTWEE|trung> uploaded a file: <https://androidchat.slack.com/files/trung/F0DFDJQ2H/pasted_image_at_2015_10_30_09_25_am.png|do u know why AS thinks it cant find these files?> and commented: using find class i can locate them.. but the editor doesn’t know about them",
    "file": {
      "id": "F0DFDJQ2H",
      "created": 1446157551,
      "timestamp": 1446157551,
      "name": "Pasted image at 2015_10_30 09_25 AM.png",
      "title": "do u know why AS thinks it cant find these files?",
      "mimetype": "image/png",
      "filetype": "png",
      "pretty_type": "PNG",
      "user": "U04UBTWEE",
      "editable": false,
      "size": 1152043,
      "mode": "hosted",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F0DFDJQ2H/pasted_image_at_2015_10_30_09_25_am.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F0DFDJQ2H/download/pasted_image_at_2015_10_30_09_25_am.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_64": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_64.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_80": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_80.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_360.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360_w": 360,
      "thumb_360_h": 220,
      "thumb_480": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_480.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_480_w": 480,
      "thumb_480_h": 293,
      "thumb_160": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_160.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_720": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_720.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_720_w": 720,
      "thumb_720_h": 440,
      "thumb_960": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_960.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_960_w": 960,
      "thumb_960_h": 587,
      "thumb_1024": "https://files.slack.com/files-tmb/T04PLNDMP-F0DFDJQ2H-d2895f7e9c/pasted_image_at_2015_10_30_09_25_am_1024.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_1024_w": 1024,
      "thumb_1024_h": 626,
      "image_exif_rotation": 1,
      "original_w": 3840,
      "original_h": 2346,
      "permalink": "https://androidchat.slack.com/files/trung/F0DFDJQ2H/pasted_image_at_2015_10_30_09_25_am.png",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F0DFDJQ2H-1c3221c392",
      "channels": [
        "C054ZUY2W"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 1,
      "initial_comment": {
        "id": "Fc0DFJQEL8",
        "created": 1446157551,
        "timestamp": 1446157551,
        "user": "U04UBTWEE",
        "is_intro": true,
        "comment": "using find class i can locate them.. but the editor doesn’t know about them",
        "channel": ""
      }
    },
    "user": "U04UBTWEE",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U04UBTWEE|trung>",
    "bot_id": null,
    "ts": "1446157557.000809",
    "id": "29li2423",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> Build project, classes are not generated yet :) ",
    "ts": "1446157886.000810",
    "id": "29li2424",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "omg duh",
    "ts": "1446157912.000811",
    "id": "29li2425",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> you don't have to do ORMs yourself, I mean, work with StorIO just as with regular `SQLiteDatabase` or `ContentResolver`, just with better API and Rx support ",
    "ts": "1446157990.000812",
    "id": "29li2426",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "yep! ill keep that in mind.. when it gets hard, i have a feeling there may be a better way",
    "ts": "1446158077.000813",
    "id": "29li2427",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> take a look at `SQLBrite`, its API even more low-level, but Square uses it :) ",
    "ts": "1446158352.000814",
    "id": "29li2428",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: i did consider it, but it’s too low level",
    "ts": "1446158375.000815",
    "id": "29li2429",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "StorIO has so far met all my requirements, nice api, reactive, decent docs, EXAMPLES",
    "ts": "1446158436.000816",
    "id": "29li2430",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "design is hard….",
    "ts": "1446158447.000817",
    "id": "29li2431",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "im not sure how to organise all this…",
    "ts": "1446158455.000818",
    "id": "29li2432",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "1. query once, then use resolvers to map out to object graph",
    "ts": "1446158474.000819",
    "id": "29li2433",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "2. or do it on demand using entities which know about StorIOSQLite with more of a domain driven approach…",
    "ts": "1446158533.000820",
    "id": "29li2434",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U091EBYSU>: can u give me ideas on how i could do 1? with GetResolvers ?",
    "ts": "1446158651.000821",
    "id": "29li2435",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> 1 can be achieved with custom GetResolver that maps the results into entity with combination of objects, something like `UserWithTweets`. You then make query with `join` and parse `User` and `Tweets` separately and combining them into one and returning it as a result. ",
    "ts": "1446158974.000822",
    "id": "29li2436",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "Sorry, I'm on mobile now, hard to write. ",
    "ts": "1446158996.000823",
    "id": "29li2437",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U04UBTWEE> basic solution if you need to deal with combined entity (btw, usually we just try to avoid it) - create it as separate entity!",
    "edited": {
      "user": "U091EBYSU",
      "ts": "1446159318.000000"
    },
    "ts": "1446159309.000824",
    "id": "29li2438",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]