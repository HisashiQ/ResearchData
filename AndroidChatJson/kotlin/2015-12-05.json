[
  {
    "user": "U061HDV96",
    "text": "Kotlin really is refreshing to write",
    "ts": "1449363403.000196",
    "id": "05ko457",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U061HDV96>: now you see why I was trying so hard to be able to use it at my company",
    "ts": "1449364036.000197",
    "id": "05ko458",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "<@U053LEHJN>: so I inherit from RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt;. How do I 'disable' that primary constructor and only allow initialisation via the secondary constructor?",
    "ts": "1449364381.000198",
    "id": "05ko459",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Just throw an error when the primary one is called",
    "ts": "1449364395.000199",
    "id": "05ko460",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "All of my efforts fail so far..",
    "ts": "1449364558.000200",
    "id": "05ko461",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "I don't want to make the variable optional because I know it'll never be called with that constructor",
    "ts": "1449364591.000201",
    "id": "05ko462",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U061HDV96> you could make the primary private, I think",
    "ts": "1449364971.000202",
    "id": "05ko463",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Nvm, that wasn't the problem",
    "ts": "1449364985.000203",
    "id": "05ko464",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Solved it, it shouldn't have been in the setter anyway. Could've made it 'final'",
    "ts": "1449365315.000219",
    "id": "05ko465",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "kotlin itself is pretty awesome, since i went back to java i've had thoughts like \"damn this would be so much easier in kotlin\" fairly often",
    "ts": "1449368104.000234",
    "id": "05ko466",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i'm just waiting for the tooling in android studio to be improved for kotlin",
    "ts": "1449368123.000235",
    "id": "05ko467",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "it didn't really cooperate with me too well",
    "ts": "1449368133.000236",
    "id": "05ko468",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Ya, currently I'm getting an Unresolved reference when trying to override an inner class",
    "ts": "1449368249.000237",
    "id": "05ko469",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Which is odd, because when I remove the initialiser, it says: \"This type has an initializer, and thus must be initialized here\"",
    "edited": {
      "user": "U061HDV96",
      "ts": "1449368366.000000"
    },
    "ts": "1449368354.000238",
    "id": "05ko470",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]