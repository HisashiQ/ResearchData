[
  {
    "user": "U055GGAHS",
    "text": "finally getting started in kotlin",
    "ts": "1475610829.000260",
    "id": "04ko2573",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so interface methods can not specify return types?",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1475610860.000000"
    },
    "ts": "1475610851.000261",
    "id": "04ko2574",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "or is my problem that I can’t use boolean.. yeah ignore me",
    "ts": "1475610922.000263",
    "id": "04ko2575",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Yeah, no primitives for you :stuck_out_tongue:",
    "ts": "1475611026.000264",
    "id": "04ko2576",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "clearly",
    "ts": "1475611036.000265",
    "id": "04ko2577",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "how does that work with performance? Should I still do high performance code in java?",
    "ts": "1475611054.000266",
    "id": "04ko2578",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I don't think that will be noticeable, but I haven't seen any proper benchmarks (haven't looked either)",
    "ts": "1475611092.000269",
    "id": "04ko2579",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "holy shit, I can just copy/paste java code and it rewrites it as kotlin code",
    "ts": "1475611111.000270",
    "id": "04ko2580",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": ":mindblown:",
    "ts": "1475611116.000271",
    "id": "04ko2581",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "yeah that \"works\"",
    "edited": {
      "user": "U04TK850N",
      "ts": "1475611188.000000"
    },
    "ts": "1475611185.000272",
    "id": "04ko2582",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "messes up comments but otherwise :thumbsup:",
    "ts": "1475611197.000274",
    "id": "04ko2583",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "also noticed that creating block comments doesn’t auto populate parameters, return types, or exceptions :disappointed:",
    "ts": "1475611217.000275",
    "id": "04ko2584",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "that should work",
    "ts": "1475611342.000276",
    "id": "04ko2585",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "you use `/**` right?",
    "ts": "1475611354.000277",
    "id": "04ko2586",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> Kotlin unifies primitives and their respective Java-ish types",
    "ts": "1475611804.000278",
    "id": "04ko2587",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "but it does the \"right thing\" automatically under the hood",
    "ts": "1475611812.000279",
    "id": "04ko2588",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "and should only box/unbox when necessary",
    "ts": "1475611818.000280",
    "id": "04ko2589",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "ok",
    "ts": "1475611874.000281",
    "id": "04ko2590",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "any fix for formatting?",
    "ts": "1475611878.000282",
    "id": "04ko2591",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "conversion breaks my javadoc formats and the formatter seems to be useless",
    "ts": "1475611899.000283",
    "id": "04ko2592",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I just want the default out of the box formatting (that intellij gives you for java)",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1475611943.000000"
    },
    "ts": "1475611933.000284",
    "id": "04ko2593",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> docs should work fine",
    "ts": "1475612124.000286",
    "id": "04ko2594",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<https://kotlinlang.org/docs/reference/kotlin-doc.html>",
    "attachments": [
      {
        "service_name": "Kotlin",
        "title": "Documenting Kotlin Code",
        "title_link": "https://kotlinlang.org/docs/reference/kotlin-doc.html",
        "text": "Kotlin is a statically typed programming language for the JVM, Android and the browser, 100% interoperable with Java",
        "fallback": "Kotlin: Documenting Kotlin Code",
        "image_url": "https://kotlinlang.org/assets/images/twitter-card/kotlin_800x320.png",
        "from_url": "https://kotlinlang.org/docs/reference/kotlin-doc.html",
        "image_width": 625,
        "image_height": 250,
        "image_bytes": 14563,
        "service_icon": "https://kotlinlang.org/assets/images/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1475612138.000287",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "04ko2595",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "when I do /** &lt;enter&gt; on a kotlin fuction I get a empty block comment regardless of if it takes parameters, has a return type, or throws exceptions",
    "ts": "1475612179.000289",
    "id": "04ko2596",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "is that not normal?",
    "ts": "1475612186.000290",
    "id": "04ko2597",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> honestly I never noticed if it filled it in for you or not - a quick scan of Kotlin's issue tracker doesn't show anything either",
    "ts": "1475612468.000291",
    "id": "04ko2598",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "hmm ok i can look into it later",
    "ts": "1475612480.000292",
    "id": "04ko2599",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> 1.0.4?",
    "ts": "1475612506.000293",
    "id": "04ko2600",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "what about java kotlin interop.. I just ran the auto convert for java -&gt; kotlin on some interfaces and the java implementation classes can see the interface but they don’t understand the methods",
    "ts": "1475612511.000294",
    "id": "04ko2601",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yes",
    "ts": "1475612513.000295",
    "id": "04ko2602",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U055GGAHS|ian.shaun.thomas> uploaded a file: <https://androidchat.slack.com/files/ian.shaun.thomas/F2KAJEAAD/screen_shot_2016-10-04_at_4.22.02_pm.png|this error>",
    "file": {
      "id": "F2KAJEAAD",
      "created": 1475612533,
      "timestamp": 1475612533,
      "name": "Screen Shot 2016-10-04 at 4.22.02 PM.png",
      "title": "this error",
      "mimetype": "image/png",
      "filetype": "png",
      "pretty_type": "PNG",
      "user": "U055GGAHS",
      "editable": false,
      "size": 11562,
      "mode": "hosted",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F2KAJEAAD/screen_shot_2016-10-04_at_4.22.02_pm.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F2KAJEAAD/download/screen_shot_2016-10-04_at_4.22.02_pm.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_64": "https://files.slack.com/files-tmb/T04PLNDMP-F2KAJEAAD-75109f7c52/screen_shot_2016-10-04_at_4.22.02_pm_64.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_80": "https://files.slack.com/files-tmb/T04PLNDMP-F2KAJEAAD-75109f7c52/screen_shot_2016-10-04_at_4.22.02_pm_80.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360": "https://files.slack.com/files-tmb/T04PLNDMP-F2KAJEAAD-75109f7c52/screen_shot_2016-10-04_at_4.22.02_pm_360.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "thumb_360_w": 347,
      "thumb_360_h": 68,
      "thumb_160": "https://files.slack.com/files-tmb/T04PLNDMP-F2KAJEAAD-75109f7c52/screen_shot_2016-10-04_at_4.22.02_pm_160.png?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "image_exif_rotation": 1,
      "original_w": 347,
      "original_h": 68,
      "permalink": "https://androidchat.slack.com/files/ian.shaun.thomas/F2KAJEAAD/screen_shot_2016-10-04_at_4.22.02_pm.png",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F2KAJEAAD-ec59edc5e3",
      "channels": [
        "C0BQU1TDF"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U055GGAHS",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U055GGAHS|ian.shaun.thomas>",
    "bot_id": null,
    "ts": "1475612535.000296",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "04ko2603",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "wait nope I think the auto thing messed up",
    "ts": "1475612559.000297",
    "id": "04ko2604",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> yeah the converter isn't perfect",
    "ts": "1475612588.000298",
    "id": "04ko2605",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "can kotlin interfaces not extend other interfaces?",
    "ts": "1475612592.000299",
    "id": "04ko2606",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "they can",
    "ts": "1475612596.000300",
    "id": "04ko2607",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "interface A : B,C { \n\n?",
    "ts": "1475612609.000301",
    "id": "04ko2608",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "yup",
    "ts": "1475612613.000302",
    "id": "04ko2609",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "kk let me try that",
    "ts": "1475612617.000303",
    "id": "04ko2610",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U055GGAHS> also, every other \"patch\" release is focused on IDE/tooling improvements",
    "ts": "1475612632.000304",
    "id": "04ko2611",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "neat",
    "ts": "1475612632.000305",
    "id": "04ko2612",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "so 1.0.4 was compiler/language focused",
    "ts": "1475612651.000306",
    "id": "04ko2613",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "1.0.5 has IDE fixes mainly",
    "ts": "1475612658.000307",
    "id": "04ko2614",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "when is that coming out?",
    "ts": "1475612838.000308",
    "id": "04ko2615",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I like that the kotlin features come from the plugin so I dont have to wait for stupid google to update AS",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1475612864.000000"
    },
    "ts": "1475612863.000309",
    "id": "04ko2616",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "<@U055GGAHS> welcome to the glorious world of better Groovy",
    "ts": "1475613113.000311",
    "id": "04ko2617",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "lol",
    "ts": "1475613129.000312",
    "id": "04ko2618",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "interesting that it doesn’t want me to import Float but doesn’t offer me parseFloat on the kotlin float object",
    "ts": "1475613197.000313",
    "id": "04ko2619",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "oh because I can call toFloat on the string",
    "ts": "1475613226.000314",
    "id": "04ko2620",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "<@U055GGAHS> It looks like Java float",
    "ts": "1475613303.000315",
    "id": "04ko2621",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "but it’s not",
    "ts": "1475613307.000316",
    "id": "04ko2622",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "right",
    "ts": "1475613313.000317",
    "id": "04ko2623",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "Synthetic Kotlin float",
    "ts": "1475613316.000318",
    "id": "04ko2624",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "this is amazing",
    "ts": "1475614803.000319",
    "id": "04ko2625",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "/gif tony stark glorious",
    "ts": "1475614862.000320",
    "id": "04ko2626",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "",
    "bot_id": "B0GH4RVHU",
    "attachments": [
      {
        "fallback": "<https://67.media.tumblr.com/643d6a7086e2dd95ba23017a5ce14843/tumblr_noxlb8bXNm1u5m5i7o5_r1_250.gif>",
        "image_url": "https://67.media.tumblr.com/643d6a7086e2dd95ba23017a5ce14843/tumblr_noxlb8bXNm1u5m5i7o5_r1_250.gif",
        "image_width": 177,
        "image_height": 177,
        "image_bytes": 1052030,
        "is_animated": true,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1475614863.000321",
    "id": "04ko2627",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "/gif tony start explosion",
    "ts": "1475614906.000322",
    "id": "04ko2628",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "",
    "bot_id": "B0GH4RVHU",
    "attachments": [
      {
        "fallback": "<http://i.imgur.com/CbyIyJR.gif>",
        "image_url": "http://i.imgur.com/CbyIyJR.gif",
        "image_width": 500,
        "image_height": 206,
        "image_bytes": 752421,
        "is_animated": true,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1475614906.000323",
    "id": "04ko2629",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "another follower in the church of kotlin?",
    "ts": "1475614928.000324",
    "id": "04ko2630",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so less noob question",
    "ts": "1475615119.000325",
    "id": "04ko2631",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "in java I would have something like\n\n```\nString line;\nwhile ((line = reader.readLine()) != null) {\n…\n}\n```",
    "ts": "1475615145.000326",
    "id": "04ko2632",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "kotlin straight converted that but it doesn’t like the null in there. Is there another pattern that I should use or should I just opt to have a null here",
    "ts": "1475615170.000327",
    "id": "04ko2633",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "readLine returns null at the end so it seems like opting for nullability is the best option. Is that correct?",
    "ts": "1475615212.000328",
    "id": "04ko2634",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "What did Kotlin convert it to?",
    "ts": "1475615243.000329",
    "id": "04ko2635",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "it kept it as written in java and then tagged it red because the string isn’t initialized and further said assignments are not expressions",
    "ts": "1475615321.000330",
    "id": "04ko2636",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<https://discuss.kotlinlang.org/t/assignment-not-allow-in-while-expression/339>",
    "attachments": [
      {
        "service_name": "Kotlin Discussions",
        "title": "Assignment not allow in while expression?",
        "title_link": "https://discuss.kotlinlang.org/t/assignment-not-allow-in-while-expression/339",
        "text": "Hi, In Java, I can do thing like this: BufferedReader reader = new BufferedReader(reader); String line = null; while ((line = reader.readLine()) != null) {   System.out.println(line); } However in Kotlin such thing is not allowed. I get error like \"Assignments are not expressions, and only expressions are allowed in this context\" So the best I can come up with is something like this, but I wonder is there a better to write this in Kotlin? I like the Java syntax better because it'...",
        "fallback": "Kotlin Discussions: Assignment not allow in while expression?",
        "thumb_url": "https://discuss.kotlinlang.org/uploads/kotlinlang/original/2X/c/c2d6f2e6ec50c055c140ddd4279c94dc79e70264.png",
        "from_url": "https://discuss.kotlinlang.org/t/assignment-not-allow-in-while-expression/339",
        "thumb_width": 32,
        "thumb_height": 32,
        "service_icon": "https://discuss.kotlinlang.org/uploads/kotlinlang/original/2X/c/c2d6f2e6ec50c055c140ddd4279c94dc79e70264.png",
        "id": 1
      }
    ],
    "ts": "1475615354.000331",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "04ko2637",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "looks like they have some goodness in kotlin I can just use",
    "ts": "1475615389.000333",
    "id": "04ko2638",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "Glorious",
    "ts": "1475615663.000334",
    "id": "04ko2639",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "<@U055GGAHS> in kotlin you just call `val myString = reader.readText()`. No need for that loop at all",
    "ts": "1475617838.000335",
    "id": "04ko2640",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "the stdlib is your friend",
    "ts": "1475617843.000336",
    "id": "04ko2641",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I need to process each line",
    "ts": "1475618432.000337",
    "id": "04ko2642",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "```\nval processedLines = reader.readText.split(“\\n”).map { line -&gt;\n\n}\n```",
    "ts": "1475618525.000338",
    "id": "04ko2643",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "It's a stream from a process so I may need to also early exit",
    "ts": "1475618588.000339",
    "id": "04ko2644",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "Can I do that ",
    "ts": "1475618599.000340",
    "id": "04ko2645",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "Hmm… :thinking_face: not sure…",
    "ts": "1475618785.000341",
    "id": "04ko2646",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I did see the lambda options but wasn't familiar enough to know my options with it",
    "ts": "1475619124.000342",
    "id": "04ko2647",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "You can use `reader.forEachLine{}` for proccessing each line",
    "ts": "1475619209.000343",
    "id": "04ko2648",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "^",
    "ts": "1475619226.000344",
    "id": "04ko2649",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "beat me to it",
    "ts": "1475619231.000345",
    "reactions": [
      {
        "name": "stuck_out_tongue_winking_eye",
        "users": [
          "U1HM4MPLJ"
        ],
        "count": 1
      }
    ],
    "id": "04ko2650",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "Lambdas: <https://kotlinlang.org/docs/reference/lambdas.html>",
    "attachments": [
      {
        "service_name": "Kotlin",
        "title": "Higher-Order Functions and Lambdas",
        "title_link": "https://kotlinlang.org/docs/reference/lambdas.html",
        "text": "Kotlin is a statically typed programming language for the JVM, Android and the browser, 100% interoperable with Java",
        "fallback": "Kotlin: Higher-Order Functions and Lambdas",
        "image_url": "https://kotlinlang.org/assets/images/twitter-card/kotlin_800x320.png",
        "from_url": "https://kotlinlang.org/docs/reference/lambdas.html",
        "image_width": 625,
        "image_height": 250,
        "image_bytes": 14563,
        "service_icon": "https://kotlinlang.org/assets/images/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1475619277.000346",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "04ko2651",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<@U1HM4MPLJ> can I exit out from that?",
    "ts": "1475620082.000348",
    "id": "04ko2652",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "You can `return@forEachLine`",
    "ts": "1475620139.000349",
    "id": "04ko2653",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "cool",
    "ts": "1475620181.000350",
    "id": "04ko2654",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "thank you",
    "ts": "1475620184.000351",
    "id": "04ko2655",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "I stand corrected. `forEachLine` is actually not an inline function. Hence non local return in the lambda is not possible. You'd have to use a slightly more verbose syntax. You can do this:\n```\nreader.useLines {\n  for (line in it) {\n    if (someCondition) return\n  }\n}\n```",
    "edited": {
      "user": "U1HM4MPLJ",
      "ts": "1475620982.000000"
    },
    "ts": "1475620939.000352",
    "id": "04ko2656",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "<@U055GGAHS> ^^",
    "ts": "1475620986.000354",
    "id": "04ko2657",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "ah was wondering been trying to figure out how to return from it lol",
    "ts": "1475621011.000355",
    "id": "04ko2658",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I saw return@forEachLine",
    "ts": "1475621034.000356",
    "id": "04ko2659",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "Should be possible",
    "ts": "1475621072.000357",
    "id": "04ko2660",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HM4MPLJ",
    "text": "AFAIK, non inlined lambdas generate an anonymous `FunctionX` and the code block is executed within an invoke method. There is no way to do a non-local return",
    "edited": {
      "user": "U1HM4MPLJ",
      "ts": "1475655285.000000"
    },
    "ts": "1475621161.000358",
    "id": "04ko2661",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<@U0542GLTE|amusice> has joined the channel",
    "subtype": "channel_join",
    "ts": "1475627649.000359",
    "id": "04ko2662",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "`return@forEachLine` works in that case",
    "ts": "1475650524.000360",
    "id": "04ko2663",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]