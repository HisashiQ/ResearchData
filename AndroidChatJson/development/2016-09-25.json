[
  {
    "user": "U2FKXE0N8",
    "text": "<@U2FKXE0N8|sumasian> has joined the channel",
    "subtype": "channel_join",
    "ts": "1474791987.001669",
    "id": "25de46474",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2FMJ8XFT",
    "text": "<@U2FMJ8XFT|mahone> has joined the channel",
    "subtype": "channel_join",
    "ts": "1474816807.001670",
    "id": "25de46475",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2FMJ8XFT",
    "text": "anyone there?",
    "ts": "1474816982.001671",
    "id": "25de46476",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2FMP139T",
    "text": "<@U2FMP139T|notsalty> has joined the channel",
    "subtype": "channel_join",
    "ts": "1474821610.001672",
    "id": "25de46477",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "So turns out abstracting realm is actually awkward as fuck. Who’d have thought?",
    "ts": "1474830715.001673",
    "id": "25de46478",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2FQ5DQ4E",
    "text": "<@U2FQ5DQ4E|kat> has joined the channel",
    "subtype": "channel_join",
    "ts": "1474861626.001676",
    "id": "25de46479",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2FQMDA31",
    "text": "<@U2FQMDA31|morgan.lutz> has joined the channel",
    "subtype": "channel_join",
    "ts": "1474863892.001677",
    "id": "25de46480",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1G221P2S",
    "text": "hey guys, had a question related to marshmallow permissions. I am constantly getting the \"Screen Overlay detected\" error dialog specifically when performing a certain function in my app. Its not consistent though and happens randomly after the necessary permissions have been asked upon clicking a button in that specific activity. As much as I have read about it online as to why is it caused...is there any specific reason behind this? Something that i could fix by code?",
    "ts": "1474869102.001678",
    "id": "25de46481",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "morning guys … Has anyone tried Redux architecture on some deeper level? I mean, I’ve tried it on some small demo apps and I like the idea actually pretty much, but would like to know some insights from real development … Are there some fatal drawbacks ? How does it scale ? Any insight will be helpful :slightly_smiling_face: Thanks!",
    "edited": {
      "user": "U2EHF260Z",
      "ts": "1474871089.000000"
    },
    "ts": "1474871029.001679",
    "id": "25de46482",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "Yeah we use a variation of it in production apps. Our variation wraps the `Store` to provide an Observable of the `AppState`.\n\nIf you’re using Java, the major drawbacks are boilerplate and immutably (lists especially). Kotlin softens these issues, although there is still a bunch of boilerplate.",
    "ts": "1474871368.001681",
    "id": "25de46483",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "In large apps reducer composition and the ‘god’ app state object can be painful.",
    "ts": "1474871484.001682",
    "id": "25de46484",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "Great to hear that it works in production … so you have one state object for whole application? isn’t there a way to store separate states ( i.e. each screen ) and have an global state just for some higher abstract information ?",
    "ts": "1474871811.001683",
    "id": "25de46485",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "Not if you’re following ‘real’ Redux. You can compose your `AppState` to look however you want though internally.",
    "ts": "1474872130.001684",
    "id": "25de46486",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "I haven’t really found a good reason to want to store a seperate state for each screen though",
    "ts": "1474872150.001685",
    "id": "25de46487",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "well, for me that god state object is a reason :slightly_smiling_face: .. but i don’t see the drawbacks yet, that’s why I am asking",
    "ts": "1474872197.001686",
    "id": "25de46488",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "ofc, not gonna do it if it just doesn’t outweight the costs",
    "ts": "1474872237.001687",
    "id": "25de46489",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "our state object might look something like:\n\n```\nclass  AppState {\n    ArtistState artistState;\n    NewsState newsState;\n}\n\nclass ArtistState {\n   boolean isLoading;\n   Throwable error;\n   Map&lt;String. Artist&gt; artists;\n   List&lt;String&gt; artistList;\n}\n```",
    "edited": {
      "user": "U0BBW096C",
      "ts": "1474872307.000000"
    },
    "ts": "1474872271.001688",
    "id": "25de46490",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "yea, okay :slightly_smiling_face: that looks nice … If I may ask, what architecture were you using before redux ? Would you make the switch again in retrospective ?",
    "ts": "1474872361.001690",
    "id": "25de46491",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "We tried a Flux architecture before Redux, but before that it MVP/ad-hoc.",
    "ts": "1474872435.001691",
    "id": "25de46492",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BBW096C",
    "text": "FWIW we’re using Redux for our new projects too",
    "ts": "1474872455.001692",
    "id": "25de46493",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2EHF260Z",
    "text": "good to know .. To be honest, I was pretty thrilled about MVP, but I quickly started to hate that ping-pong between presenter and view … when I saw redux, I fell in love but as we are now heavily understaffed, I can’t afford to just stop producing so I needed some validation that it at least is effective in production … I’ll look in to it more, thanks for the insights!",
    "edited": {
      "user": "U2EHF260Z",
      "ts": "1474872874.000000"
    },
    "ts": "1474872853.001693",
    "id": "25de46494",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]