[
  {
    "user": "U0KD8APJA",
    "subtype": "channel_join",
    "text": "<@U0KD8APJA|mertsimsek> has joined the channel",
    "ts": "1453806802.000242",
    "id": "26de21327",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KD9LE8P",
    "subtype": "channel_join",
    "text": "<@U0KD9LE8P|oz> has joined the channel",
    "ts": "1453808339.000243",
    "id": "26de21328",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KDMFV3L",
    "subtype": "channel_join",
    "text": "<@U0KDMFV3L|timnuwin> has joined the channel",
    "ts": "1453818674.000244",
    "id": "26de21329",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KDT6AEB",
    "subtype": "channel_join",
    "text": "<@U0KDT6AEB|ste> has joined the channel",
    "ts": "1453821869.000245",
    "id": "26de21330",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055JANKU",
    "text": "Anyone here who has experience in creating a 3d video experience using cardboard?",
    "ts": "1453832226.000246",
    "id": "26de21331",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "if only I could use non-default constructors in fragments.  my code would be so much nicer. :confused:",
    "ts": "1453833224.000247",
    "id": "26de21332",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JLWN2RH",
    "text": "<@U08KK98UU>: are you not using static methods for fragment construction?",
    "ts": "1453833310.000248",
    "id": "26de21333",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "I do… but that doesn’t solve the problem either",
    "ts": "1453833380.000249",
    "id": "26de21334",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "I guess I can still achieve what I want that way, though I need to turn everything Parcelable",
    "ts": "1453833791.000250",
    "id": "26de21335",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i wish the activity/fragment framework was redesigned as a whole :stuck_out_tongue:",
    "edited": {
      "user": "U0546QERR",
      "ts": "1453834279.000000"
    },
    "ts": "1453833938.000251",
    "id": "26de21336",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<@U0546QERR>: Why? They aren’t heavy classes, manage threading and memory really well, and have a clearly defined life cycle that prevents 89% of Android developers from leaking something in their AsyncTasks",
    "ts": "1453834278.000252",
    "reactions": [
      {
        "name": "trollface",
        "users": [
          "U0546QERR",
          "U0KACATSQ",
          "U04U5KS3Z"
        ],
        "count": 3
      }
    ],
    "id": "26de21337",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "I’m fairly new to using retrofit with RxAndroid so please excuse me if this is a ridiculous newb question :simple_smile: I need to download a zip file from a restful webservice. The file has the potential to be very large so I’m looking to stream the download. I figured out retrofits @Streaming annotation, but when I use it of course I get a Network on Main Thread error from android. Makes sense…I am observing on the mainThread so that’s not going to work. The obvious choice would be to observe on a different thread, but then that kind of breaks the whole reason I am using RxJava. I was looking into maybe concatMap, but wanted to get some feedback from people more familiar with this solution. How would you recommend I design this? Also, do you have any helpful links?",
    "ts": "1453835077.000254",
    "id": "26de21338",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "Maybe I should just go with something else entirely? This first file I’m downloading is basically a very large json file containing all the download links for other files and their associated metadata. So in the end I’m really looking for the best and most efficient way to go about doing something like this",
    "ts": "1453835339.000255",
    "id": "26de21339",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C1FB3PF",
    "text": "`observing` is nothing about where networking will happen",
    "ts": "1453836166.000256",
    "id": "26de21340",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C1FB3PF",
    "text": "check `subscribeOn`",
    "ts": "1453836178.000257",
    "id": "26de21341",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C1FB3PF",
    "text": "however observe should also happen on some io or background thread",
    "ts": "1453836198.000258",
    "id": "26de21342",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "^",
    "ts": "1453836228.000259",
    "id": "26de21343",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "subscribeOn Schedulers.newThread is what you want",
    "ts": "1453836272.000260",
    "id": "26de21344",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "observeOn sets the input data source thread, subscribeOn is how the data is handled. This could be important if a network call returns an observable (deferred), you need a thread to observe the call and then a thread to subscribe to the result",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1453836305.000000"
    },
    "ts": "1453836272.000261",
    "id": "26de21345",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "I see…I’ll take a look at it. Thanks.",
    "ts": "1453836991.000263",
    "id": "26de21346",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "So I guess I would use chaining of some sort to eventually get the finished result back to the mainThread.",
    "ts": "1453837182.000264",
    "id": "26de21347",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "or something like this may be easier <https://github.com/VictorAlbertos/RxCache>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "VictorAlbertos/RxCache",
        "title_link": "https://github.com/VictorAlbertos/RxCache",
        "text": "RxCache - Reactive caching library for Android and Java",
        "fallback": "GitHub: VictorAlbertos/RxCache",
        "thumb_url": "https://avatars3.githubusercontent.com/u/2614726?v=3&s=400",
        "from_url": "https://github.com/VictorAlbertos/RxCache",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1453837244.000265",
    "id": "26de21348",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "nvm I misunderstood what you where saying",
    "ts": "1453837283.000267",
    "id": "26de21349",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "so i just updated to android studio 2 preview 7 to try out instant run",
    "ts": "1453838598.000268",
    "id": "26de21350",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "my project doesn't build on 'com.android.tools.build:gradle:2.0.0-alpha7'",
    "edited": {
      "user": "U054A24ET",
      "ts": "1453838616.000000"
    },
    "ts": "1453838609.000269",
    "id": "26de21351",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "changing it to 'com.android.tools.build:gradle:2.0.0-alpha6' works, but instant run is disabled. anyone knows how to fix?",
    "ts": "1453838635.000271",
    "id": "26de21352",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KELTP8U",
    "subtype": "channel_join",
    "text": "<@U0KELTP8U|omnilabs_inc> has joined the channel",
    "ts": "1453840510.000272",
    "id": "26de21353",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "is it possible to have a MapView inside of one item of an adapter?",
    "ts": "1453843245.000273",
    "id": "26de21354",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "I believe it is",
    "ts": "1453843283.000274",
    "id": "26de21355",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "but I’d use it in light mode",
    "ts": "1453843286.000275",
    "id": "26de21356",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "if you’re putting it in a list item",
    "ts": "1453843291.000276",
    "id": "26de21357",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "yes",
    "ts": "1453843448.000277",
    "id": "26de21358",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i want to use lite mode",
    "ts": "1453843455.000278",
    "id": "26de21359",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "of course",
    "ts": "1453843458.000279",
    "id": "26de21360",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "then you should be able to, don’t see why not",
    "ts": "1453843473.000280",
    "id": "26de21361",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but my problem is i need to communicate from the fragment to the adapter",
    "ts": "1453843477.000281",
    "id": "26de21362",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "through some interface",
    "ts": "1453843481.000282",
    "id": "26de21363",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "and im not quite sure how to set that up",
    "ts": "1453843490.000283",
    "id": "26de21364",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i have set up interfaces to communicate the other way around",
    "ts": "1453843500.000284",
    "id": "26de21365",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "from an adapter to a fragment",
    "ts": "1453843507.000285",
    "id": "26de21366",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "for something like an OnItemClickListener",
    "ts": "1453843520.000286",
    "id": "26de21367",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "using an eventbus is a convenient way to decouple that type of scenario",
    "ts": "1453843559.000287",
    "id": "26de21368",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "okay so you can register and unregister the event bus inside of an adapter?",
    "ts": "1453843575.000288",
    "id": "26de21369",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "We’re working on an integration with the saleforce android app and I have an open question from the design team where they are wondering if its possible to query our app from the Salesforce app? I was thinking of using a custom URL scheme that when called our app would be able to answer and open, but I’m not sure if there is any support for querying our app from the salesforce app and returning some sort of value. For example, the enduser opens their salesforce app and click open one of their contacts. In the detail screen there is some mechanism to click on a link that _should_ open a very specific view in our app, but if the information sent to our app is invalid, they want it to be returned to saleforce app…not just display a message in our app",
    "ts": "1453843600.000289",
    "id": "26de21370",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "If any of that actually makes any sense.",
    "ts": "1453843607.000290",
    "id": "26de21371",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I would say the adapter should have the bus",
    "ts": "1453843609.000291",
    "id": "26de21372",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "maybe",
    "ts": "1453843615.000292",
    "id": "26de21373",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "im not sure i really understand you issue to begin with",
    "ts": "1453843622.000293",
    "id": "26de21374",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "so inorder to use a mapview you need to communicate lifecycle methods to it",
    "ts": "1453843647.000294",
    "id": "26de21375",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "the mapview lives inside of the adapter",
    "ts": "1453843653.000295",
    "id": "26de21376",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i need to communicate fragment lifecycle methods",
    "ts": "1453843664.000296",
    "id": "26de21377",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "to the mapview",
    "ts": "1453843665.000297",
    "id": "26de21378",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<@U0A1BE7KQ>: just implement the interface inside the adapter and call methods from the fragment",
    "ts": "1453843666.000298",
    "id": "26de21379",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "can’t use eventbus inside adapter I think",
    "ts": "1453843676.000299",
    "id": "26de21380",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "but you can also use rxjava to do it",
    "ts": "1453843684.000300",
    "id": "26de21381",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "so there’s that :smile:",
    "ts": "1453843687.000301",
    "id": "26de21382",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "how do i set the interface",
    "ts": "1453843694.000302",
    "id": "26de21383",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i need some kind of setter",
    "ts": "1453843698.000303",
    "id": "26de21384",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<@U0DC95VCP>: are both of these apps signed with the same store?",
    "ts": "1453843707.000304",
    "id": "26de21385",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>: no..the salesforce app is completely outside our product",
    "edited": {
      "user": "U0DC95VCP",
      "ts": "1453843746.000000"
    },
    "ts": "1453843730.000305",
    "id": "26de21386",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "if so, IPC is the answer otherwise IPC is still the answer via binding or broadcasts assuming security isn't an issue",
    "ts": "1453843731.000306",
    "id": "26de21387",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "can you put it inside the constructor? or just make a basic setter that takes the interface (not the concrete implementation)",
    "ts": "1453843732.000307",
    "id": "26de21388",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i will attach a gist",
    "ts": "1453843762.000309",
    "id": "26de21389",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "or maybe you are saying you are trying to come up with a hack so that salesforce is tricked into opening your app?",
    "ts": "1453843790.000310",
    "id": "26de21390",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "because you can query other apps via IPC by binders or sticky intents or by doing a broadcast / wait for response.. I would recommend against the last option",
    "ts": "1453843848.000311",
    "id": "26de21391",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>: Yeah the opening of our app is almost certainly doable via a custom URL scheme and a link (ie - “<myapp://myactivity/user=42>\"",
    "ts": "1453843856.000312",
    "id": "26de21392",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "past that you are going to need an external service (server) to handle the communication",
    "ts": "1453843866.000313",
    "id": "26de21393",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "that is correct",
    "ts": "1453843877.000314",
    "id": "26de21394",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>: they want to know if my app can return something to the saleforce app…which I can’t think of any way that’s possible.",
    "ts": "1453843882.000315",
    "id": "26de21395",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "just a note though do not do 'myapp://'",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1453843891.000000"
    },
    "ts": "1453843888.000316",
    "id": "26de21396",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "Por que?",
    "ts": "1453843905.000318",
    "id": "26de21397",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "because myapp isn't really a scheme",
    "ts": "1453843976.000319",
    "id": "26de21398",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "http is however so if you do <http://someaddressformyapp.com/> now you can open your app or take the user to a landing page in the browser",
    "ts": "1453844000.000320",
    "id": "26de21399",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "anyways back to the question",
    "ts": "1453844005.000321",
    "id": "26de21400",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "startActivityForResult is the other option",
    "ts": "1453844017.000322",
    "id": "26de21401",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "they can use the packagemanager to determine if your application is installed (or at least an application with your packagename) then send it an intent to launch for result",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1453844068.000000"
    },
    "ts": "1453844056.000323",
    "id": "26de21402",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>: myapp is a scheme if I define it as such in the AndroidManifest. We do it currently where we have a custom scheme setup for our app so if you are on our website and you click a link, it will open our app directly then pull the URL query arguments to show the appropriate view inside our app.",
    "ts": "1453844124.000325",
    "id": "26de21403",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "<https://gist.github.com/tableconnection/11ea22043894077c514a>",
    "ts": "1453844133.000326",
    "id": "26de21404",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "<@U0548MM6B>",
    "ts": "1453844150.000327",
    "id": "26de21405",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "that is the gist",
    "ts": "1453844154.000328",
    "id": "26de21406",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "that shows what i have set up so far",
    "ts": "1453844161.000329",
    "id": "26de21407",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "for the interface communication",
    "ts": "1453844167.000330",
    "id": "26de21408",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>:  like this: <http://fokkezb.nl/2013/07/01/url-schemes-as-intents/>",
    "attachments": [
      {
        "service_name": "Fokke Zandbergen",
        "title": "URL Schemes as Intents",
        "title_link": "http://fokkezb.nl/2013/07/01/url-schemes-as-intents/",
        "text": "There has been growing interest among the Titanium and Titan-community for the endless possibilities of URL schemes in iOS. This blog will try to give an overview, hoping to spark some new ideas.",
        "fallback": "Fokke Zandbergen: URL Schemes as Intents",
        "ts": 1372677436,
        "from_url": "http://fokkezb.nl/2013/07/01/url-schemes-as-intents/",
        "thumb_url": "http://fokkezb.nl/wp-content/uploads/2013/05/Z@2x.png",
        "thumb_width": 80,
        "thumb_height": 80,
        "id": 1
      }
    ],
    "ts": "1453844178.000331",
    "id": "26de21409",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "not that we are using titanium…android supports this natively",
    "ts": "1453844210.000333",
    "id": "26de21410",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<@U0DC95VCP>: its not a question of if you can define your own schemes it's that you should not define your own scheme. http is a standard, https is a standard, ftp is a standard, myapp is made up. Additionally it is not necessary to use the custom scheme at all as you can achieve the same thing with an http or https path based on a domain you own (and you should).",
    "ts": "1453844256.000334",
    "id": "26de21411",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U0548MM6B|bluecup> uploaded a file: <https://androidchat.slack.com/files/bluecup/F0KEZ97NE/basically_like_this.txt|Basically like this> and commented: <@U0A1BE7KQ>",
    "file": {
      "id": "F0KEZ97NE",
      "created": 1453844298,
      "timestamp": 1453844298,
      "name": "Basically_like_this.txt",
      "title": "Basically like this",
      "mimetype": "text/plain",
      "filetype": "text",
      "pretty_type": "Plain Text",
      "user": "U0548MM6B",
      "editable": true,
      "size": 382,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F0KEZ97NE/basically_like_this.txt?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F0KEZ97NE/download/basically_like_this.txt?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/bluecup/F0KEZ97NE/basically_like_this.txt",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F0KEZ97NE-079096d6b6",
      "edit_link": "https://androidchat.slack.com/files/bluecup/F0KEZ97NE/basically_like_this.txt/edit",
      "preview": "    public void setMapViewLifecycleCallbacks(MapViewLifecycleCallbacks mapViewLifecycleCallbacks){\r\n        mMapViewLifecycleCallbacks = mapViewLifecycleCallbacks;\r\n    }  -> goes into adapter\r\n\r\n\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>    public void setMapViewLifecycleCallbacks(MapViewLifecycleCallbacks mapViewLifecycleCallbacks){</pre></div>\n<div><pre>        mMapViewLifecycleCallbacks = mapViewLifecycleCallbacks;</pre></div>\n<div><pre>    }  -&gt; goes into adapter</pre></div>\n<div><pre></pre></div>\n<div><pre></pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n",
      "lines": 13,
      "lines_more": 8,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 1,
      "initial_comment": {
        "id": "Fc0KEVK3T7",
        "created": 1453844298,
        "timestamp": 1453844298,
        "user": "U0548MM6B",
        "is_intro": true,
        "comment": "<@U0A1BE7KQ>",
        "channel": ""
      }
    },
    "user": "U0548MM6B",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U0548MM6B|bluecup>",
    "bot_id": null,
    "ts": "1453844299.000335",
    "id": "26de21412",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "android supports any scheme just out of the fact that more scheme's are and have been in the works since its inception so it was more sensible to allow any scheme as a manner of future proofing but it was not intended as a 'here use any scheme you want'",
    "ts": "1453844305.000336",
    "id": "26de21413",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "you talk from fragment to adapter class, since adapter class has to obey that interface contract",
    "ts": "1453844323.000337",
    "id": "26de21414",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "you can continue using myapp and it will work fine most likely for eternity just noting that you should not actually be doing that",
    "ts": "1453844327.000338",
    "id": "26de21415",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "you know it has those methods",
    "ts": "1453844327.000339",
    "id": "26de21416",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "<@U055GGAHS>: Hrm…maybe we’re talking about different things. Im referring to this functionality: <http://developer.android.com/training/basics/intents/filters.html>",
    "attachments": [
      {
        "text": "The previous two lessons focused on one side of the story: starting another app's activity from your app. But if your app can perform an action that might be useful to another app, your app should be prepared to respond to action requests from other…",
        "fallback": "The previous two lessons focused on one side of the story: starting another app's activity from your app. But if your app can perform an action that might be useful to another app, your app should be prepared to respond to action requests from other…",
        "from_url": "http://developer.android.com/training/basics/intents/filters.html",
        "id": 1
      }
    ],
    "ts": "1453844381.000340",
    "id": "26de21417",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "where you can do something like this",
    "ts": "1453844405.000342",
    "id": "26de21418",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "&lt;intent-filter&gt;\n        &lt;action android:name=\"android.intent.action.SENDTO\"/&gt;\n        &lt;category android:name=\"android.intent.category.DEFAULT\"/&gt;\n        &lt;data android:scheme=\"sms\" /&gt;\n        &lt;data android:scheme=\"smsto\" /&gt;\n    &lt;/intent-filter&gt;",
    "ts": "1453844405.000343",
    "id": "26de21419",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "Hrm…this document does state you can send a response...",
    "ts": "1453844447.000344",
    "id": "26de21420",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "nope we are talking about the same thing.. its a URI filter",
    "ts": "1453844515.000345",
    "id": "26de21421",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "and startActivityForResult is the way to respond",
    "ts": "1453844538.000346",
    "id": "26de21422",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "alternately a sticky broadcast",
    "ts": "1453844550.000347",
    "id": "26de21423",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I would not try to rely on the sticky though",
    "ts": "1453844586.000348",
    "id": "26de21424",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "cool…thanks <@U055GGAHS>  :simple_smile:",
    "ts": "1453844598.000349",
    "id": "26de21425",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "<@U0548MM6B> if the `setMapViewLifecycleCallbacks()` is defined in the adapter",
    "ts": "1453844828.000350",
    "id": "26de21426",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "then where exactly do i call this method?",
    "ts": "1453844842.000351",
    "id": "26de21427",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "in the fragment",
    "ts": "1453844857.000352",
    "id": "26de21428",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "or pass it through adapter constructor",
    "ts": "1453844872.000353",
    "id": "26de21429",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "you mean in `onCreate()` of the Fragment",
    "ts": "1453844954.000354",
    "id": "26de21430",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "mVenueDetailsAdapter.setMapViewLifecycleCallbacks();",
    "ts": "1453844977.000355",
    "id": "26de21431",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "what gets passed into this method as a param",
    "edited": {
      "user": "U0A1BE7KQ",
      "ts": "1453844989.000000"
    },
    "ts": "1453844987.000356",
    "id": "26de21432",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "oh wait no no",
    "ts": "1453845028.000358",
    "id": "26de21433",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "I got lost for a second there",
    "ts": "1453845032.000359",
    "id": "26de21434",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "you confused me :smile:",
    "ts": "1453845038.000360",
    "id": "26de21435",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "you don’t need to call that",
    "ts": "1453845042.000361",
    "id": "26de21436",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "if the adapter implements the interface",
    "ts": "1453845059.000362",
    "id": "26de21437",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "just call m’Adapter.onCreate();",
    "ts": "1453845070.000363",
    "id": "26de21438",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "gotcha",
    "ts": "1453845088.000364",
    "id": "26de21439",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "okay looks like the interface methods are being called properly",
    "ts": "1453845559.000365",
    "id": "26de21440",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but now i have an issue with the lifecycle methods",
    "ts": "1453845567.000366",
    "id": "26de21441",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "at the time i call onCreate() in the fragment",
    "ts": "1453845580.000367",
    "id": "26de21442",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "it then would call onCreate() in the adapter",
    "ts": "1453845589.000368",
    "id": "26de21443",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "call it before super?",
    "ts": "1453845598.000369",
    "id": "26de21444",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "which in turn should call MapView.onCreate()",
    "ts": "1453845602.000370",
    "id": "26de21445",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but at that point the mapview is null",
    "ts": "1453845616.000371",
    "id": "26de21446",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "when do you create the mapview?",
    "ts": "1453845643.000372",
    "id": "26de21447",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "its created inside the first element in the adapter",
    "ts": "1453845659.000373",
    "id": "26de21448",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "when you get an API response or?",
    "ts": "1453845662.000374",
    "id": "26de21449",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "its a recycleview adapter",
    "ts": "1453845663.000375",
    "id": "26de21450",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "yes, after an api response",
    "ts": "1453845674.000376",
    "id": "26de21451",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "hmmm not sure when to call it then if you don’t know how many items you have… maybe when you create the viewholder? it will always be after oncreate anyways",
    "ts": "1453845705.000377",
    "id": "26de21452",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "yes",
    "ts": "1453845718.000378",
    "id": "26de21453",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "it seems so",
    "ts": "1453845720.000379",
    "id": "26de21454",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i have viewholders setup",
    "ts": "1453845726.000380",
    "id": "26de21455",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but at the point that onCreate gets called",
    "ts": "1453845736.000381",
    "id": "26de21456",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "that view doesnt even exist",
    "ts": "1453845745.000382",
    "id": "26de21457",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "im wondering if its possible to have a MapView inside of a RecyclerView",
    "edited": {
      "user": "U0A1BE7KQ",
      "ts": "1453845780.000000"
    },
    "ts": "1453845770.000383",
    "id": "26de21458",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "what happens if you call onCreate when you bind the map view?",
    "ts": "1453845790.000385",
    "id": "26de21459",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "would that defeat the purpose of the lifecycle methods",
    "ts": "1453845862.000386",
    "id": "26de21460",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "kinda",
    "ts": "1453845874.000387",
    "id": "26de21461",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "but wait",
    "ts": "1453845876.000388",
    "id": "26de21462",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "if you just call the lifecycle methods",
    "ts": "1453845876.000389",
    "id": "26de21463",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "whenever",
    "ts": "1453845879.000390",
    "id": "26de21464",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "why not use lite mode fragments?",
    "ts": "1453845882.000391",
    "id": "26de21465",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "hmmm",
    "ts": "1453845891.000392",
    "id": "26de21466",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "are you referring to the SupportMapFragment?",
    "ts": "1453845904.000393",
    "id": "26de21467",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "might be that one, haven’t used one in a while",
    "ts": "1453845943.000394",
    "id": "26de21468",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i went down that path",
    "ts": "1453845951.000395",
    "id": "26de21469",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "if that’s not working, just call the on create and onresume in the viewholder when you bind the views",
    "ts": "1453846003.000396",
    "id": "26de21470",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "imo that should work",
    "ts": "1453846009.000397",
    "id": "26de21471",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "seems like there isnt a simple way to accomplish what i want",
    "ts": "1453846056.000398",
    "id": "26de21472",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i might have to rethink the design",
    "ts": "1453846066.000399",
    "id": "26de21473",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "try calling the onCreate and onResume in the viewholder constructor instead of calling them from fragment",
    "ts": "1453846136.000400",
    "id": "26de21474",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "if that doesn’t work, try fragment",
    "ts": "1453846143.000401",
    "id": "26de21475",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "otherwise",
    "ts": "1453846146.000402",
    "id": "26de21476",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "¯\\_(ツ)_/¯",
    "ts": "1453846148.000403",
    "id": "26de21477",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i got the supportmapfragment to work",
    "ts": "1453846277.000404",
    "id": "26de21478",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "/gif you go girl",
    "ts": "1453846328.000405",
    "id": "26de21479",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "",
    "bot_id": "B0GH4RVHU",
    "attachments": [
      {
        "fallback": "<http://2.bp.blogspot.com/-nB9wLpLk_ms/Up83xXQf56I/AAAAAAABGV8/N-eVr1FPVco/s1600/005.gif>",
        "image_url": "http://2.bp.blogspot.com/-nB9wLpLk_ms/Up83xXQf56I/AAAAAAABGV8/N-eVr1FPVco/s1600/005.gif",
        "image_width": 423,
        "image_height": 300,
        "image_bytes": 70054,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1453846328.000406",
    "id": "26de21480",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "<https://gist.github.com/tableconnection/ca6dbe1fbf73b213791f>",
    "ts": "1453846335.000407",
    "id": "26de21481",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "what was tripping me up was the `getMapAsync()`",
    "ts": "1453846352.000408",
    "id": "26de21482",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but i realized i just need to implement the OnMapReadyCallback interface inside the adapter",
    "ts": "1453846388.000409",
    "id": "26de21483",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KFABKEC",
    "subtype": "channel_join",
    "text": "<@U0KFABKEC|samtspade> has joined the channel",
    "ts": "1453851269.000410",
    "id": "26de21484",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KFJA0UT",
    "subtype": "channel_join",
    "text": "<@U0KFJA0UT|aascis007> has joined the channel",
    "ts": "1453862483.000411",
    "id": "26de21485",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]