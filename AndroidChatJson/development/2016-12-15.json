[
  {
    "user": "U09UQHPQV",
    "text": "Now clear enough for analyse hprof file.\n<@U0ESBF4AV>  thanks .",
    "edited": {
      "user": "U09UQHPQV",
      "ts": "1481789672.000000"
    },
    "ts": "1481789659.003553",
    "id": "15de54723",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "I have an activity that acts like a dialog box MyDialogActivity... from that activity there are two action buttons which will redirect to other activities. Currently, MyDialogActivity is leaking and I would like to know if it's a good idea to `finish()` it after the `startActivity(intent);` of my other activity?",
    "ts": "1481790058.003556",
    "id": "15de54724",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0ESBF4AV",
    "text": "<@U09UQHPQV> You are welcome :slightly_smiling_face:",
    "ts": "1481790389.003557",
    "id": "15de54725",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3F6VAS1K",
    "text": "<@U3F6VAS1K|manasassam> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481792376.003558",
    "id": "15de54726",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "sad",
    "ts": "1481794169.003559",
    "id": "15de54727",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "my Parcelable object is not reading the values correctly!?",
    "ts": "1481794178.003560",
    "id": "15de54728",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "what is \"correctly\" what is \"my Parcelable object\" what is \"reading values\"",
    "ts": "1481794326.003561",
    "id": "15de54729",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "nvm, found the answer about finish here <http://stackoverflow.com/a/11308444/2098493>",
    "attachments": [
      {
        "title": "Start new Activity and finish current one in Android?",
        "title_link": "http://stackoverflow.com/a/11308444/2098493",
        "text": "Currently I'm starting a new Activity and calling finish on a current <http://one.Is|one.Is> there any flag that can be passed to Intent that enables finishing current Activity without a need to call finish manu...",
        "fallback": "Start new Activity and finish current one in Android?",
        "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded",
        "from_url": "http://stackoverflow.com/a/11308444/2098493",
        "thumb_width": 316,
        "thumb_height": 316,
        "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d",
        "service_name": "stackoverflow.com",
        "id": 1
      }
    ],
    "ts": "1481794581.003562",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54730",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "sorry",
    "ts": "1481794886.003564",
    "id": "15de54731",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I sent a parcel to another Activity",
    "ts": "1481794899.003565",
    "id": "15de54732",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "and on that activity when I got the parcel",
    "ts": "1481794915.003566",
    "id": "15de54733",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I still have a valid instance of the parcelable but its member variables are incorrect, null, empty. Although I wrote them in the correct order",
    "ts": "1481794948.003567",
    "id": "15de54734",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "here is my code",
    "ts": "1481794950.003568",
    "id": "15de54735",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U379MC1E0|neonwarge04> uploaded a file: <https://androidchat.slack.com/files/neonwarge04/F3FQLJLS2/-.java|Untitled>",
    "file": {
      "id": "F3FQLJLS2",
      "created": 1481794971,
      "timestamp": 1481794971,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U379MC1E0",
      "editable": true,
      "size": 4196,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3FQLJLS2/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3FQLJLS2/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/neonwarge04/F3FQLJLS2/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3FQLJLS2-c80e6c422e",
      "edit_link": "https://androidchat.slack.com/files/neonwarge04/F3FQLJLS2/-.java/edit",
      "preview": "public class SeafarerRecord extends RealmObject implements Parcelable\r\n{\r\n    @SerializedName(\"id\") private long mID;\r\n\r\n    @SerializedName(\"ship_name\") private String mShipName;\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">public</span> <span class=\"cm-keyword\">class</span> <span class=\"cm-def\">SeafarerRecord</span> <span class=\"cm-keyword\">extends</span> <span class=\"cm-variable\">RealmObject</span> <span class=\"cm-keyword\">implements</span> <span class=\"cm-variable\">Parcelable</span></pre></div>\n<div><pre>{</pre></div>\n<div><pre>    <span class=\"cm-meta\">@SerializedName</span>(<span class=\"cm-string\">&quot;id&quot;</span>) <span class=\"cm-keyword\">private</span> <span class=\"cm-variable-3\">long</span> <span class=\"cm-variable\">mID</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre>    <span class=\"cm-meta\">@SerializedName</span>(<span class=\"cm-string\">&quot;ship_name&quot;</span>) <span class=\"cm-keyword\">private</span> <span class=\"cm-variable-3\">String</span> <span class=\"cm-variable\">mShipName</span>;</pre></div>\n</div>\n</div>\n",
      "lines": 166,
      "lines_more": 161,
      "preview_is_truncated": true,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U379MC1E0",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U379MC1E0|neonwarge04>",
    "bot_id": null,
    "ts": "1481794971.003569",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54736",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U379MC1E0|neonwarge04> uploaded a file: <https://androidchat.slack.com/files/neonwarge04/F3F2SBBR9/-.java|Untitled> and commented: Here is how I start my activity",
    "file": {
      "id": "F3F2SBBR9",
      "created": 1481795172,
      "timestamp": 1481795172,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U379MC1E0",
      "editable": true,
      "size": 287,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3F2SBBR9/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3F2SBBR9/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/neonwarge04/F3F2SBBR9/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3F2SBBR9-3cafd74059",
      "edit_link": "https://androidchat.slack.com/files/neonwarge04/F3F2SBBR9/-.java/edit",
      "preview": "        Intent intent = new Intent(RecordBookActivity.this, AddSeafarerRecordWizardActivity.class);\r\n        intent.putExtra(Extras.AUTH_TOKEN, mAuthToken);\r\n        intent.putExtra(Extras.SEAFARER_RECORD, record);\r\n        startActivityForResult(intent, Request.EDIT_SEAFARER_RECORD);\r\n",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>        <span class=\"cm-variable\">Intent</span> <span class=\"cm-variable\">intent</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Intent</span>(<span class=\"cm-variable\">RecordBookActivity</span>.<span class=\"cm-keyword\">this</span>, <span class=\"cm-variable\">AddSeafarerRecordWizardActivity</span>.<span class=\"cm-keyword\">class</span>);</pre></div>\n<div><pre>        <span class=\"cm-variable\">intent</span>.<span class=\"cm-variable\">putExtra</span>(<span class=\"cm-variable\">Extras</span>.<span class=\"cm-variable\">AUTH_TOKEN</span>, <span class=\"cm-variable\">mAuthToken</span>);</pre></div>\n<div><pre>        <span class=\"cm-variable\">intent</span>.<span class=\"cm-variable\">putExtra</span>(<span class=\"cm-variable\">Extras</span>.<span class=\"cm-variable\">SEAFARER_RECORD</span>, <span class=\"cm-variable\">record</span>);</pre></div>\n<div><pre>        <span class=\"cm-variable\">startActivityForResult</span>(<span class=\"cm-variable\">intent</span>, <span class=\"cm-variable\">Request</span>.<span class=\"cm-variable\">EDIT_SEAFARER_RECORD</span>);</pre></div>\n</div>\n</div>\n",
      "lines": 5,
      "lines_more": 0,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 1,
      "initial_comment": {
        "id": "Fc3F7BFNBF",
        "created": 1481795172,
        "timestamp": 1481795172,
        "user": "U379MC1E0",
        "is_intro": true,
        "comment": "Here is how I start my activity",
        "channel": ""
      }
    },
    "user": "U379MC1E0",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U379MC1E0|neonwarge04>",
    "bot_id": null,
    "ts": "1481795172.003570",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54737",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you're supposed to send the primary key of the object, and requery in the other activity",
    "ts": "1481795258.003571",
    "id": "15de54738",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "afaik",
    "ts": "1481795286.003572",
    "id": "15de54739",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "what do you mean?",
    "ts": "1481795397.003573",
    "id": "15de54740",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am just passing my Parcelable object",
    "ts": "1481795408.003574",
    "id": "15de54741",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "the realm object itself is a Parcelable, I am not doing anything fancy yet on the activity it was sent to",
    "ts": "1481795434.003575",
    "id": "15de54742",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "Its weird",
    "ts": "1481795444.003576",
    "id": "15de54743",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "&gt; \nI am just passing my Parcelable object",
    "ts": "1481795452.003577",
    "id": "15de54744",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "why",
    "ts": "1481795454.003578",
    "id": "15de54745",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "explain your use-case in which this makes sense",
    "ts": "1481795463.003579",
    "id": "15de54746",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I have ID correct, the IMONumber  is placed on the wrong variable",
    "ts": "1481795468.003580",
    "id": "15de54747",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i have been using Realm on 3 projects, I have *never* sent a parcelable RealmObject between activities",
    "ts": "1481795480.003581",
    "id": "15de54748",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "Activity A launches the editor, I have a following SeafarerRecord which contains data as you can see on my code",
    "ts": "1481795492.003582",
    "id": "15de54749",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "oh so Parcelable and Realm cannot work together",
    "ts": "1481795507.003583",
    "id": "15de54750",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "they do",
    "ts": "1481795510.003584",
    "id": "15de54751",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "technically you can use Parceler to create parcelables out of your managed RealmProxy",
    "ts": "1481795521.003585",
    "id": "15de54752",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "so the only option I have is to map the member variables of seafarer record",
    "ts": "1481795526.003586",
    "id": "15de54753",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it just doesn't make sense to do so",
    "ts": "1481795526.003587",
    "id": "15de54754",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "on the intent",
    "ts": "1481795533.003588",
    "id": "15de54755",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it is typically an architectural error if you do that",
    "ts": "1481795535.003589",
    "id": "15de54756",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "parse the intent on the next activity",
    "ts": "1481795539.003590",
    "id": "15de54757",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you are not reading what I'm saying and that is making me sad",
    "ts": "1481795551.003591",
    "id": "15de54758",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am reading it",
    "ts": "1481795559.003592",
    "id": "15de54759",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "then you clearly skipped \"you're supposed to send the primary key of the object, and requery in the other activity\"",
    "ts": "1481795587.003593",
    "id": "15de54760",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am not querying anything on other activity",
    "ts": "1481795599.003594",
    "id": "15de54761",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "yes that is the problem",
    "ts": "1481795605.003595",
    "id": "15de54762",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you are sending the object through an intent",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481795613.000000"
    },
    "ts": "1481795610.003596",
    "id": "15de54763",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "alright",
    "ts": "1481795614.003598",
    "id": "15de54764",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "instead of sending its primary key",
    "ts": "1481795616.003599",
    "id": "15de54765",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I'll remove the \"extends RealmObject\"",
    "ts": "1481795631.003600",
    "id": "15de54766",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": ".......",
    "ts": "1481795635.003601",
    "id": "15de54767",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you're really not reading what I'm saying, are you.",
    "ts": "1481795641.003602",
    "id": "15de54768",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "okay",
    "ts": "1481795702.003603",
    "id": "15de54769",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you should probably explain your use-case in regards of whether this instance of `SeafarerRecord` is a *managed RealmProxy* , or an *unmanaged object* <@U379MC1E0>",
    "ts": "1481795743.003604",
    "id": "15de54770",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "it is unmanaged object",
    "ts": "1481795759.003605",
    "id": "15de54771",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "look",
    "ts": "1481795764.003606",
    "id": "15de54772",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I'm looking",
    "ts": "1481795808.003607",
    "id": "15de54773",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "Activity A is a list of SeafarerRecord",
    "ts": "1481795820.003608",
    "id": "15de54774",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "mhm",
    "ts": "1481795826.003609",
    "id": "15de54775",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I edit one seafarer record (no db fancy stuff here)",
    "ts": "1481795839.003610",
    "id": "15de54776",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "are you gonna type seomthing? I'll let you finish. Speak",
    "ts": "1481795852.003611",
    "id": "15de54777",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I convo is interleavened so you are acusing me of not reading your statements",
    "ts": "1481795866.003612",
    "id": "15de54778",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i'm listening",
    "ts": "1481795889.003613",
    "id": "15de54779",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so let me guess, Activity B is an edit activity for a single element of Seafarer record",
    "ts": "1481795904.003614",
    "id": "15de54780",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "yep",
    "ts": "1481795991.003615",
    "id": "15de54781",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "Actualy its just, let just say, \"bland activity\"",
    "ts": "1481796010.003616",
    "id": "15de54782",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am not doing anyhting fancy as of yet",
    "ts": "1481796018.003617",
    "id": "15de54783",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am sending B what I selected from A which is an isntance os SeafarerRecord",
    "ts": "1481796034.003618",
    "id": "15de54784",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "so I dont have to intent.putExtra-ing all the member variables",
    "ts": "1481796044.003619",
    "id": "15de54785",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "its just so tiresome",
    "ts": "1481796048.003620",
    "id": "15de54786",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "one of my callback methods sends me a ViewHolder, position, and the model object on that position",
    "ts": "1481796071.003621",
    "id": "15de54787",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I consume the model object, and then dointent.putParcelable(Extras.SEAFARER_RECORD, object)",
    "edited": {
      "user": "U379MC1E0",
      "ts": "1481796138.000000"
    },
    "ts": "1481796104.003622",
    "id": "15de54788",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I found this neat",
    "ts": "1481796140.003624",
    "id": "15de54789",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "because I don't have to map each record's variable to specfic extras",
    "ts": "1481796154.003625",
    "id": "15de54790",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "on Activity B heres what happened",
    "ts": "1481796160.003626",
    "id": "15de54791",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "is the List that you are showing with your RecyclerView a `RealmResults&lt;SeafarerRecord&gt;` provided by `realm.where(SeafarerRecord.class).findAll();`?",
    "ts": "1481796169.003627",
    "id": "15de54792",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "actually",
    "ts": "1481796184.003628",
    "id": "15de54793",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "ah yes",
    "ts": "1481796197.003629",
    "id": "15de54794",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U379MC1E0|neonwarge04> uploaded a file: <https://androidchat.slack.com/files/neonwarge04/F3FR6H97H/-.java|Untitled>",
    "file": {
      "id": "F3FR6H97H",
      "created": 1481796295,
      "timestamp": 1481796295,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U379MC1E0",
      "editable": true,
      "size": 66,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3FR6H97H/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3FR6H97H/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/neonwarge04/F3FR6H97H/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3FR6H97H-f7f80c618a",
      "edit_link": "https://androidchat.slack.com/files/neonwarge04/F3FR6H97H/-.java/edit",
      "preview": "mRecordBookAdapter.setContent(Constants.getSeafarerRecords());\r\n\r\n",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-variable\">mRecordBookAdapter</span>.<span class=\"cm-variable\">setContent</span>(<span class=\"cm-variable\">Constants</span>.<span class=\"cm-variable\">getSeafarerRecords</span>());</pre></div>\n<div><pre>&#8203;</pre></div>\n</div>\n</div>\n",
      "lines": 3,
      "lines_more": 0,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U379MC1E0",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U379MC1E0|neonwarge04>",
    "bot_id": null,
    "ts": "1481796296.003630",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54795",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "and then on getSeafarerRecords()",
    "ts": "1481796307.003631",
    "id": "15de54796",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`Constants.`?",
    "ts": "1481796323.003632",
    "id": "15de54797",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "what is constants",
    "ts": "1481796330.003633",
    "id": "15de54798",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and more importantly, what do you store in Realm, if your objects are saved as \"constants\"",
    "ts": "1481796347.003634",
    "id": "15de54799",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "hold on",
    "ts": "1481796357.003635",
    "id": "15de54800",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I am not even finish yet :stuck_out_tongue:",
    "ts": "1481796379.003636",
    "id": "15de54801",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U379MC1E0|neonwarge04> uploaded a file: <https://androidchat.slack.com/files/neonwarge04/F3F7JPL0M/-.java|Untitled>",
    "file": {
      "id": "F3F7JPL0M",
      "created": 1481796381,
      "timestamp": 1481796381,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U379MC1E0",
      "editable": true,
      "size": 195,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3F7JPL0M/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3F7JPL0M/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/neonwarge04/F3F7JPL0M/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3F7JPL0M-9303e9cf8c",
      "edit_link": "https://androidchat.slack.com/files/neonwarge04/F3F7JPL0M/-.java/edit",
      "preview": "    public static RealmResults<SeafarerRecord> getSeafarerRecords()\r\n    {\r\n        Realm realm = Realm.getDefaultInstance();\r\n        return realm.where(SeafarerRecord.class).findAll();\r\n    }\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>    <span class=\"cm-keyword\">public</span> <span class=\"cm-keyword\">static</span> <span class=\"cm-variable\">RealmResults</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">SeafarerRecord</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-def\">getSeafarerRecords</span>()</pre></div>\n<div><pre>    {</pre></div>\n<div><pre>        <span class=\"cm-variable\">Realm</span> <span class=\"cm-variable\">realm</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Realm</span>.<span class=\"cm-variable\">getDefaultInstance</span>();</pre></div>\n<div><pre>        <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">realm</span>.<span class=\"cm-variable\">where</span>(<span class=\"cm-variable\">SeafarerRecord</span>.<span class=\"cm-keyword\">class</span>).<span class=\"cm-variable\">findAll</span>();</pre></div>\n<div><pre>    }</pre></div>\n</div>\n</div>\n",
      "lines": 6,
      "lines_more": 1,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U379MC1E0",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U379MC1E0|neonwarge04>",
    "bot_id": null,
    "ts": "1481796381.003637",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54802",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "It shouldn't be on my constants class though :confused:",
    "ts": "1481796400.003638",
    "id": "15de54803",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": ".",
    "ts": "1481796457.003639",
    "id": "15de54804",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "On Activity B",
    "ts": "1481796461.003640",
    "id": "15de54805",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so you *are* sending managed proxies",
    "ts": "1481796461.003641",
    "id": "15de54806",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "when I retrieve my parcelable",
    "ts": "1481796468.003642",
    "id": "15de54807",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "I still get my instance with incorrect values mapped to it",
    "ts": "1481796489.003643",
    "id": "15de54808",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "oh",
    "ts": "1481796497.003644",
    "id": "15de54809",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "so what should I do then?",
    "ts": "1481796504.003645",
    "id": "15de54810",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "send the primary key of the object and requery it in the other activity",
    "ts": "1481796524.003646",
    "id": "15de54811",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "also, you should probably switch to `RealmRecyclerViewAdapter` to listen to changes, if you're not already doing that",
    "ts": "1481796544.003647",
    "id": "15de54812",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f#.dklyiqgye>",
    "attachments": [
      {
        "service_name": "Medium",
        "title": "Basics of Realm: A guide to using Realm 1.2.0",
        "title_link": "https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f#.dklyiqgye",
        "text": "(Note: This article uses Realm 1.2.0, and realm-android-adapters 1.3.0)",
        "fallback": "Medium: Basics of Realm: A guide to using Realm 1.2.0",
        "image_url": "https://cdn-images-1.medium.com/max/1200/1*-gSrCrcN1_LVMfV_w_wiIQ.png",
        "fields": [
          {
            "title": "Reading time",
            "value": "5 min read",
            "short": true
          }
        ],
        "ts": 1472918345,
        "from_url": "https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f#.dklyiqgye",
        "image_width": 781,
        "image_height": 250,
        "image_bytes": 22353,
        "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*W0nmth_X8nFKjn6BZ388UQ.png",
        "id": 1
      }
    ],
    "ts": "1481796573.003648",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54813",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "people don't really seem to like this article nearly as much as the others, but I think this contains the answer you are looking for",
    "ts": "1481796593.003650",
    "id": "15de54814",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "although to be fair, you *will* need an unmanaged copy that you can edit freely",
    "ts": "1481796658.003651",
    "id": "15de54815",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "alright cool",
    "ts": "1481796680.003652",
    "id": "15de54816",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but the edit view can save the new object, and the previous activity will auto-update if you use a `RealmChangeListener` via `RealmRecyclerViewAdapter`",
    "ts": "1481796683.003653",
    "id": "15de54817",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U37BP6E73|arviio> uploaded a file: <https://androidchat.slack.com/files/arviio/F3F7LK0H3/how_can_i_determine_what_is_leaking_based_on_this_leakcanary_log__i_m_having_a_tough_time_understanding_the_log_.sh|How can I determine what is leaking based on this LeakCanary log? I'm having a tough time understanding the log.>",
    "file": {
      "id": "F3F7LK0H3",
      "created": 1481796693,
      "timestamp": 1481796693,
      "name": "How_can_I_determine_what_is_leaking_based_on_this_LeakCanary_log__I_m_having_a_tough_time_understanding_the_log_.sh",
      "title": "How can I determine what is leaking based on this LeakCanary log? I'm having a tough time understanding the log.",
      "mimetype": "text/plain",
      "filetype": "shell",
      "pretty_type": "Shell",
      "user": "U37BP6E73",
      "editable": true,
      "size": 1709,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3F7LK0H3/how_can_i_determine_what_is_leaking_based_on_this_leakcanary_log__i_m_having_a_tough_time_understanding_the_log_.sh?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3F7LK0H3/download/how_can_i_determine_what_is_leaking_based_on_this_leakcanary_log__i_m_having_a_tough_time_understanding_the_log_.sh?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/arviio/F3F7LK0H3/how_can_i_determine_what_is_leaking_based_on_this_leakcanary_log__i_m_having_a_tough_time_understanding_the_log_.sh",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3F7LK0H3-f2e1c2a21d",
      "edit_link": "https://androidchat.slack.com/files/arviio/F3F7LK0H3/how_can_i_determine_what_is_leaking_based_on_this_leakcanary_log__i_m_having_a_tough_time_understanding_the_log_.sh/edit",
      "preview": "12-15 18:02:47.009 5976-6146/com.example.arvi.myapp D/LeakCanary: * com.example.arvi.myapp.IncomingCustomerModalActivity has leaked:\r\n12-15 18:02:47.009 5976-6146/com.example.arvi.myapp D/LeakCanary: * GC ROOT static android.support.v4.content.LocalBroadcastManager.mInstance\r\n12-15 18:02:47.009 5976-6146/com.example.arvi.myapp D/LeakCanary: * references android.support.v4.content.LocalBroadcastManager.mReceivers\r\n12-15 18:02:47.009 5976-6146/com.example.arvi.myapp D/LeakCanary: * references java.util.HashMap.table\r\n12-15 18:02:47.009 5976-6146/com.example.arvi.myapp D/LeakCanary: * references array java.util.HashMap$HashMapEntry[].[2]\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-number\">12</span><span class=\"cm-attribute\">-15</span> <span class=\"cm-number\">18</span>:02:47.009 <span class=\"cm-number\">5976</span><span class=\"cm-attribute\">-6146</span>/com.example.arvi.myapp D/LeakCanary: * com.example.arvi.myapp.IncomingCustomerModalActivity has leaked:</pre></div>\n<div><pre><span class=\"cm-number\">12</span><span class=\"cm-attribute\">-15</span> <span class=\"cm-number\">18</span>:02:47.009 <span class=\"cm-number\">5976</span><span class=\"cm-attribute\">-6146</span>/com.example.arvi.myapp D/LeakCanary: * GC ROOT static android.support.v4.content.LocalBroadcastManager.mInstance</pre></div>\n<div><pre><span class=\"cm-number\">12</span><span class=\"cm-attribute\">-15</span> <span class=\"cm-number\">18</span>:02:47.009 <span class=\"cm-number\">5976</span><span class=\"cm-attribute\">-6146</span>/com.example.arvi.myapp D/LeakCanary: * references android.support.v4.content.LocalBroadcastManager.mReceivers</pre></div>\n<div><pre><span class=\"cm-number\">12</span><span class=\"cm-attribute\">-15</span> <span class=\"cm-number\">18</span>:02:47.009 <span class=\"cm-number\">5976</span><span class=\"cm-attribute\">-6146</span>/com.example.arvi.myapp D/LeakCanary: * references java.util.HashMap.table</pre></div>\n<div><pre><span class=\"cm-number\">12</span><span class=\"cm-attribute\">-15</span> <span class=\"cm-number\">18</span>:02:47.009 <span class=\"cm-number\">5976</span><span class=\"cm-attribute\">-6146</span>/com.example.arvi.myapp D/LeakCanary: * references array java.util.HashMap<span class=\"cm-def\">$HashMapEntry</span>[].[2]</pre></div>\n</div>\n</div>\n",
      "lines": 13,
      "lines_more": 8,
      "preview_is_truncated": true,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U37BP6E73",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U37BP6E73|arviio>",
    "bot_id": null,
    "ts": "1481796693.003654",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54818",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "technically you were looking for <https://realm.io/docs/java/latest/#parceler> <@U379MC1E0>",
    "attachments": [
      {
        "title": "Java Docs",
        "title_link": "https://realm.io/docs/java/latest/#parceler",
        "text": "Realm is a mobile platform and a replacement for SQLite &amp; Core Data. Build offline-first, reactive mobile experiences using simple data sync.",
        "fallback": "Java Docs",
        "thumb_url": "https://realm.io/assets/img/social/realmDark.jpg",
        "from_url": "https://realm.io/docs/java/latest/#parceler",
        "thumb_width": 1200,
        "thumb_height": 627,
        "service_name": "Realm is a mobile platform and a replacement for SQLite &amp;amp; Core Data. Build offline-first, reactive mobile experiences using simple data sync.",
        "id": 1
      }
    ],
    "ts": "1481796711.003655",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54819",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "<@U37BP6E73> com.example.arvi.myapp.IncomingCustomerModalActivity$1.this$0 (anonymous subclass of android.content.BroadcastReceiver)",
    "ts": "1481796768.003657",
    "id": "15de54820",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "Did you remember to unregister receivers when activity is destroyed?",
    "ts": "1481796784.003658",
    "id": "15de54821",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U37BP6E73> it sounds like you do not unregister a `LocalBroadcastManager` in `onPause` (or `onStop`) that you registered above",
    "ts": "1481796799.003659",
    "id": "15de54822",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "it is registered",
    "ts": "1481796814.003660",
    "id": "15de54823",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that is great",
    "ts": "1481796818.003661",
    "id": "15de54824",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U37BP6E73> is it *unregistered*?",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481796936.000000"
    },
    "ts": "1481796821.003662",
    "id": "15de54825",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U37BP6E73|arviio> uploaded a file: <https://androidchat.slack.com/files/arviio/F3FRBK1L7/IncomingModalActivity_Leaking.js|IncomingModalActivity Leaking> and commented: yep I checked it...",
    "file": {
      "id": "F3FRBK1L7",
      "created": 1481797156,
      "timestamp": 1481797156,
      "name": "IncomingModalActivity_Leaking.js",
      "title": "IncomingModalActivity Leaking",
      "mimetype": "text/plain",
      "filetype": "javascript",
      "pretty_type": "JavaScript/JSON",
      "user": "U37BP6E73",
      "editable": true,
      "size": 7040,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3FRBK1L7/IncomingModalActivity_Leaking.js?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3FRBK1L7/download/IncomingModalActivity_Leaking.js?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/arviio/F3FRBK1L7/IncomingModalActivity_Leaking.js",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3FRBK1L7-26c11095d7",
      "edit_link": "https://androidchat.slack.com/files/arviio/F3FRBK1L7/IncomingModalActivity_Leaking.js/edit",
      "preview": "public class IncomingModalActivity extends Activity {\n\n    Context activityContext, instance;\n    Utility utility;\n    AppSocketEvents appSocketEvents;",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-variable\">public</span> <span class=\"cm-keyword\">class</span> <span class=\"cm-def\">IncomingModalActivity</span> <span class=\"cm-keyword\">extends</span> <span class=\"cm-variable\">Activity</span> {</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre>    <span class=\"cm-property\">Context</span> <span class=\"cm-def\">activityContext</span>, <span class=\"cm-variable\">instance</span>;</pre></div>\n<div><pre>    <span class=\"cm-variable\">Utility</span> <span class=\"cm-variable\">utility</span>;</pre></div>\n<div><pre>    <span class=\"cm-variable\">AppSocketEvents</span> <span class=\"cm-variable\">appSocketEvents</span>;</pre></div>\n</div>\n</div>\n",
      "lines": 198,
      "lines_more": 193,
      "preview_is_truncated": true,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 1,
      "initial_comment": {
        "id": "Fc3FRBK9FZ",
        "created": 1481797156,
        "timestamp": 1481797156,
        "user": "U37BP6E73",
        "is_intro": true,
        "comment": "yep I checked it...",
        "channel": ""
      }
    },
    "user": "U37BP6E73",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U37BP6E73|arviio>",
    "bot_id": null,
    "ts": "1481797156.003667",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54826",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "it's in the onPause, I even added finish() before starting new activity on the `onRedirectUserToRoom`",
    "edited": {
      "user": "U37BP6E73",
      "ts": "1481797296.000000"
    },
    "ts": "1481797240.003668",
    "id": "15de54827",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "thanks for the tip, i'll inspect that unregisterreceiver part of the code",
    "ts": "1481797532.003671",
    "id": "15de54828",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "LocalBroadcastManager.getInstance(activityContext).registerReceiver(\n                receiver, filter);",
    "ts": "1481797555.003672",
    "id": "15de54829",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "I don't see sometinhg like `LocalBroadCastManager.getInstance().unregisterReceiver();`",
    "ts": "1481797587.003673",
    "id": "15de54830",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "either in onPause on onDestroy",
    "ts": "1481797627.003674",
    "id": "15de54831",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "also you don't have to keep Context in a field",
    "ts": "1481797659.003675",
    "id": "15de54832",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "is it bad keeping a Context mContext field on an activity/fragment?",
    "ts": "1481797734.003676",
    "id": "15de54833",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "it is in the appSocketEvents class",
    "ts": "1481797739.003677",
    "id": "15de54834",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "the class has a method that is something like `    public void unregisterReceiver(Context base, BroadcastReceiver anotherReceiver) {\n        // unregister receiver from this class\n        LocalBroadcastManager.getInstance(base).unregisterReceiver(receiver);\n\n        // unregister receiver from another class, if any\n        if(anotherReceiver != null) {\n            LocalBroadcastManager.getInstance(base).unregisterReceiver(receiver);\n        }\n    }`",
    "ts": "1481797774.003678",
    "id": "15de54835",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you do not have `LocalBroadcastManager.getInstance(activityContext).registerReceiver(\n                receiver, filter);` in `onPause()` or `onStop()`",
    "ts": "1481797886.003679",
    "id": "15de54836",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "goddammit XD",
    "ts": "1481797891.003680",
    "id": "15de54837",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "it is in the appsocketevents class in the onPause",
    "ts": "1481797914.003681",
    "id": "15de54838",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "`appSocketEvents.unregisterReceiver(instance, receiver);`",
    "ts": "1481797929.003682",
    "id": "15de54839",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3ELEHVJ9",
    "text": "Hello , I'm having trouble using FCM Diagnostics in Play Developer Console. It works fine for registration ids, but I can't get it to work for message ID. I get response like this after sending a push message: {\"message_id\":6009545503078743661}, but after entering it into FCM Diagnostics it says that ID is not valid. Typical message ID that I see when using Diagnostics with registration ID looks like this: \"0:1481792038207649%79e8789ff9fd7ecd\". What am I missing here?",
    "ts": "1481798298.003683",
    "id": "15de54840",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U37BP6E73",
    "text": "<@U39P7U6EP> :taco: <@U0E72HWTX> :taco: thank you, I solved the issue by not using appsocketeventsclass for activity-specific unregisterReceiver... now I have to unregisterReceiver... one in non-activity and one in activity. App is now not leaking",
    "ts": "1481800970.003684",
    "id": "15de54841",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Monolithic activities/fragments, that's how I started android dev",
    "ts": "1481805153.003685",
    "id": "15de54842",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just read through all that, haha your sending the object not the ID",
    "ts": "1481805180.003686",
    "id": "15de54843",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3DCPPVCP",
    "text": "<@U3E2EEX38> I believe that is how we all started. I'm hoping we are better now.",
    "ts": "1481805291.003687",
    "id": "15de54844",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "why should I use `RealmRecyclerViewAdapter`?   Apart from auto updating fields",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481805400.000000"
    },
    "ts": "1481805325.003688",
    "id": "15de54845",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "How do you format code",
    "ts": "1481805353.003691",
    "id": "15de54846",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":disappointed: New to slack",
    "ts": "1481805371.003692",
    "id": "15de54847",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ah got it",
    "ts": "1481805403.003694",
    "id": "15de54848",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "1 ` for single line  .\n3 ``` for multi line",
    "ts": "1481805795.003695",
    "id": "15de54849",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I am currently saving the users current lat &amp; longitude in Realm and then reading from Realm as I need it, do you think this is a bad strategy? Should I read the location directly from the location manager?",
    "ts": "1481805881.003696",
    "id": "15de54850",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Does the user move?",
    "ts": "1481805934.003697",
    "id": "15de54851",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Do you need updates if the user moveS?",
    "ts": "1481805941.003698",
    "id": "15de54852",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "no",
    "ts": "1481805944.003699",
    "id": "15de54853",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "They might move periodically but I just need the last known",
    "ts": "1481805965.003700",
    "id": "15de54854",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Do you need to save that locally to send it later or to show it in another screen or for any different purpose?",
    "ts": "1481805975.003701",
    "id": "15de54855",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Yes I send it later",
    "ts": "1481805988.003702",
    "id": "15de54856",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "no I do not show it to the user",
    "ts": "1481806026.003703",
    "id": "15de54857",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "they use it to get a list of places in the vacinity",
    "ts": "1481806048.003704",
    "id": "15de54858",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "If you send it later you need to store it somewhere so that is :white_check_mark: \nRegarding the reading - The first questions means that you don't need necessarly to fetch it from the DB you could just request directly from location manager",
    "ts": "1481806058.003705",
    "id": "15de54859",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "It's not about being a bag strategy",
    "ts": "1481806064.003706",
    "id": "15de54860",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "It's about what does fulfil your use case",
    "ts": "1481806078.003707",
    "id": "15de54861",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I was fetching it directly but it meant that my Presenter had to go thorugh the chain to get it",
    "ts": "1481806103.003708",
    "id": "15de54862",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Location manager is held in the activity",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481806122.000000"
    },
    "ts": "1481806115.003709",
    "id": "15de54863",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I was going to publishSubject the location",
    "ts": "1481806136.003711",
    "id": "15de54864",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "but decided that storing in realm was a beeter idea",
    "ts": "1481806148.003712",
    "id": "15de54865",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Location manager is tied to activity lifecycle",
    "ts": "1481806173.003713",
    "id": "15de54866",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "What I did was create a LocationProvider that the presenter can use to request everything regarding the location and then send it to the activity",
    "ts": "1481806173.003714",
    "id": "15de54867",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "How did you get around the lifecycle",
    "ts": "1481806188.003715",
    "id": "15de54868",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "onStart on Stop",
    "ts": "1481806194.003716",
    "id": "15de54869",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "googleApi",
    "ts": "1481806198.003717",
    "id": "15de54870",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I don't need the lifecycle of the activity there",
    "ts": "1481806200.003718",
    "id": "15de54871",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I have googleApi injected by dagger",
    "ts": "1481806213.003719",
    "id": "15de54872",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "hmm",
    "ts": "1481806227.003720",
    "id": "15de54873",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I dont want googleAPi injected in my presenter",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481806247.000000"
    },
    "ts": "1481806239.003721",
    "id": "15de54874",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I do :stuck_out_tongue:",
    "ts": "1481806256.003723",
    "id": "15de54875",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I keep all android class out of presenter",
    "ts": "1481806275.003724",
    "id": "15de54876",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and model",
    "ts": "1481806278.003725",
    "id": "15de54877",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "But I actually don't really need the google api in my presenter I could have it in the LocationProvider or somewhere else",
    "edited": {
      "user": "U3697FDAN",
      "ts": "1481806363.000000"
    },
    "ts": "1481806330.003726",
    "id": "15de54878",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "yes but if you use the location manager in the presenter",
    "ts": "1481806365.003729",
    "id": "15de54879",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "then its just the same",
    "ts": "1481806375.003730",
    "id": "15de54880",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I use the locationProvider which has a locationManager yes",
    "ts": "1481806390.003731",
    "id": "15de54881",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "it's not the same",
    "ts": "1481806398.003732",
    "id": "15de54882",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I can mock it",
    "ts": "1481806400.003733",
    "id": "15de54883",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "if I wanted to",
    "ts": "1481806402.003734",
    "id": "15de54884",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ok then your good",
    "ts": "1481806405.003735",
    "id": "15de54885",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Just create an interface",
    "ts": "1481806413.003736",
    "id": "15de54886",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Pass that in to the presenter",
    "ts": "1481806419.003737",
    "id": "15de54887",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Would that not be sufficient?",
    "ts": "1481806447.003738",
    "id": "15de54888",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I feel like saving the location int he db is good enough for me, I need to send it later from other places anyway",
    "ts": "1481806486.003739",
    "id": "15de54889",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and requesting the permissions",
    "ts": "1481806495.003740",
    "id": "15de54890",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "needs to be done in the activity",
    "ts": "1481806501.003741",
    "id": "15de54891",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "at the start",
    "ts": "1481806506.003742",
    "id": "15de54892",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I need the location available as soon as the permissions are given",
    "ts": "1481806530.003743",
    "id": "15de54893",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Or",
    "ts": "1481806540.003744",
    "id": "15de54894",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "use dexter",
    "ts": "1481806542.003745",
    "id": "15de54895",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "<https://github.com/Karumi/Dexter>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Karumi/Dexter",
        "title_link": "https://github.com/Karumi/Dexter",
        "text": "Dexter - Android library that simplifies the process of requesting permissions at runtime.",
        "fallback": "GitHub: Karumi/Dexter",
        "thumb_url": "https://avatars3.githubusercontent.com/u/6469715?v=3&s=400",
        "from_url": "https://github.com/Karumi/Dexter",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1481806584.003746",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54896",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Its simple enough I just do it myself, never heard of dexter",
    "ts": "1481806602.003748",
    "id": "15de54897",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "yeah but you are tied to the activity",
    "ts": "1481806629.003749",
    "id": "15de54898",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Dexter helps you with that",
    "ts": "1481806634.003750",
    "id": "15de54899",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I'm not using anything else anymore for permissions",
    "ts": "1481806644.003751",
    "id": "15de54900",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Has anyone viewed the source code to the kickstarter app?",
    "ts": "1481806852.003752",
    "id": "15de54901",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09N9J1DY",
    "text": "Hi! I wonder how can I exclude org.jetbrains.annotations.* from org.jetbrains:annotations-java5:15.0 dependency?",
    "ts": "1481807392.003753",
    "id": "15de54902",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> &gt;&gt; why should I use `RealmRecyclerViewAdapter`?   Apart from auto updating fields\n\nif you've read my article, you know why :stuck_out_tongue:",
    "ts": "1481807935.003754",
    "id": "15de54903",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye was gonna read it",
    "ts": "1481807946.003755",
    "id": "15de54904",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> short answer is that you get a `RealmChangeListener` automatically added to the `RealmResults`, and this change listener calls `notifyDataSetChanged()`",
    "ts": "1481807969.003756",
    "id": "15de54905",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "as such when you write to the Realm on a background thread, the adapter gets automagically updated (no animations tho)",
    "ts": "1481807987.003757",
    "id": "15de54906",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "i see",
    "ts": "1481807990.003758",
    "id": "15de54907",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "thats nice",
    "ts": "1481807994.003759",
    "id": "15de54908",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "this is something you can also do manually, but why do it manually if Realm already gives an adapter that does the same thing you would :stuck_out_tongue:",
    "ts": "1481808012.003760",
    "id": "15de54909",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "is there a way to use this RealmChange Listner outisde of the recycler",
    "ts": "1481808023.003761",
    "id": "15de54910",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Does it always call `notifyDataSetChanged()` or will it make effort to only call the more specialised methods?",
    "ts": "1481808029.003762",
    "id": "15de54911",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I have an idea for something",
    "ts": "1481808033.003763",
    "id": "15de54912",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U04TK850N> more specialized methods are a work in progress and will happen once Results integration is complete",
    "ts": "1481808053.003764",
    "id": "15de54913",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so it is `notifyDataSetChanged()` currently",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481808070.000000"
    },
    "ts": "1481808060.003765",
    "id": "15de54914",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "neat",
    "ts": "1481808061.003766",
    "id": "15de54915",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> you can make a RealmChangeListener anywhere, just make sure you retain a field reference to your `RealmResults` somewhere",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481808102.000000"
    },
    "ts": "1481808082.003768",
    "id": "15de54916",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Well my idea was that when users add data to the database locally I can use the `RealmChangeListener` to notify the network sync to run",
    "ts": "1481808145.003770",
    "id": "15de54917",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3FTC3B55",
    "text": "<@U3FTC3B55|osarez> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481808157.003771",
    "id": "15de54918",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`RealmChangeListener` runs on any change to the RealmResults's underlying table",
    "ts": "1481808207.003772",
    "id": "15de54919",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Sweet",
    "ts": "1481808245.003773",
    "id": "15de54920",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I can use it",
    "ts": "1481808247.003774",
    "id": "15de54921",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I am reading the docs",
    "ts": "1481808252.003775",
    "id": "15de54922",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "RealmChangeListener can be registered with a Realm, RealmResults or RealmObject to receive a notification about updates.\nWhen registered against a Realm you'll get notified when a Realm instance has been updated. Register against a RealmResults or RealmObject to only get notified about changes to them.",
    "ts": "1481808274.003776",
    "id": "15de54923",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "I used them for a short time, but with MVP I don’t like it",
    "ts": "1481808518.003777",
    "id": "15de54924",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "As the Presenter will have to know what a RealmResults is",
    "edited": {
      "user": "U1LJG0Y03",
      "ts": "1481808532.000000"
    },
    "ts": "1481808527.003778",
    "id": "15de54925",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "And if you’re using Rx, you can really easily implement your own anyway",
    "ts": "1481808547.003780",
    "id": "15de54926",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "&gt; And if you’re using Rx, you can really easily implement your own anyway \n\nI'm extremely skeptical of that, but go on",
    "ts": "1481808563.003781",
    "id": "15de54927",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "1 se",
    "ts": "1481808572.003782",
    "id": "15de54928",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "c",
    "ts": "1481808573.003783",
    "id": "15de54929",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U1LJG0Y03|contract16> uploaded a file: <https://androidchat.slack.com/files/contract16/F3FT3Q630/-.java|Untitled>",
    "file": {
      "id": "F3FT3Q630",
      "created": 1481808684,
      "timestamp": 1481808684,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U1LJG0Y03",
      "editable": true,
      "size": 390,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3FT3Q630/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3FT3Q630/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/contract16/F3FT3Q630/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3FT3Q630-ba0a938d23",
      "edit_link": "https://androidchat.slack.com/files/contract16/F3FT3Q630/-.java/edit",
      "preview": "\t\tRealm realm = Realm.getDefaultInstance();\r\n        return realm.where(SomeModel.class)\r\n                .equalTo(\"key\", value)\r\n                .findAllAsync()\r\n                .asObservable()\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>\t\t<span class=\"cm-variable\">Realm</span> <span class=\"cm-variable\">realm</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Realm</span>.<span class=\"cm-variable\">getDefaultInstance</span>();</pre></div>\n<div><pre>        <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">realm</span>.<span class=\"cm-variable\">where</span>(<span class=\"cm-variable\">SomeModel</span>.<span class=\"cm-keyword\">class</span>)</pre></div>\n<div><pre>                .<span class=\"cm-variable\">equalTo</span>(<span class=\"cm-string\">&quot;key&quot;</span>, <span class=\"cm-variable\">value</span>)</pre></div>\n<div><pre>                .<span class=\"cm-variable\">findAllAsync</span>()</pre></div>\n<div><pre>                .<span class=\"cm-variable\">asObservable</span>()</pre></div>\n</div>\n</div>\n",
      "lines": 9,
      "lines_more": 4,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U1LJG0Y03",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U1LJG0Y03|contract16>",
    "bot_id": null,
    "ts": "1481808685.003784",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de54930",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "That’s now `Observable&lt;List&lt;SomeModel&gt;&gt;` being returned",
    "ts": "1481808705.003785",
    "id": "15de54931",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I had a wild guess it involved `copyFromRealm()`",
    "ts": "1481808714.003786",
    "id": "15de54932",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Any updates to realm and that fires again",
    "ts": "1481808716.003787",
    "id": "15de54933",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Well yes",
    "ts": "1481808734.003788",
    "id": "15de54934",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "So either you have database logic sitting inside your view",
    "ts": "1481808746.003789",
    "id": "15de54935",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Or you copy from realm and the view just handles a list",
    "ts": "1481808760.003790",
    "id": "15de54936",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "View now has no knowledge of realm, neither does the presenter",
    "ts": "1481808777.003791",
    "id": "15de54937",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i think the next article i write for Realm will probably have to be about \"flawed abstractions\"",
    "ts": "1481808784.003792",
    "id": "15de54938",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "And Realm is only in your repositories now",
    "ts": "1481808784.003793",
    "id": "15de54939",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "talking about why `copyFromRealm()`, a method that copies from the Realm",
    "ts": "1481808804.003794",
    "id": "15de54940",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "doesn't really make sense when you're using a zero-copy database",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481808817.000000"
    },
    "ts": "1481808814.003795",
    "id": "15de54941",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Ok, so how do you test your presenter now that it knows about realm?",
    "ts": "1481808847.003797",
    "id": "15de54942",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Or your view?",
    "ts": "1481808850.003798",
    "id": "15de54943",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's exactly what the article needs to be about :stuck_out_tongue:",
    "ts": "1481808863.003799",
    "id": "15de54944",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Hahaha ok",
    "ts": "1481808880.003800",
    "id": "15de54945",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "the sad thing about realm is that it's instrumentation-test-only if you intend to test Realm itself",
    "ts": "1481808904.003801",
    "id": "15de54946",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "the gist of it is that you need an interface that wraps RealmResults, and an interface that wraps RealmChangeListener",
    "ts": "1481808938.003802",
    "id": "15de54947",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and then you'll have an \"observable result set\"",
    "ts": "1481808951.003803",
    "id": "15de54948",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "which you can replace as a list in tests, because you can always change your repository",
    "ts": "1481808965.003804",
    "id": "15de54949",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I think any solution that discards Realm's lazy-evaluation is a flawed one",
    "ts": "1481809002.003805",
    "id": "15de54950",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "might just be my own personal opinion though",
    "ts": "1481809013.003806",
    "id": "15de54951",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "/gif mind blown",
    "ts": "1481809014.003807",
    "id": "15de54952",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "",
    "bot_id": "B0GH4RVHU",
    "attachments": [
      {
        "fallback": "<https://media.giphy.com/media/5aLrlDiJPMPFS/giphy.gif>",
        "image_url": "https://media.giphy.com/media/5aLrlDiJPMPFS/giphy.gif",
        "image_width": 347,
        "image_height": 404,
        "image_bytes": 649361,
        "is_animated": true,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1481809014.003808",
    "id": "15de54953",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "I have no idea why I didn’t even think of anything like that",
    "ts": "1481809028.003810",
    "id": "15de54954",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "probably because nobody has done it so far :stuck_out_tongue:",
    "ts": "1481809086.003811",
    "id": "15de54955",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "yeah, this is worth an article, lol",
    "ts": "1481809097.003812",
    "id": "15de54956",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "today and tomorrow are my last two days of the year, it's all vacation after that",
    "ts": "1481809116.003813",
    "id": "15de54957",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "well, until that’s out, I’ll stick with copyfromrealm haha",
    "ts": "1481809119.003814",
    "id": "15de54958",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "The first 90% of my app is built now, finally focusing on the second 90%",
    "ts": "1481809175.003815",
    "id": "15de54959",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "heh :smile:",
    "ts": "1481809181.003816",
    "id": "15de54960",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481809630.003817",
    "id": "15de54961",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "second 90%",
    "ts": "1481809633.003818",
    "id": "15de54962",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I have a database manager, any interactions I need to make go through this, and Realm is injected with dagger",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481809737.000000"
    },
    "ts": "1481809661.003819",
    "id": "15de54963",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I dont see why you would ever need to call Realm directly from a presenter",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481809779.000000"
    },
    "ts": "1481809765.003826",
    "id": "15de54964",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> to solve the problem of adding `RealmChangeListener` to a `RealmResults`.",
    "ts": "1481809778.003828",
    "id": "15de54965",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I can do that",
    "ts": "1481809799.003830",
    "id": "15de54966",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "in the manager",
    "ts": "1481809802.003831",
    "id": "15de54967",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "well yes. As long as you retain a field reference to the `RealmResults`, the change listener works.",
    "ts": "1481809822.003832",
    "id": "15de54968",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "My database manager is a singleton",
    "ts": "1481809837.003833",
    "id": "15de54969",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "hmm",
    "ts": "1481809859.003834",
    "id": "15de54970",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I seee what your saying",
    "ts": "1481809865.003835",
    "id": "15de54971",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "obviously the solution is event delegation",
    "ts": "1481809875.003836",
    "id": "15de54972",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "well I think i will just stick to syncing  the database as and when events are fired a like losing or gaining network connection or adding stuff",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481809923.000000"
    },
    "ts": "1481809911.003837",
    "id": "15de54973",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "if you write into the DB on a background thread, then the RealmResults on the UI thread will reflect the version that has the newly written data as well.",
    "ts": "1481809948.003840",
    "id": "15de54974",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Well, I am caching the result, so to speak",
    "ts": "1481810008.003841",
    "id": "15de54975",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "in the manager and then returning the Object to the presenter",
    "ts": "1481810029.003842",
    "id": "15de54976",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "which updates the view",
    "ts": "1481810046.003843",
    "id": "15de54977",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Maybe I am using it wrong",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481810087.000000"
    },
    "ts": "1481810081.003844",
    "id": "15de54978",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "welp. I'd have to see it to tell",
    "ts": "1481810114.003846",
    "id": "15de54979",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just observe this list from my presenter",
    "ts": "1481810377.003848",
    "id": "15de54980",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "subscribe to it",
    "ts": "1481810381.003849",
    "id": "15de54981",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "simple lol",
    "ts": "1481810462.003850",
    "id": "15de54982",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "This code is in my manager",
    "ts": "1481810495.003851",
    "id": "15de54983",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "man, people really hate keeping their lazy-loading lol",
    "ts": "1481810515.003852",
    "id": "15de54984",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481810532.003853",
    "id": "15de54985",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Did I do something wrong?",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481810577.000000"
    },
    "ts": "1481810572.003854",
    "id": "15de54986",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "well, just architecturally questionable",
    "ts": "1481810589.003856",
    "id": "15de54987",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it doesn't scale well with quantity of elements",
    "ts": "1481810599.003857",
    "id": "15de54988",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "guy above <@U1LJG0Y03> also does the same thing",
    "ts": "1481810611.003858",
    "id": "15de54989",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "sure atm",
    "ts": "1481810612.003859",
    "id": "15de54990",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "It not done",
    "ts": "1481810619.003860",
    "id": "15de54991",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I do findalll",
    "ts": "1481810636.003861",
    "id": "15de54992",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "because there in only 10 items",
    "ts": "1481810650.003862",
    "id": "15de54993",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "atm",
    "ts": "1481810653.003863",
    "id": "15de54994",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "not a fan of `*async().asObservable().filter().map(RealmResults::copyFromRealm)`",
    "ts": "1481810666.003864",
    "id": "15de54995",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "why?",
    "ts": "1481810676.003865",
    "id": "15de54996",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "because its assuming you *always* need a copy",
    "ts": "1481810693.003866",
    "id": "15de54997",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "which you likely do not",
    "ts": "1481810697.003867",
    "id": "15de54998",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "true",
    "ts": "1481810713.003868",
    "id": "15de54999",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "mostly because to obtain the list, you need to read all elements in the RealmResults from the Realm; and I'm pretty sure this mapping happens on the UI thread",
    "ts": "1481810714.003869",
    "id": "15de55000",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "you’re going to spin up a lot of GC doing that",
    "ts": "1481810715.003870",
    "id": "15de55001",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "it does happen on the main thread unless you created a handler thread for realm to run in",
    "ts": "1481810734.003871",
    "id": "15de55002",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U055GGAHS> if you can even get the GC up, considering you will have every element in the list",
    "ts": "1481810736.003872",
    "id": "15de55003",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "10 items?",
    "ts": "1481810744.003873",
    "id": "15de55004",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Like I said later I will modify it",
    "ts": "1481810751.003874",
    "id": "15de55005",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and most people don't bother with creating a looper-thread to create an \"auto-update thread that Realm reads unmanaged objects from\" :stuck_out_tongue:",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481810784.000000"
    },
    "ts": "1481810753.003875",
    "id": "15de55006",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "im not sure why realm doens’t default run on a thread other than the main thread",
    "ts": "1481810806.003877",
    "id": "15de55007",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it's one of those things that i had entertained as a concept, but it just seems flawed in a zero-copy setup and therefore never bothered with lol",
    "ts": "1481810807.003878",
    "id": "15de55008",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`findAllAsync()` executes the query on a background thread, and returns the RealmResults to the UI thread's Realm instance",
    "ts": "1481810843.003879",
    "id": "15de55009",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so technically that's on a background thread",
    "ts": "1481810853.003880",
    "id": "15de55010",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "well it creates a warning if I dont use it",
    "ts": "1481810876.003881",
    "id": "15de55011",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "that method didn’t come till 0.84",
    "ts": "1481810878.003882",
    "id": "15de55012",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "Realm works on background threads without a problem tho, you just need to open and close the instance on the background thread",
    "ts": "1481810887.003883",
    "id": "15de55013",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "right",
    "ts": "1481810894.003884",
    "id": "15de55014",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that method `find*Async()` was totally unstable until 0.88.3 :stuck_out_tongue:",
    "ts": "1481810924.003885",
    "id": "15de55015",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "anyways, a solution that externalizes the query (which is pretty fast) to a background thread, then does all the reads and copying (which is kinda slow in batch) on the UI thread",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481811041.000000"
    },
    "ts": "1481811002.003887",
    "id": "15de55016",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "for every single object in the result set, each time the database is written to; and not just the ones that are shown",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481811053.000000"
    },
    "ts": "1481811017.003888",
    "id": "15de55017",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "seems wasteful :smile:",
    "ts": "1481811019.003889",
    "id": "15de55018",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I've heard people using `copyFromRealm()` here and there, but I always say that the only place where it makes sense is when you pass the RealmObjects/RealmResults to GSON",
    "ts": "1481811088.003892",
    "id": "15de55019",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "otherwise it's a flawed way of thinking about Realm as a database <@U3E2EEX38> <@U055GGAHS>",
    "ts": "1481811108.003893",
    "id": "15de55020",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Sure",
    "ts": "1481811129.003894",
    "id": "15de55021",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I didnt plan on using it permenantly",
    "ts": "1481811138.003895",
    "id": "15de55022",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just got started with realm yesterday",
    "ts": "1481811152.003896",
    "id": "15de55023",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and lastnight I finally got it all working",
    "ts": "1481811162.003897",
    "id": "15de55024",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I had planned to redo that stuff",
    "ts": "1481811177.003898",
    "id": "15de55025",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "as I said in <https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f>",
    "attachments": [
      {
        "service_name": "Medium",
        "title": "Basics of Realm: A guide to using Realm 1.2.0",
        "title_link": "https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f",
        "text": "(Note: This article uses Realm 1.2.0, and realm-android-adapters 1.3.0)",
        "fallback": "Medium: Basics of Realm: A guide to using Realm 1.2.0",
        "image_url": "https://cdn-images-1.medium.com/max/1200/1*-gSrCrcN1_LVMfV_w_wiIQ.png",
        "fields": [
          {
            "title": "Reading time",
            "value": "5 min read",
            "short": true
          }
        ],
        "ts": 1472918345,
        "from_url": "https://medium.com/@Zhuinden/basics-of-realm-a-guide-to-using-realm-1-2-0-634471c0fe8f",
        "image_width": 781,
        "image_height": 250,
        "image_bytes": 22353,
        "service_icon": "https://cdn-images-1.medium.com/fit/c/152/152/1*W0nmth_X8nFKjn6BZ388UQ.png",
        "id": 1
      }
    ],
    "ts": "1481811182.003899",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de55026",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": ":thumbsup:",
    "ts": "1481811183.003901",
    "id": "15de55027",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "&gt; You might not have noticed, but I never used `realm.copyFromRealm()` anywhere in the code snippet — don’t forget, *Realm is designed to be a zero-copy database, so obviously you shouldn’t have to copy things out* :P",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481811237.000000"
    },
    "ts": "1481811197.003902",
    "id": "15de55028",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Whats the best way to get List of objects then?",
    "ts": "1481811243.003906",
    "id": "15de55029",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "where did you read that you should use `copyFromRealm()`?",
    "ts": "1481811264.003907",
    "id": "15de55030",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I didnt",
    "ts": "1481811271.003908",
    "id": "15de55031",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "well then",
    "ts": "1481811274.003909",
    "id": "15de55032",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just used it for convienience",
    "ts": "1481811278.003910",
    "id": "15de55033",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "at the time",
    "ts": "1481811281.003911",
    "id": "15de55034",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "But how to I get  List",
    "ts": "1481811313.003912",
    "id": "15de55035",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "without `copyFromRealm`",
    "ts": "1481811327.003913",
    "id": "15de55036",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`RealmResults` is a `List&lt;T&gt;`, but technically you should create an `ObservableList&lt;T&gt;` if you want to keep it clean and sexy",
    "ts": "1481811352.003914",
    "id": "15de55037",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "just like I said above",
    "ts": "1481811354.003915",
    "id": "15de55038",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "`realm.where(ItemList.class).findAllAsync().asObservable()`",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481811400.000000"
    },
    "ts": "1481811393.003916",
    "id": "15de55039",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "i'm confused",
    "ts": "1481811421.003918",
    "id": "15de55040",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811423.003919",
    "id": "15de55041",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "well technically I just don't know why you're doing `copyFromRealm` at the end",
    "ts": "1481811458.003920",
    "id": "15de55042",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "How do I get the data out of the RealmResults into a list or Observable list",
    "ts": "1481811463.003921",
    "id": "15de55043",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`asObservable()` already adds a `RealmChangeListener` anyways",
    "ts": "1481811464.003922",
    "id": "15de55044",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's how it works",
    "ts": "1481811466.003923",
    "id": "15de55045",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`results.get(0)`?",
    "ts": "1481811473.003924",
    "id": "15de55046",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "so what is `copyFromRealm` for?",
    "ts": "1481811508.003925",
    "id": "15de55047",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's a really good question",
    "ts": "1481811515.003926",
    "id": "15de55048",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811518.003927",
    "id": "15de55049",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it's for people who want to either",
    "ts": "1481811519.003928",
    "id": "15de55050",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "1.) send unmanaged objects through GSON, because GSON is stupid and is willing to use only reflection-based field access for reading data",
    "ts": "1481811542.003929",
    "id": "15de55051",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I see",
    "ts": "1481811553.003930",
    "id": "15de55052",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "makes sense then",
    "ts": "1481811559.003931",
    "id": "15de55053",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "2.) desperately misuse Realm, and throw away lazy query evaluation and auto-updates because they don't like to read the manual",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1481811653.000000"
    },
    "ts": "1481811561.003932",
    "id": "15de55054",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811567.003933",
    "id": "15de55055",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just used it in a rush",
    "ts": "1481811574.003935",
    "id": "15de55056",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "trying to get stuff working",
    "ts": "1481811581.003936",
    "id": "15de55057",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "in your given use-case it actually makes zero sense",
    "ts": "1481811594.003937",
    "id": "15de55058",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "lol",
    "ts": "1481811595.003938",
    "id": "15de55059",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "true",
    "ts": "1481811600.003939",
    "id": "15de55060",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you can literally remove it and you'll get the same result",
    "ts": "1481811610.003940",
    "id": "15de55061",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "yep",
    "ts": "1481811613.003941",
    "id": "15de55062",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811614.003942",
    "id": "15de55063",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Its gone",
    "ts": "1481811685.003944",
    "id": "15de55064",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811688.003945",
    "id": "15de55065",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "happy?",
    "ts": "1481811690.003946",
    "id": "15de55066",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "check if it still does the exact same thing XD",
    "ts": "1481811697.003947",
    "id": "15de55067",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i think it should",
    "ts": "1481811699.003948",
    "id": "15de55068",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I am",
    "ts": "1481811701.003949",
    "id": "15de55069",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "firring up emulator",
    "ts": "1481811707.003950",
    "id": "15de55070",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "",
    "bot_id": "B0GH4RVHU",
    "attachments": [
      {
        "fallback": "<http://i.imgur.com/lcxyE0D.gif?noredirect>",
        "image_url": "http://i.imgur.com/lcxyE0D.gif?noredirect",
        "image_width": 400,
        "image_height": 225,
        "image_bytes": 1631278,
        "is_animated": true,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1481811708.003951",
    "id": "15de55071",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "yep",
    "ts": "1481811742.003953",
    "id": "15de55072",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "works exactly the same",
    "ts": "1481811747.003954",
    "id": "15de55073",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481811749.003955",
    "id": "15de55074",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lmao",
    "ts": "1481811764.003956",
    "id": "15de55075",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "seems silly now I thik about it",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481811779.000000"
    },
    "ts": "1481811773.003957",
    "id": "15de55076",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "no idea what I was thinking, I was in a rush I think",
    "ts": "1481811789.003959",
    "id": "15de55077",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "yay :stuck_out_tongue:",
    "ts": "1481811833.003960",
    "id": "15de55078",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "is `insertOrUpdate` ok to use?",
    "ts": "1481811851.003961",
    "id": "15de55079",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "ofc",
    "ts": "1481811854.003962",
    "id": "15de55080",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":stuck_out_tongue:",
    "ts": "1481811855.003963",
    "id": "15de55081",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i use it in all my examples",
    "ts": "1481811862.003964",
    "id": "15de55082",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I have a delete function too",
    "ts": "1481811897.003965",
    "id": "15de55083",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "to purge the database",
    "ts": "1481811901.003966",
    "id": "15de55084",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "for testing only",
    "ts": "1481811907.003967",
    "id": "15de55085",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "no need for the get config",
    "ts": "1481811981.003970",
    "id": "15de55086",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and close",
    "ts": "1481811998.003971",
    "id": "15de55087",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "i forrgot",
    "ts": "1481812001.003972",
    "id": "15de55088",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":disappointed:",
    "ts": "1481812005.003973",
    "id": "15de55089",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "you'll get there XD",
    "ts": "1481812052.003974",
    "id": "15de55090",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "Realm is stupid easy to set up",
    "ts": "1481812055.003975",
    "id": "15de55091",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "haha",
    "ts": "1481812059.003976",
    "id": "15de55092",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye",
    "ts": "1481812060.003977",
    "id": "15de55093",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and also stupid easy to shoot yourself in the foot with it",
    "ts": "1481812062.003978",
    "id": "15de55094",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "lol",
    "ts": "1481812063.003979",
    "id": "15de55095",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "true that",
    "ts": "1481812068.003980",
    "id": "15de55096",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "hello question anyone knew of any QR Code scanner library?",
    "ts": "1481812370.003981",
    "id": "15de55097",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U379MC1E0> i dunno, ZXing?",
    "ts": "1481812449.003982",
    "id": "15de55098",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "take a look at <https://github.com/zxing/zxing>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "zxing/zxing",
        "title_link": "https://github.com/zxing/zxing",
        "text": "zxing - Official ZXing (\"Zebra Crossing\") project home",
        "fallback": "GitHub: zxing/zxing",
        "thumb_url": "https://avatars0.githubusercontent.com/u/1122572?v=3&s=400",
        "from_url": "https://github.com/zxing/zxing",
        "thumb_width": 420,
        "thumb_height": 420,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1481812468.003983",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U39P7U6EP"
        ],
        "count": 2
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de55099",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "i believe google play services also has their own implementation",
    "ts": "1481812506.003985",
    "id": "15de55100",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U379MC1E0",
    "text": "but as I've read it requires user to be redirected to the playstore to download the QR Scanner",
    "ts": "1481812508.003986",
    "id": "15de55101",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "<https://android-developers.googleblog.com/2015/08/barcode-detection-in-google-play.html>",
    "attachments": [
      {
        "title": "Barcode Detection in Google Play services",
        "title_link": "https://android-developers.googleblog.com/2015/08/barcode-detection-in-google-play.html",
        "text": "Posted by Laurence Moroney , Developer Advocate With the release of Google Play services 7.8 we’re excited to announce that we’ve added n...",
        "fallback": "Barcode Detection in Google Play services",
        "image_url": "https://2.bp.blogspot.com/-GYLjUmMCkHo/Vc4WMOmZMWI/AAAAAAAAB8Q/lHM-JY9WNz4/w1200-h630-p-nu/image00.png",
        "from_url": "https://android-developers.googleblog.com/2015/08/barcode-detection-in-google-play.html",
        "image_width": 477,
        "image_height": 250,
        "image_bytes": 160658,
        "service_icon": "https://android-developers.googleblog.com/favicon.ico",
        "service_name": "android-developers.googleblog.com",
        "id": 1
      }
    ],
    "ts": "1481813061.003987",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de55102",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "The Google implementation is poorly documented.",
    "ts": "1481814447.003989",
    "id": "15de55103",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "By default ZXing is setup to launch their own app to do the scanning but you can take that code and work it into your own app so that you don't launch a different app for scanning.",
    "ts": "1481814502.003990",
    "id": "15de55104",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "Anyone have experience building a ContentProvider into an SDK?",
    "ts": "1481815047.003991",
    "id": "15de55105",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "mainly just want to know if I'm about to waste a lot of time trying something stupid",
    "ts": "1481815091.003992",
    "id": "15de55106",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "content providers are a form of IPC so how would you be wasting time (assuming you need IPC)",
    "ts": "1481815261.003993",
    "id": "15de55107",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "the first question I would ask, are you sure you need a content provider?",
    "ts": "1481815283.003994",
    "id": "15de55108",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "our company, Odd Networks, basically provides one common api for our client's to develop their various tv-connected and mobile applications against. so far the sdk is a wrapper for that api that deals with request building and parsing into POJOs, along with dealing with creating Accounts for their apps",
    "ts": "1481815876.003995",
    "id": "15de55109",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "i know they can make their own content providers and sync adapters and such, but would like to help that along if it makes sense to be opinionated about how that's done and whether it can be dynamic enough to fit just their authority (applicationId)",
    "ts": "1481815949.003996",
    "id": "15de55110",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "our client's develop apps, but we also do some of that internally, so it would be a nice-to-have for me if I can create/maintain one library",
    "ts": "1481816018.003997",
    "id": "15de55111",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so you want to make an API they can optionally turn on when they bring in your library",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1481816051.000000"
    },
    "ts": "1481816032.003998",
    "id": "15de55112",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "right now we've built apps that make requests based on user interaction (start activity/fragment &amp; make request)",
    "ts": "1481816073.004000",
    "id": "15de55113",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so 3rd party apps can make API requests through your clients apps?",
    "ts": "1481816082.004001",
    "id": "15de55114",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "i'd like to be able to five them the option of syncing in the background, deep-linking, indexing, etc",
    "ts": "1481816093.004002",
    "id": "15de55115",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "you don't have to allow 3rd party access, do you?",
    "ts": "1481816146.004003",
    "id": "15de55116",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "think netflix or hbo",
    "ts": "1481816244.004004",
    "id": "15de55117",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "that's the type of data we provide",
    "ts": "1481816262.004005",
    "id": "15de55118",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "im not seeing the reason for using a content provider",
    "ts": "1481816305.004006",
    "id": "15de55119",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "content providers are ideal for providing IPC functionality but they can be used to simplify access to certain things like the file system or sqlite for example",
    "ts": "1481816347.004007",
    "id": "15de55120",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "but in both of those cases the idea is more that you can replace the provider transparently to the consumer but you can do that without using content providers so IPC is the real reason to use them",
    "ts": "1481816384.004008",
    "id": "15de55121",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "content loaders would be another reason to use content providers but that’s kind of redundant if you aren’t planning on it being used as IPC",
    "ts": "1481816410.004009",
    "id": "15de55122",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "sorry if this is a dumb question but when you say IPC you mean sharing data between apps, right?",
    "ts": "1481816446.004010",
    "id": "15de55123",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "right",
    "ts": "1481816451.004011",
    "id": "15de55124",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "intents and AIDL are other forms of IPC on android",
    "ts": "1481816463.004012",
    "id": "15de55125",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "yeah that would not be necessary or desired, really",
    "ts": "1481816464.004013",
    "id": "15de55126",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "content provider is to share resources across processes",
    "ts": "1481816512.004014",
    "id": "15de55127",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "that’s what I said :stuck_out_tongue:",
    "ts": "1481816528.004015",
    "id": "15de55128",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "sqlite database or file, i'd assume",
    "ts": "1481816529.004016",
    "id": "15de55129",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "FileUriExposedException is such a nuisance imo :open_mouth:",
    "ts": "1481816541.004017",
    "id": "15de55130",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "ah. bad assumption on my part. i thought a provider was necessary to make a syncadapter, but you can just make it a dummy provider",
    "ts": "1481816751.004018",
    "id": "15de55131",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "well the question is where you actually store the data",
    "ts": "1481816872.004019",
    "id": "15de55132",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "probably sqlite",
    "ts": "1481816880.004020",
    "id": "15de55133",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and how you intend to share it",
    "ts": "1481816885.004021",
    "id": "15de55134",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "because if you intend to share it between apps, then sqlite + content provider is the best bet",
    "ts": "1481816897.004022",
    "id": "15de55135",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "no, not sharing between apps",
    "ts": "1481816911.004023",
    "id": "15de55136",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I'm not entirely sure what you are doing in that database then :smile:",
    "ts": "1481818030.004024",
    "id": "15de55137",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "yeah i'm trying to think through if it's necessary to store things locally or not",
    "ts": "1481819060.004025",
    "id": "15de55138",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DU1GQTV",
    "text": "on one hand it'd be nice to background sync new catalog things, but it isn't entirely necessary",
    "ts": "1481819093.004026",
    "id": "15de55139",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Go offline for sure",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481820941.000000"
    },
    "ts": "1481820934.004027",
    "id": "15de55140",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Makes development easier for a start and there are many other benefits",
    "ts": "1481820964.004029",
    "id": "15de55141",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "You dont have to keep checking if you have an internet connection to make requests",
    "ts": "1481820984.004030",
    "id": "15de55142",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "If you decide to add offline later, it will be painful",
    "ts": "1481821016.004031",
    "id": "15de55143",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3FEVNR28",
    "text": "<@U3FEVNR28|lorenzocamaione> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481828492.004032",
    "id": "15de55144",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3G4DLG4F",
    "text": "<@U3G4DLG4F|canadayj> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481832148.004033",
    "id": "15de55145",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Hi there, I'm trying to build an app starting with the ribot boilerplate, and I'm using a viewPager (with fragments). I'm currently struggling with Dagger2 and the injection of my fragment presenters",
    "ts": "1481832195.004034",
    "id": "15de55146",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Do I need to create another 'layer' of injection (like FragmentModule, component, context, with a new PerFragment scope) ?",
    "ts": "1481832276.004035",
    "id": "15de55147",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Or can I use getActivity().activityComponent().inject(this) .",
    "ts": "1481832379.004036",
    "id": "15de55148",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "?",
    "ts": "1481832380.004037",
    "id": "15de55149",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U200KUU56> it is completely up to you",
    "ts": "1481832462.004038",
    "id": "15de55150",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i've done unscoped+singleton only, as well as subscoping",
    "ts": "1481832470.004039",
    "id": "15de55151",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "honestly, subscoping is more hassle :stuck_out_tongue:",
    "ts": "1481832476.004040",
    "id": "15de55152",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "&gt;  can I use getActivity().activityComponent().inject(this) .\n\nif it's in the activity, then I prefer to override `getSystemService()` and obtain the component via the context",
    "ts": "1481832518.004041",
    "id": "15de55153",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "like this:\n\n``` \npublic class DaggerService {\n    public static final String TAG = \"DaggerService\";\n\n    @SuppressWarnings(\"unchecked\")\n    public static &lt;T&gt; T getComponent(Context context) {\n        //noinspection ResourceType\n        return (T) context.getSystemService(TAG);\n    }\n}\n```",
    "ts": "1481832557.004042",
    "id": "15de55154",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and then `DaggerService.getComponent(context)`",
    "ts": "1481832571.004043",
    "id": "15de55155",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I'm in the fragment, not the activity",
    "ts": "1481832575.004044",
    "id": "15de55156",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "and I want to inject the fragment to... something I guess (I'm just starting with dagger2)",
    "ts": "1481832596.004045",
    "id": "15de55157",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "In my activity I've got `activityComponent().inject(this);\n        setContentView(R.layout.activity_main);\n\n        ButterKnife.bind(this);\n\n        mMainPresenter.attachView(this);\n\n        mViewPager.setAdapter(new MainViewPagerAdapter(getFragmentManager(),\n                MainActivity.this));`",
    "ts": "1481832662.004046",
    "id": "15de55158",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "if you do\n\n```\n@Override\npublic Object getSystemService(String name) {\n    if(DaggerService.TAG.equals(name)) { return DaggerService.getComponent(this); }\n    return super.getSystemService(name);\n}\n```\n\nthen it all becomes easy",
    "ts": "1481832670.004047",
    "id": "15de55159",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "``activityComponent().inject(this);\n        setContentView(R.layout.activity_main);\n\n        ButterKnife.bind(this);\n\n        mMainPresenter.attachView(this);\n\n        mViewPager.setAdapter(new MainViewPagerAdapter(getFragmentManager(),\n                MainActivity.this));`",
    "ts": "1481832671.004048",
    "id": "15de55160",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "and I can inject from anywhere ?",
    "ts": "1481832703.004049",
    "id": "15de55161",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "(sorry for my bad copy/paste)",
    "ts": "1481832710.004050",
    "id": "15de55162",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "getActivity().activityComponent().inject(this)  is for using in classes where you can't use constructor injection  like activitys",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481832919.000000"
    },
    "ts": "1481832910.004051",
    "id": "15de55163",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Yes",
    "ts": "1481832938.004053",
    "id": "15de55164",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "other wise use constructor injection",
    "ts": "1481832942.004054",
    "id": "15de55165",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I'm in a fragment",
    "ts": "1481832949.004055",
    "id": "15de55166",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "then you need to either use getActivity().activityComponent().inject(this)",
    "ts": "1481832957.004056",
    "id": "15de55167",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I cannot use constructor inejction",
    "ts": "1481832959.004057",
    "id": "15de55168",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "or",
    "ts": "1481832964.004058",
    "id": "15de55169",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "make a submodule for each fragment",
    "ts": "1481832971.004059",
    "id": "15de55170",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "which is better ?",
    "ts": "1481832984.004060",
    "id": "15de55171",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "It might be over kill but in my app I have a module/component for each View.",
    "ts": "1481833005.004061",
    "id": "15de55172",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i personally just like to obtain unscoped presenters that i kill and restore on config change",
    "ts": "1481833007.004062",
    "id": "15de55173",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "with seperate scope",
    "ts": "1481833014.004063",
    "id": "15de55174",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and otherwise everything else is singleton",
    "ts": "1481833016.004064",
    "id": "15de55175",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "in my new example project thing i am making a subcomponent for each",
    "ts": "1481833032.004065",
    "id": "15de55176",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but wow is it a hassle XD",
    "ts": "1481833035.004066",
    "id": "15de55177",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "hmm",
    "ts": "1481833039.004067",
    "id": "15de55178",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it's a question of preference",
    "ts": "1481833044.004068",
    "id": "15de55179",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "both works",
    "ts": "1481833046.004069",
    "id": "15de55180",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I think its less hassle in the end",
    "ts": "1481833046.004070",
    "id": "15de55181",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I have a template now for each view",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833071.000000"
    },
    "ts": "1481833060.004071",
    "id": "15de55182",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": ":thumbsup:",
    "ts": "1481833066.004072",
    "id": "15de55183",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I'm using the ribot boilerplate (<https://github.com/ribot/android-boilerplate>)",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "ribot/android-boilerplate",
        "title_link": "https://github.com/ribot/android-boilerplate",
        "text": "android-boilerplate - Android boilerplate app that showcases architecture and libraries used at ribot",
        "fallback": "GitHub: ribot/android-boilerplate",
        "thumb_url": "https://avatars3.githubusercontent.com/u/26924?v=3&s=400",
        "from_url": "https://github.com/ribot/android-boilerplate",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1481833068.004073",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "15de55184",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "They implemented the injection for activities",
    "ts": "1481833092.004076",
    "id": "15de55185",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "but not for fragments, so I'm trying to replicate what they made (something like a generic injection system) for fragments",
    "ts": "1481833152.004077",
    "id": "15de55186",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Well it really depends on the way you are structuring your app",
    "ts": "1481833168.004078",
    "id": "15de55187",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "if you have an activity per Feature then you most likely need a separate module for each activity",
    "ts": "1481833208.004079",
    "id": "15de55188",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Some people do single activity plus many fragment",
    "ts": "1481833224.004080",
    "id": "15de55189",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "some people do single activity and many views",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833247.000000"
    },
    "ts": "1481833233.004081",
    "id": "15de55190",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I'm using a viewPager, so I need to stick with fragments I guess",
    "edited": {
      "user": "U200KUU56",
      "ts": "1481833274.000000"
    },
    "ts": "1481833261.004084",
    "id": "15de55191",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "That's your choice",
    "ts": "1481833283.004086",
    "id": "15de55192",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "you do not have to",
    "ts": "1481833294.004087",
    "id": "15de55193",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "viewPager is just a viewGroup",
    "ts": "1481833315.004088",
    "id": "15de55194",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I the case of single activity + many views, you implement the MVP models for each views ? Or do you have just one presenter ?",
    "ts": "1481833344.004089",
    "id": "15de55195",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "yes MVP each view",
    "ts": "1481833353.004090",
    "id": "15de55196",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "think of them as self contained",
    "ts": "1481833363.004091",
    "id": "15de55197",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "ok",
    "ts": "1481833374.004092",
    "id": "15de55198",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "it's very similar to what I have with fragments",
    "ts": "1481833386.004093",
    "id": "15de55199",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "but using DI I can get access to the singleton Network module but with ViewScope",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833399.000000"
    },
    "ts": "1481833390.004094",
    "id": "15de55200",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Don't take anything I say as 100% right way/correct because I have been using java and Android for only since Oct",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833465.000000"
    },
    "ts": "1481833443.004096",
    "id": "15de55201",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481833453.004098",
    "id": "15de55202",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "... you made tremendous progress it seem !",
    "ts": "1481833463.004099",
    "id": "15de55203",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I guess so :slightly_smiling_face:",
    "ts": "1481833473.004101",
    "id": "15de55204",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I can't easily wrap my head around DI",
    "ts": "1481833478.004102",
    "id": "15de55205",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I have used DI frameworks before, and I guarantee you have/are using DI already without realising it.",
    "ts": "1481833523.004103",
    "id": "15de55206",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Its just that you have to learn how Dagger works",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833551.000000"
    },
    "ts": "1481833541.004104",
    "id": "15de55207",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Yeah I guess so",
    "ts": "1481833556.004106",
    "id": "15de55208",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3FBYKKK5",
    "text": "<@U3FBYKKK5|a.esmaeili> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481833574.004107",
    "id": "15de55209",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I'm struggling with the subcomponent/scope etc",
    "ts": "1481833574.004108",
    "id": "15de55210",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "You provide an Object to dagger",
    "ts": "1481833588.004109",
    "id": "15de55211",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "enter its dependencies",
    "ts": "1481833600.004110",
    "id": "15de55212",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "then when you want to use it",
    "ts": "1481833606.004111",
    "id": "15de55213",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "you can use constructor injection",
    "ts": "1481833632.004112",
    "id": "15de55214",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "so just specify the thing you made in @provides",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833660.000000"
    },
    "ts": "1481833651.004113",
    "id": "15de55215",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and put @inject on the constructor",
    "ts": "1481833674.004115",
    "id": "15de55216",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "thats it",
    "ts": "1481833679.004116",
    "id": "15de55217",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "if its an activity then you have to use the DaggerBuilder",
    "ts": "1481833696.004117",
    "id": "15de55218",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "in that case you dont put @inject",
    "ts": "1481833704.004118",
    "id": "15de55219",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "there is also Field Injection and Method Injection",
    "ts": "1481833718.004119",
    "id": "15de55220",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "That probably made no sense",
    "ts": "1481833733.004120",
    "id": "15de55221",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I'm not very good at explaining things sorry",
    "ts": "1481833746.004121",
    "id": "15de55222",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "No it was a good recap, but I knew the basics",
    "ts": "1481833777.004122",
    "id": "15de55223",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Then you should be good",
    "ts": "1481833798.004123",
    "id": "15de55224",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Sub components have to have seperate Scope",
    "ts": "1481833837.004124",
    "id": "15de55225",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "or Dagger wont even build",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481833856.000000"
    },
    "ts": "1481833843.004125",
    "id": "15de55226",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "A subcomponent must be used in another component ?",
    "ts": "1481833897.004127",
    "id": "15de55227",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Sorry I mean If you make a separate module but include another module as dependency",
    "ts": "1481833936.004128",
    "id": "15de55228",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "so Like I have MainViewModule",
    "ts": "1481833957.004129",
    "id": "15de55229",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and the @provides are scoped",
    "ts": "1481833970.004130",
    "id": "15de55230",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "to @ViewScope",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481834052.000000"
    },
    "ts": "1481833975.004131",
    "id": "15de55231",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and the component has dependencies of another component",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481834030.000000"
    },
    "ts": "1481833994.004132",
    "id": "15de55232",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "This module provides The model and presenter along with all dependecies",
    "ts": "1481834078.004138",
    "id": "15de55233",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "liek RestService",
    "ts": "1481834090.004139",
    "id": "15de55234",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "etc",
    "ts": "1481834091.004140",
    "id": "15de55235",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "something like that :\n```\npublic interface ActivityComponent {\n\n    FragmentComponent fragmentComponent(FragmentModule fragmentModule);\n\n}\n```",
    "edited": {
      "user": "U200KUU56",
      "ts": "1481834105.000000"
    },
    "ts": "1481834095.004141",
    "id": "15de55236",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "then fragmentcomponent is a subcomponent ?",
    "ts": "1481834120.004143",
    "id": "15de55237",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "then in the module I can provide deps from the netmodule",
    "ts": "1481834184.004145",
    "id": "15de55238",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I was wondering about @subcomponent",
    "ts": "1481834190.004146",
    "id": "15de55239",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ahh",
    "ts": "1481834200.004147",
    "id": "15de55240",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "This is a separate component",
    "ts": "1481834217.004148",
    "id": "15de55241",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I also had a separate scope for eachg view at one time",
    "ts": "1481834260.004149",
    "id": "15de55242",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "haha",
    "ts": "1481834263.004150",
    "id": "15de55243",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I think thats overkill",
    "ts": "1481834269.004151",
    "id": "15de55244",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "haha alright",
    "ts": "1481834306.004152",
    "id": "15de55245",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "I still need to dive in some tutos",
    "ts": "1481834339.004153",
    "id": "15de55246",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Reading code",
    "ts": "1481834354.004154",
    "id": "15de55247",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "is the best",
    "ts": "1481834356.004155",
    "id": "15de55248",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I just download tonnes of projects and disect them",
    "ts": "1481834368.004156",
    "id": "15de55249",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "make sure I understand them",
    "ts": "1481834378.004157",
    "id": "15de55250",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Well you seem motivated ! The problem is that I think the project needs to be 'humble' for me to dive in",
    "ts": "1481834399.004158",
    "id": "15de55251",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "A too big project is scary",
    "ts": "1481834408.004159",
    "id": "15de55252",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "hehe",
    "ts": "1481834413.004160",
    "id": "15de55253",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "It has to be big for me",
    "ts": "1481834418.004161",
    "id": "15de55254",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Or think, whats the point",
    "ts": "1481834425.004162",
    "id": "15de55255",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "learn little by little, understand small projects before moving on to big ones",
    "ts": "1481834487.004163",
    "id": "15de55256",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "oh ye for sure, but most project examples that are on github are quite small",
    "ts": "1481834513.004164",
    "id": "15de55257",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "yeah that's true",
    "ts": "1481834530.004165",
    "id": "15de55258",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "If they are a complete mess I avoid them, I think you develop an intuition for good vs bad code, I still make a lot of mistakes though",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481834599.000000"
    },
    "ts": "1481834531.004166",
    "id": "15de55259",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Well thank you for your help, (and thanks to zhuinden, even though I did not understand all that you were saying :sweat_smile: )\nOff to code now !",
    "ts": "1481834817.004171",
    "id": "15de55260",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> &gt; I also had a separate scope for eachg view at one time\n\na solution to create scopes per screen is to provide `Class&lt;?&gt; value();` parameter to the scope",
    "ts": "1481836432.004172",
    "id": "15de55261",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it becomes different scopes",
    "ts": "1481836439.004173",
    "id": "15de55262",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Oh nice thanks",
    "ts": "1481836524.004174",
    "id": "15de55263",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Have you used RxBindings",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481836577.000000"
    },
    "ts": "1481836569.004175",
    "id": "15de55264",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I'm trying to make a Checkbox Observable",
    "ts": "1481836595.004177",
    "id": "15de55265",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Scrap that",
    "ts": "1481836628.004178",
    "id": "15de55266",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I did it",
    "ts": "1481836630.004179",
    "id": "15de55267",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1481836632.004180",
    "id": "15de55268",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U200KUU56>  &gt; I was wondering about @subcomponent\n\n`@Subcomponent` is just a different way to define a component dependency, but you create the subcomponent via a factory method inside the parent component",
    "ts": "1481836673.004181",
    "id": "15de55269",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ahh I wondered also, I never had a need for it though",
    "ts": "1481836701.004182",
    "id": "15de55270",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "honestly in my current big projects i just have `@Singleton` and unscoped, and a single global injector, lol",
    "ts": "1481836833.004183",
    "id": "15de55271",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "LOL",
    "ts": "1481836994.004184",
    "id": "15de55272",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I dont think theres anything wrong with that",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481837015.000000"
    },
    "ts": "1481837009.004185",
    "id": "15de55273",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "but it can cause leaks",
    "ts": "1481837034.004187",
    "id": "15de55274",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "if you're not careful",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1481837049.000000"
    },
    "ts": "1481837040.004188",
    "id": "15de55275",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "<@U39P7U6EP> I am just reading your Realm Article about `RealmChangeListener` and I wondered what you think of this. I have a service that does network fetching to update my Realm database, do you think its ok to use a `RealmChangeListener` to start this running",
    "ts": "1481837170.004190",
    "id": "15de55276",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "<@U39P7U6EP>   `if(realm != null) { // guard against weird low-budget phones`",
    "ts": "1481837644.004191",
    "id": "15de55277",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":weary:",
    "ts": "1481837669.004192",
    "id": "15de55278",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2QHEEGBX",
    "text": "Morning peeps :d",
    "ts": "1481838200.004193",
    "id": "15de55279",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":nyancat_big:",
    "ts": "1481838392.004194",
    "id": "15de55280",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Evening",
    "ts": "1481838500.004195",
    "id": "15de55281",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> I've had weird null pointer exceptions in `onDestroy()` and I just generally don't trust anything to exist in `onDestroy()`",
    "ts": "1481840436.004196",
    "id": "15de55282",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "not with Realm specifically",
    "ts": "1481840441.004197",
    "id": "15de55283",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "just in general",
    "ts": "1481840443.004198",
    "id": "15de55284",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "<https://sites.google.com/a/android.com/tools/recent/androidstudio23beta1isnowavailable|Android Studio 2.3 Beta 1 is now available>\nWe have just released <https://sites.google.com/a/android.com/tools/download/studio/builds/android-studio-2-3-beta-1|Android Studio 2.3 Beta 1> to the Canary, Dev, and Beta channels. In addition to the usual plethora of bug fixes, there are a number of noteworthy changes just in time for the holidays.For those in the Beta Channel here are many of the changes since Android Studio 2.2.Instant Run. In Android...",
    "username": "Posts of Recent Changes",
    "icons": {
      "image_36": "https://a.slack-edge.com/66f9/img/services/rss_36.png",
      "image_48": "https://a.slack-edge.com/66f9/img/services/rss_48.png",
      "image_72": "https://a.slack-edge.com/205a/img/services/rss_72.png"
    },
    "bot_id": "B062SSUPJ",
    "attachments": [
      {
        "title": "Android Studio 2.3 Beta 1 is now available - Android Studio Project Site",
        "title_link": "https://sites.google.com/a/android.com/tools/recent/androidstudio23beta1isnowavailable",
        "text": "Android tools project information site",
        "fallback": "Android Studio 2.3 Beta 1 is now available - Android Studio Project Site",
        "from_url": "https://sites.google.com/a/android.com/tools/recent/androidstudio23beta1isnowavailable",
        "thumb_url": "https://lh6.googleusercontent.com/CJKGgGu7RW3FS92gfhPfDFWDY29JoQjpJvV_s_2kAahElwTrxi1LAPtC5y7nEVaNDb5etBbwKKSk-bjDH09Qs2Lazmqyl4VvrXAGypV26AXMd0fxfgiG62T607s8ROwtJhEDeFTg",
        "thumb_width": 16,
        "thumb_height": 16,
        "service_icon": "https://ssl.gstatic.com/sites/p/662db1/system/app/images/apple-touch-icon.png",
        "service_name": "sites.google.com",
        "id": 1
      },
      {
        "title": "Android Studio 2.3 Beta 1 - Android Studio Project Site",
        "title_link": "https://sites.google.com/a/android.com/tools/download/studio/builds/android-studio-2-3-beta-1",
        "text": "Android tools project information site",
        "fallback": "Android Studio 2.3 Beta 1 - Android Studio Project Site",
        "from_url": "https://sites.google.com/a/android.com/tools/download/studio/builds/android-studio-2-3-beta-1",
        "thumb_url": "https://sites.google.com/a/android.com/tools/_/rsrc/1460493325829/config/customLogo.gif?revision=1",
        "thumb_width": 100,
        "thumb_height": 100,
        "service_icon": "https://ssl.gstatic.com/sites/p/662db1/system/app/images/apple-touch-icon.png",
        "service_name": "sites.google.com",
        "id": 2
      }
    ],
    "subtype": "bot_message",
    "ts": "1481855801.004199",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U3EQFHSAK"
        ],
        "count": 2
      }
    ],
    "id": "15de55285",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "I have a question about Runtime location permission. :slightly_smiling_face: Is it normal that ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCES_FINE_LOCATION) is returniing PackageManager.PERMISSION_GRANTED even if the global device location setting is turned off?",
    "ts": "1481867507.004201",
    "id": "15de55286",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "<@U337FMTFE> Yes because permission is something different",
    "ts": "1481871431.004202",
    "id": "15de55287",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "If you go into you app's options on your phone and check under Permissions you will see a switch turned on",
    "ts": "1481871472.004203",
    "id": "15de55288",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "<@U0E72HWTX> then to check if location service is truly enabled for the app, I should use something like",
    "ts": "1481871747.004204",
    "id": "15de55289",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "Settings.Secure.getInt(context.getContentResolver(), Settings.Secure.LOCATION_MODE)",
    "ts": "1481871748.004205",
    "id": "15de55290",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "right?",
    "ts": "1481871757.004206",
    "id": "15de55291",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "in addition to the permission checking",
    "ts": "1481871768.004207",
    "id": "15de55292",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "Can't remember exact API for that but yes",
    "ts": "1481871824.004208",
    "id": "15de55293",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "Point is just because user granted a location permission doesnt mean he has locations services turned on, so you need to make sure of it",
    "ts": "1481871882.004209",
    "id": "15de55294",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0E72HWTX",
    "text": "I once had a case with this. On Android 6.0 we had implemented some BLE scanning (this requires location service to be enabled since 6.0) but we were not checking if location service is enabled before every scan. People reported that BLE scan is not working because if you run it without location turned on it just won't return any result (wont crush or anything)",
    "ts": "1481872119.004210",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U337FMTFE"
        ],
        "count": 1
      }
    ],
    "id": "15de55295",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "right.. So my current solution is to check first if location service is enabled then run ActivityCompat.checkSelfPermission to see if permission is granted",
    "ts": "1481872894.004211",
    "id": "15de55296",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U337FMTFE",
    "text": "Thanks for the clarification <@U0E72HWTX> :slightly_smiling_face:",
    "ts": "1481872900.004212",
    "id": "15de55297",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]