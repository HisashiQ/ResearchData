[
  {
    "user": "U3XRMJYBD",
    "text": "<@U3XRMJYBD|omrkrc7> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485683243.004104",
    "id": "29de63034",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3Y184MN0",
    "text": "<@U3Y184MN0|andreaselia> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485695961.004105",
    "id": "29de63035",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3J6W9P0W",
    "text": "~guys, i’m using Fabric with Crashlytics, Multidex, but still has ClassNotFoundException only on lollipop sdks. what’s the hell?~\n~on Marshmallow and Noughat devices all is ok~\n\n<http://frogermcs.github.io/MultiDex-solution-for-64k-limit-in-Dalvik/>",
    "edited": {
      "user": "U3J6W9P0W",
      "ts": "1485707967.000000"
    },
    "ts": "1485706426.004106",
    "id": "29de63036",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Hi guys !",
    "ts": "1485711526.004112",
    "id": "29de63037",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "What's the best way to implement a Rx flow for processing data",
    "ts": "1485711551.004113",
    "id": "29de63038",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Ex : I have a publishSubject that emits Bitmaps, and I would like to analyse these bitmaps, thus returning a custom object containing info, then I would like to process these objects, etc",
    "edited": {
      "user": "U200KUU56",
      "ts": "1485711718.000000"
    },
    "ts": "1485711627.004114",
    "id": "29de63039",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Should I make custom operators ? Or maybe another publishSubject that will subscribe to the first one, process the bitmap, and emit the created object",
    "ts": "1485711680.004115",
    "id": "29de63040",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "?",
    "ts": "1485711684.004116",
    "id": "29de63041",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Or simply call all the functions in my first class (that just emits bitmaps for the moment), and emit the final object",
    "ts": "1485711789.004118",
    "id": "29de63042",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3J6W9P0W",
    "text": "1. try processors (Rx2)\n2. read this article: <http://blog.danlew.net/2015/03/02/dont-break-the-chain/>",
    "edited": {
      "user": "U3J6W9P0W",
      "ts": "1485712613.000000"
    },
    "ts": "1485712607.004119",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U3Y184MN0"
        ],
        "count": 2
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "29de63043",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Thanks a lot :slightly_smiling_face:",
    "ts": "1485712830.004122",
    "id": "29de63044",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3J6W9P0W",
    "text": "`another publishSubject that will subscribe to the first one, process the bitmap, and emit the created object`\n\nthis will be nice when u should notify about, for example, error only part of subscribers\nfor example, u have stream of messages from the server and some of the subscribers (that are waiting for their response) should know about error, and some (that are waiting for optional event) may not know about error\nerror is connection lost event",
    "edited": {
      "user": "U3J6W9P0W",
      "ts": "1485713207.000000"
    },
    "ts": "1485713179.004125",
    "id": "29de63045",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Hmm so this is the way to go you think ? No need to use compose() or to make a new operator (implementing FlowableOperator) ?",
    "edited": {
      "user": "U200KUU56",
      "ts": "1485713555.000000"
    },
    "ts": "1485713504.004128",
    "id": "29de63046",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Also I'm currently using RxRelay (instead of publishSubjects)",
    "ts": "1485713526.004129",
    "id": "29de63047",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Would processors benefit me since I'm not using backpressure ?",
    "ts": "1485713536.004130",
    "id": "29de63048",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3J6W9P0W",
    "text": "i can’t give u answer, but i’ve gotten errors sometimes with subjects",
    "ts": "1485713577.004132",
    "id": "29de63049",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Alright, thanks :slightly_smiling_face:\nI will definetely check out the link you gave me (about Transformers)",
    "ts": "1485713770.004133",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U3J6W9P0W"
        ],
        "count": 1
      }
    ],
    "id": "29de63050",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3X8SN108",
    "text": "<@U3X8SN108|shahgupta> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485717029.004134",
    "id": "29de63051",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3WU02P70",
    "text": "ugh, any ProGuard wizards about? I updated some libraries and suddenly I'm getting 2 warnings that makes me unable to do a release build:\n\n```Warning: library class org.reflections.serializers.JsonSerializer$1 extends or implements program class com.google.gson.JsonDeserializer\nWarning: library class org.reflections.serializers.JsonSerializer$2 extends or implements program class com.google.gson.JsonSerializer\n\n[...snip...]\n\nWarning: there were 2 instances of library classes depending on program classes.\n         You must avoid such dependencies, since the program classes will\n         be processed, while the library classes will remain unchanged.\n         (<http://proguard.sourceforge.net/manual/troubleshooting.html#dependency>)```",
    "thread_ts": "1485727060.004135",
    "reply_count": 1,
    "replies": [
      {
        "user": "U05473HHT",
        "ts": "1485732564.004139"
      }
    ],
    "ts": "1485727060.004135",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "29de63052",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3WU02P70",
    "text": "<https://s.azgul.com/gwdd1.png> how do I go about finding out what library included this jar? and how can I exclude it :E",
    "attachments": [
      {
        "fallback": "686x77px image",
        "image_url": "https://s.azgul.com/gwdd1.png",
        "image_width": 686,
        "image_height": 77,
        "image_bytes": 23264,
        "from_url": "https://s.azgul.com/gwdd1.png",
        "id": 1
      }
    ],
    "thread_ts": "1485727202.004136",
    "reply_count": 1,
    "replies": [
      {
        "user": "U05473HHT",
        "ts": "1485732628.004141"
      }
    ],
    "ts": "1485727202.004136",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "29de63053",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U200KUU56> you typically don't need a custom operator.",
    "ts": "1485727896.004138",
    "id": "29de63054",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "<@U3WU02P70> What libraries did you update?",
    "thread_ts": "1485727060.004135",
    "parent_user_id": "U3WU02P70",
    "ts": "1485732564.004139",
    "id": "29de63055",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "<@U3WU02P70> should be something like `./gradlew app:dependencies`",
    "thread_ts": "1485727202.004136",
    "parent_user_id": "U3WU02P70",
    "ts": "1485732628.004141",
    "id": "29de63056",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3XUNJA59",
    "text": "<@U3XUNJA59|galarzaa90> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485733248.004143",
    "id": "29de63057",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3XAQBHU1",
    "text": "<@U3XAQBHU1|llui> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485733542.004144",
    "id": "29de63058",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I noticed my github got a spike in traffic",
    "ts": "1485738983.004145",
    "id": "29de63059",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "it was from androidweekly",
    "ts": "1485738997.004146",
    "id": "29de63060",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":smile:",
    "ts": "1485739113.004147",
    "id": "29de63061",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3XVBQDQB",
    "text": "<@U3XVBQDQB|zacdavis> has joined the channel",
    "subtype": "channel_join",
    "ts": "1485742235.004148",
    "id": "29de63062",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "Congrats",
    "ts": "1485745988.004149",
    "id": "29de63063",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "<@U3E2EEX38> :taco: :nutella:",
    "ts": "1485746004.004150",
    "id": "29de63064",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Thanks:)",
    "ts": "1485746392.004151",
    "id": "29de63065",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0ESBF4AV",
    "text": "Congrats!",
    "ts": "1485749452.004152",
    "id": "29de63066",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "<@U39P7U6EP> thanks :slightly_smiling_face: So it's best to make several subjects (or processors, or relays...), each one subscribing to the other and emitting the processed data ?",
    "ts": "1485760991.004153",
    "id": "29de63067",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i think you should be able to describe one chain of data processing with one chain of operators between your observables",
    "ts": "1485761173.004154",
    "id": "29de63068",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but then again, I think `share()` allows you to share the same observable with multiple things",
    "ts": "1485761199.004155",
    "id": "29de63069",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "probably <https://github.com/JakeWharton/RxReplayingShare> this transformer is relevant",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "JakeWharton/RxReplayingShare",
        "title_link": "https://github.com/JakeWharton/RxReplayingShare",
        "text": "RxReplayingShare - An RxJava 2 transformer which combines replay(1), publish(), and refCount() operators.",
        "fallback": "GitHub: JakeWharton/RxReplayingShare",
        "thumb_url": "https://avatars2.githubusercontent.com/u/66577?v=3&s=400",
        "from_url": "https://github.com/JakeWharton/RxReplayingShare",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1485761254.004156",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "29de63070",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "Hmm I think I had not understood at all what I was doing :neutral_face:\nIt seems I can just get to my result using the map operator",
    "ts": "1485761580.004158",
    "id": "29de63071",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U200KUU56",
    "text": "In his example, Jake Wharton is making a Singleton class just for his map operator (along with debounce, etc)\nIs this a good pattern ? making a class per 'operation' ?",
    "ts": "1485762122.004159",
    "id": "29de63072",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]