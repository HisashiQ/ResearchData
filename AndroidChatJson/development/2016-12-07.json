[
  {
    "user": "U0L2TDNSZ",
    "text": "Hi, in what situation we need to *save* variable and *restore* it after device rotation? If i create variable in `onCreate()`, i *don't* need to save it and restore right ?",
    "ts": "1481100943.000265",
    "id": "07de51690",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U379MC1E0> are you using a `FragmentStatePagerAdapter`?",
    "ts": "1481101119.000266",
    "id": "07de51691",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0L2TDNSZ> when you want any changes made to that variable persisted across configuration change and/or process death",
    "ts": "1481101139.000267",
    "id": "07de51692",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0L2TDNSZ",
    "text": "<@U39P7U6EP>  well, if get ID from intent extras, i dont need to save it right? i want same ID when Activity is recreated. ANd intent will be redelivered",
    "edited": {
      "user": "U0L2TDNSZ",
      "ts": "1481101226.000000"
    },
    "ts": "1481101207.000268",
    "id": "07de51693",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0L2TDNSZ",
    "text": "And you can't restore if process dies i believe <@U39P7U6EP>",
    "ts": "1481101366.000270",
    "id": "07de51694",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0L2TDNSZ> Intent extras are persisted across process death and config change",
    "ts": "1481101387.000271",
    "id": "07de51695",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's why they exist in the first place",
    "ts": "1481101391.000272",
    "id": "07de51696",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0L2TDNSZ> \"And you can't restore if process dies i believe \" then you believe wrong",
    "ts": "1481101404.000273",
    "id": "07de51697",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "when i say process death, i mean low memory condition",
    "ts": "1481101431.000274",
    "id": "07de51698",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "if you've ever opened Pokemon Go, then you've probably seen everything else die of process death :stuck_out_tongue:",
    "ts": "1481101444.000275",
    "id": "07de51699",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3AUW1ZGR",
    "text": "<@U3AUW1ZGR|zmajeric> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481101471.000276",
    "id": "07de51700",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0L2TDNSZ",
    "text": ":+1:",
    "ts": "1481101666.000277",
    "id": "07de51701",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3AUW1ZGR",
    "text": "Hello fellas :slightly_smiling_face:\nI've managed to start facebook intent for user to write status in my app with pre-defined image I add as extras (image from web), without FbSDK. Is there a way to manually add metadata to image? I mean its not written link next to image (in status) but my own text.",
    "ts": "1481102695.000278",
    "id": "07de51702",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07CUTEUS",
    "text": "Hi guys. I have published an article to explain how and when to use synchronized and the volatile modifier in Java. Hope you find it useful.\n\n<https://medium.com/google-developer-experts/on-properly-using-volatile-and-synchronized-702fc05faac2#.4bkw1fm6p>",
    "attachments": [
      {
        "service_name": "Medium",
        "title": "On properly using volatile and synchronized – Google Developers Experts",
        "title_link": "https://medium.com/google-developer-experts/on-properly-using-volatile-and-synchronized-702fc05faac2#.4bkw1fm6p",
        "text": "In the last weeks I have been writing about the transient modifier and the different types of references available in Java. I want to hold…",
        "fallback": "Medium: On properly using volatile and synchronized – Google Developers Experts",
        "image_url": "https://d262ilb51hltx0.cloudfront.net/max/1200/1*snN9RGvLtAQjl4r7KWMMgA.jpeg",
        "fields": [
          {
            "title": "Reading time",
            "value": "5 min read",
            "short": true
          }
        ],
        "ts": 1481104383,
        "from_url": "https://medium.com/google-developer-experts/on-properly-using-volatile-and-synchronized-702fc05faac2#.4bkw1fm6p",
        "image_width": 375,
        "image_height": 250,
        "image_bytes": 151290,
        "service_icon": "https://d262ilb51hltx0.cloudfront.net/fit/c/152/152/1*FTN1d7gURF5CJnZ4LOGLGw.png",
        "id": 1
      }
    ],
    "ts": "1481106619.000279",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U04U5KS3Z",
          "U1HLABD1S",
          "U0E72HWTX"
        ],
        "count": 4
      }
    ],
    "id": "07de51703",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LFEJ1ST",
    "text": "Hi, I am working on an app idea, but wondering if this is even possible, I want to escrow money in my paypal by brands and when brands are satisfied they pay that money to clients , I dont want my app to interfere in this transaction , what should be the best solution (My app only interfere when there is a dispute)",
    "ts": "1481107462.000281",
    "id": "07de51704",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3CAUAQ14",
    "text": "<@U3CAUAQ14|laurie_scheepers> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481107519.000282",
    "id": "07de51705",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "<@U0LFEJ1ST> we do something kinda like that (a paypal middle-step) at bandcamp.. it’s not exactly trivial, lots of edge cases to consider, but it’s possible",
    "ts": "1481113658.000283",
    "id": "07de51706",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "the catch is that you’d have to require your clients and brands to also have paypal accounts",
    "ts": "1481113677.000284",
    "id": "07de51707",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "essentially, we maintain a single-source-of-truth accounting ledger in our database, and payments/payouts are treated as line items in the ledger",
    "ts": "1481113739.000285",
    "id": "07de51708",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "but the paypal dance is the complicated part, lots of points of failure in the process that you need to be aware of and be able to handle (also, it’s important to be able to have an admin tool which lets you resolve issues)",
    "ts": "1481113789.000286",
    "id": "07de51709",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "I’m not super familiar with the ins and outs of it, we have a whole team who work on that",
    "ts": "1481113924.000287",
    "id": "07de51710",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LFEJ1ST",
    "text": "<@U16GF1B0F> awesome Thanks !",
    "ts": "1481115220.000288",
    "id": "07de51711",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U17U92HJM",
    "text": "Has anyone worked on applying filters on videos?",
    "ts": "1481117202.000289",
    "id": "07de51712",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2RRH206T",
    "text": "Hi guys, I am trying to use the Google Places Android API,  So I was using the `android.maps.v2` in my app and had added the API_KEY for it in `&lt;meta-data&gt;` inside `&lt;application&gt;` , but now when I am using the Places API,  (for location autocomplete), I am getting  `PLACES_API_KEY_INVALID` in the Android Monitor . \nI have not added any new KEY for Places in my Manifest,  there's only the Maps.v2 API Key in there, in the Google Console Dashboard, I have enabled Google Maps Android API,  Google Places API Web Service,  Google Maps Geocoding API,  Google Places API for Android",
    "ts": "1481117751.000290",
    "id": "07de51713",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2RRH206T",
    "text": "I can't figure out what to add now ? Because the note on the Places API Documentation says _Note: You need an API key with Android restrictions, not browser restrictions. *You can use the same API key for your Google Maps Android API v2 apps and your Google Places API for Android apps.*_",
    "edited": {
      "user": "U2RRH206T",
      "ts": "1481117894.000000"
    },
    "ts": "1481117856.000291",
    "id": "07de51714",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2RRH206T",
    "text": "If it helps, I am following this : <https://developers.google.com/places/android-api/autocomplete>",
    "ts": "1481118080.000293",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51715",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "any body uses phabricator for code review?",
    "ts": "1481118977.000294",
    "id": "07de51716",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "i created a diff from the feature branch on my laptop but now that laptop broken",
    "ts": "1481119006.000295",
    "id": "07de51717",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "when i try to land the same diff it says no local branch found",
    "ts": "1481119022.000296",
    "id": "07de51718",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "any way to land it?",
    "ts": "1481119043.000297",
    "id": "07de51719",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "any way sort it out. patch it and change the branch name... and land again",
    "ts": "1481120253.000298",
    "id": "07de51720",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2M0WUZ7A",
    "text": "<@U07CUTEUS> thanks for your article.\n\n&gt; This can leads to inconsistency\ncan lead\n\n&gt; catch (Exception e)\nAwful practice, there are some interesting articles about handling InterruptedException. Also very first concurrent code example is too intricated.\n\n&gt; volatile is a modifier that can be applied to variables.\nTo fields.",
    "ts": "1481122387.000299",
    "id": "07de51721",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07CUTEUS",
    "text": "Thanks for your feedback <@U2M0WUZ7A> , really appreciate it! I am checking it out as soon as I get some time :slightly_smiling_face:",
    "ts": "1481122462.000300",
    "id": "07de51722",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Does anyone know a good article for error handling in Retrofit2 with RxJava? Finally moving from Retrofit1",
    "ts": "1481122560.000301",
    "id": "07de51723",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "<https://futurestud.io/tutorials/retrofit-2-simple-error-handling>",
    "attachments": [
      {
        "title": "Retrofit 2 — Simple Error Handling",
        "title_link": "https://futurestud.io/tutorials/retrofit-2-simple-error-handling",
        "text": "Future Studio provides on-demand learning &amp; wants you to become a better Android (Retrofit, Gson, Glide) and Node.js/hapi.js developer!",
        "fallback": "Retrofit 2 — Simple Error Handling",
        "from_url": "https://futurestud.io/tutorials/retrofit-2-simple-error-handling",
        "service_icon": "https://futurestud.io/images/favicons/apple-touch-icon.png",
        "service_name": "Future Studio",
        "id": 1
      }
    ],
    "ts": "1481122664.000302",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51724",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Is that really how it should be done?",
    "ts": "1481122719.000304",
    "id": "07de51725",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Isn't there a way this can all be done with some kind of interceptor or something?",
    "ts": "1481122734.000305",
    "id": "07de51726",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Looks like a hell of a lot of boilerplate",
    "ts": "1481122740.000306",
    "id": "07de51727",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Yeah you can build a custom interceptor or factory to fit your needs, but it’s a massive pita",
    "ts": "1481122778.000307",
    "id": "07de51728",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": ":stuck_out_tongue:",
    "ts": "1481122780.000308",
    "id": "07de51729",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "If you do though, will give tacos",
    "ts": "1481122793.000309",
    "id": "07de51730",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Jesus",
    "ts": "1481122802.000310",
    "id": "07de51731",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Who thought making Retrofit so unfriendly was the way to go?",
    "ts": "1481122812.000311",
    "id": "07de51732",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "At least provide some examples",
    "ts": "1481122827.000312",
    "id": "07de51733",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I’ve read an article about it recently :thinking_face:",
    "ts": "1481122859.000313",
    "id": "07de51734",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "I get that error handling wasn't top notch in Retrofit 1",
    "ts": "1481122933.000314",
    "id": "07de51735",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "But come on, just straight out removing any functionality?",
    "ts": "1481122944.000315",
    "id": "07de51736",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "They’ve moved it",
    "ts": "1481122969.000316",
    "id": "07de51737",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "So",
    "ts": "1481122969.000317",
    "id": "07de51738",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Basically, an `IOException` can be taken as an error from the server",
    "ts": "1481122988.000318",
    "id": "07de51739",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "(Very basically)",
    "ts": "1481123039.000319",
    "id": "07de51740",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Actually",
    "ts": "1481123141.000320",
    "id": "07de51741",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "They justified",
    "ts": "1481123145.000321",
    "id": "07de51742",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "The reason behind retrofit 2 and why error handling was removed",
    "ts": "1481123158.000322",
    "id": "07de51743",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "I've read it somewhere",
    "ts": "1481123167.000323",
    "id": "07de51744",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "(By they I mean I've read a comment from jake wharton with the reason behind it)",
    "ts": "1481123274.000324",
    "id": "07de51745",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "I'm reading through some articles",
    "ts": "1481123321.000325",
    "id": "07de51746",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "<https://github.com/square/retrofit/issues/1102>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "How do we create ErrorHandler in retrofit 2.0? · Issue #1102 · square/retrofit · GitHub",
        "title_link": "https://github.com/square/retrofit/issues/1102",
        "text": "Hi It seems ErrorHandler is removed in 2.0 and we need to use CallAdapter instead. Is there any examples to look at? Cheers,",
        "fallback": "GitHub: How do we create ErrorHandler in retrofit 2.0? · Issue #1102 · square/retrofit",
        "thumb_url": "https://avatars3.githubusercontent.com/u/10492842?v=3&s=400",
        "from_url": "https://github.com/square/retrofit/issues/1102",
        "thumb_width": 153,
        "thumb_height": 153,
        "service_icon": "https://a.slack-edge.com/e8ef6/img/unfurl_icons/github.png",
        "id": 1
      }
    ],
    "ts": "1481123326.000326",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51747",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "I like the way errors are handled more",
    "ts": "1481123328.000328",
    "id": "07de51748",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "<https://github.com/square/retrofit/issues/1102>",
    "ts": "1481123334.000329",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51749",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "But I would just like to have a better way of handling them myself",
    "ts": "1481123337.000330",
    "id": "07de51750",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Thats where I've read it",
    "ts": "1481123338.000331",
    "id": "07de51751",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Haha",
    "ts": "1481123345.000332",
    "id": "07de51752",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Damn you got there first :stuck_out_tongue:",
    "ts": "1481123350.000333",
    "id": "07de51753",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": ":smile: Points to me!",
    "ts": "1481123362.000334",
    "id": "07de51754",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "<@U3697FDAN> :taco:",
    "ts": "1481123371.000335",
    "id": "07de51755",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2M0WUZ7A",
    "text": "With retrofit2 we usually write own abstract class implementing `Callback` with checking response for success. Then our own `onError` will be called both with `IOException`s and HTTP errors, and `onSuccess` only with successful response body.",
    "edited": {
      "user": "U2M0WUZ7A",
      "ts": "1481123500.000000"
    },
    "ts": "1481123452.000336",
    "id": "07de51756",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3697FDAN",
    "text": "Unfortunatelly i've only been using retrofit2 with soap XML so my error handling is a bit different, but i'm doing a somewhat similiar approach that  you used miha",
    "ts": "1481123662.000339",
    "id": "07de51757",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "<@U2M0WUZ7A> ya I'm thinking of doing something similar but for RxJava",
    "edited": {
      "user": "U061HDV96",
      "ts": "1481124664.000000"
    },
    "ts": "1481124650.000340",
    "id": "07de51758",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "But I found some articles that give me some good info regarding the CallAdapterFactory stuff",
    "edited": {
      "user": "U061HDV96",
      "ts": "1481124710.000000"
    },
    "ts": "1481124703.000343",
    "id": "07de51759",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U061HDV96>  yeah Retrofit's error handling is a pain in the butt, it took a while to figure it out: <https://gist.github.com/Zhuinden/29f31517f9593c8f08dea394c772f271#file-realm-background-operation-example-retrofit2-java>",
    "ts": "1481125344.000345",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51760",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Ya, it's just a pain because there don't seem to be any straightforward docs",
    "ts": "1481125372.000346",
    "id": "07de51761",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Don't expect me to read through the whole doxygen or javadocs",
    "ts": "1481125382.000347",
    "id": "07de51762",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U16GF1B0F",
    "text": "<@U07CUTEUS> \n&gt; Also, in Java all read and write operations will be atomic for a volatile variable (including long and double variables). Many platforms perform the operations in long and double in two steps, writing/reading 32 bytes at a time, and allowing two threads to see two different values. This can be avoided by using volatile.\n\nIt might be nice to note that yes, while the reads and writes are atomic, you still may need to synchronize if you intend to do something like:\n```if (myVolatileInt &lt; 0) {\n    myVolatileInt++;\n}```\nbecause you could end up with a race condition if two threads run that code: if `myVolatileInt` is currently -1, both threads could see that `myVolatileInt &lt; 0`, then move into the block and both update the value.. so `myVolatileInt` becomes 1 instead of 0",
    "edited": {
      "user": "U16GF1B0F",
      "ts": "1481133344.000000"
    },
    "ts": "1481133229.000348",
    "id": "07de51763",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07CUTEUS",
    "text": "Thanks for the feedback <@U16GF1B0F> , definitely worth noting! Will take a look on the post tomorrow again :slightly_smiling_face:",
    "ts": "1481136681.000355",
    "id": "07de51764",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2DPZ0JLQ",
    "text": "anyone who needs something to do: <https://github.com/JakeWharton/butterknife/issues/248>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Support listeners with identical names · Issue #248 · JakeWharton/butterknife · GitHub",
        "title_link": "https://github.com/JakeWharton/butterknife/issues/248",
        "text": "Following #148 and #245, there is a problem with declaring listener annotations having the same names for different targets. There are different types of targets having listeners with the same name...",
        "fallback": "GitHub: Support listeners with identical names · Issue #248 · JakeWharton/butterknife",
        "thumb_url": "https://avatars1.githubusercontent.com/u/1352945?v=3&s=400",
        "from_url": "https://github.com/JakeWharton/butterknife/issues/248",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://a.slack-edge.com/e8ef6/img/unfurl_icons/github.png",
        "id": 1
      }
    ],
    "ts": "1481140007.000356",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51765",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2DPZ0JLQ",
    "text": "any option is better than the total lack of support for RadioGroup that butterknife has at this time",
    "ts": "1481140075.000358",
    "id": "07de51766",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2YS4P90E",
    "text": "I'm trying to draw a data-bound View to a canvas. The bound values are all blank even though they show up when looking at the actual Activity. Any idea why?",
    "ts": "1481150629.000359",
    "id": "07de51767",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2YS4P90E",
    "text": "(I'm exporting a View to PDF)",
    "ts": "1481150643.000360",
    "id": "07de51768",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3CMK67LN",
    "text": "<@U3CMK67LN|sonminhtran1997> has joined the channel",
    "subtype": "channel_join",
    "ts": "1481151746.000361",
    "id": "07de51769",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2RRH206T",
    "text": "Does anyone know whether Google Maps API allows to FILTER the results of Place Autocomplete (<https://developers.google.com/places/android-api/autocomplete#option_2_use_an_intent_to_launch_the_autocomplete_activity>)  according to the present location's CITY or COUNTRY, so that means it should show all the results from only the CIty level, or State level or Country level, of the User's current location ?",
    "ts": "1481182417.000362",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "07de51770",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]