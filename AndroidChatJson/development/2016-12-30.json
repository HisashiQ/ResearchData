[
  {
    "user": "U3L0ZMYN9",
    "text": "<@U3L0ZMYN9|rohit1899> has joined the channel",
    "subtype": "channel_join",
    "ts": "1483090177.007546",
    "id": "30de58306",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3K7W200H",
    "text": "<@U3K7W200H|tiagoflores> has joined the channel",
    "subtype": "channel_join",
    "ts": "1483090288.007547",
    "id": "30de58307",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3K7W200H",
    "text": "hi iam trying change the color of dividers of list view like this:",
    "ts": "1483090498.007548",
    "id": "30de58308",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3K7W200H",
    "text": "listView.Divider = new ColorDrawable(Android.Graphics.Color.Red);",
    "ts": "1483090500.007549",
    "id": "30de58309",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3K7W200H",
    "text": "but when i do that i lose the dividers",
    "ts": "1483090530.007550",
    "id": "30de58310",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3K7W200H",
    "text": "what can be?",
    "ts": "1483090539.007551",
    "id": "30de58311",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "<@U3K7W200H> well you're setting the divider to a color. Check what class it is and it probably has a way to change the color.",
    "edited": {
      "user": "U061HDV96",
      "ts": "1483119029.000000"
    },
    "ts": "1483119027.007552",
    "id": "30de58312",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U3C4RMQ9W|b_odisho> uploaded a file: <https://androidchat.slack.com/files/b_odisho/F3KV3ASSX/initialize_recipetitle_in_oncreateview.java|initialize recipeTitle in onCreateView>",
    "file": {
      "id": "F3KV3ASSX",
      "created": 1483119876,
      "timestamp": 1483119876,
      "name": "initialize_recipeTitle_in_onCreateView.java",
      "title": "initialize recipeTitle in onCreateView",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U3C4RMQ9W",
      "editable": true,
      "size": 411,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3KV3ASSX/initialize_recipetitle_in_oncreateview.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3KV3ASSX/download/initialize_recipetitle_in_oncreateview.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/b_odisho/F3KV3ASSX/initialize_recipetitle_in_oncreateview.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3KV3ASSX-a86b1f1160",
      "edit_link": "https://androidchat.slack.com/files/b_odisho/F3KV3ASSX/initialize_recipetitle_in_oncreateview.java/edit",
      "preview": "private TextView recipeTitle;\r\n\r\n@Override\r\npublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n    View view = inflater.inflate(R.layout.fragment_recipe_detail, container, false);\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">private</span> <span class=\"cm-variable\">TextView</span> <span class=\"cm-variable\">recipeTitle</span>;</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-meta\">@Override</span></pre></div>\n<div><pre><span class=\"cm-keyword\">public</span> <span class=\"cm-variable\">View</span> <span class=\"cm-def\">onCreateView</span>(<span class=\"cm-variable\">LayoutInflater</span> <span class=\"cm-variable\">inflater</span>, <span class=\"cm-variable\">ViewGroup</span> <span class=\"cm-variable\">container</span>, <span class=\"cm-variable\">Bundle</span> <span class=\"cm-variable\">savedInstanceState</span>) {</pre></div>\n<div><pre>    <span class=\"cm-variable\">View</span> <span class=\"cm-variable\">view</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">inflater</span>.<span class=\"cm-variable\">inflate</span>(<span class=\"cm-variable\">R</span>.<span class=\"cm-variable\">layout</span>.<span class=\"cm-variable\">fragment_recipe_detail</span>, <span class=\"cm-variable\">container</span>, <span class=\"cm-atom\">false</span>);</pre></div>\n</div>\n</div>\n",
      "lines": 13,
      "lines_more": 8,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U3C4RMQ9W",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U3C4RMQ9W|b_odisho>",
    "bot_id": null,
    "ts": "1483119876.007554",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "30de58313",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U3C4RMQ9W|b_odisho> uploaded a file: <https://androidchat.slack.com/files/b_odisho/F3LMP4Y22/dont_initliaze_in_oncreateview.java|dont initliaze in onCreateView>",
    "file": {
      "id": "F3LMP4Y22",
      "created": 1483119924,
      "timestamp": 1483119924,
      "name": "dont_initliaze_in_onCreateView.java",
      "title": "dont initliaze in onCreateView",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U3C4RMQ9W",
      "editable": true,
      "size": 168,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3LMP4Y22/dont_initliaze_in_oncreateview.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3LMP4Y22/download/dont_initliaze_in_oncreateview.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/b_odisho/F3LMP4Y22/dont_initliaze_in_oncreateview.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3LMP4Y22-4646667b89",
      "edit_link": "https://androidchat.slack.com/files/b_odisho/F3LMP4Y22/dont_initliaze_in_oncreateview.java/edit",
      "preview": "public void setRecipeTitle(String recipeTitle) {\r\n\tif (getView() != null) {        \r\n\t\t((TextView) getView().findViewById(R.id.text_title)).setText(recipeTitle);\r\n\t}\r\n}",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-keyword\">public</span> <span class=\"cm-variable-3\">void</span> <span class=\"cm-def\">setRecipeTitle</span>(<span class=\"cm-variable-3\">String</span> <span class=\"cm-variable\">recipeTitle</span>) {</pre></div>\n<div><pre>\t<span class=\"cm-keyword\">if</span> (<span class=\"cm-variable\">getView</span>() <span class=\"cm-operator\">!=</span> <span class=\"cm-atom\">null</span>) {        </pre></div>\n<div><pre>\t\t((<span class=\"cm-variable\">TextView</span>) <span class=\"cm-variable\">getView</span>().<span class=\"cm-variable\">findViewById</span>(<span class=\"cm-variable\">R</span>.<span class=\"cm-variable\">id</span>.<span class=\"cm-variable\">text_title</span>)).<span class=\"cm-variable\">setText</span>(<span class=\"cm-variable\">recipeTitle</span>);</pre></div>\n<div><pre>\t}</pre></div>\n<div><pre>}</pre></div>\n</div>\n</div>\n",
      "lines": 5,
      "lines_more": 0,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U3C4RMQ9W",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U3C4RMQ9W|b_odisho>",
    "bot_id": null,
    "ts": "1483119925.007555",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "30de58314",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "is there any disadvantage to using the second block of code instead of the first?",
    "ts": "1483119959.007556",
    "id": "30de58315",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1Q9VN3J6",
    "text": "<@U3C4RMQ9W> The first one basically is saving the TextView as a reference and use it when neccessary without having to llok up for it again\nThe second one would be more performant in terms of memory because it looks up for the wignet only when neccessary and updating its value.\n\nI think it depends on how many times you update your title in your Activity/Fragment lifecycle.",
    "ts": "1483122001.007557",
    "id": "30de58316",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "Thank you <@U1Q9VN3J6> I've been using the second method because the TextView is only updated once in this case.",
    "ts": "1483122213.007558",
    "id": "30de58317",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "I guess I just needed some reassurance",
    "ts": "1483122230.007559",
    "id": "30de58318",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1Q9VN3J6",
    "text": "nice, have you used ButterKnife? it's very cool for view binding, also you avoid using casting",
    "ts": "1483122261.007560",
    "id": "30de58319",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1Q9VN3J6",
    "text": "Basically you can replace\n&gt; ((TextView) getView().findViewById(R.id.text_title)).setText(recipeTitle);\nwith\n&gt;TextView title = ButterKnife.findById(getView(), R.id.text_title));\n&gt;title.setText(recipeTitle);",
    "edited": {
      "user": "U1Q9VN3J6",
      "ts": "1483122386.000000"
    },
    "ts": "1483122324.007561",
    "id": "30de58320",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "I always read that ```findViewById``` is an expensive operation so I'm assuming that if the view was accessed multiple times the first method would be more effecient.",
    "ts": "1483122330.007562",
    "id": "30de58321",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "I'm constantly seeing ButterKnife mentioned as well as other dependency injection libraries, but I haven't found the time to really sit down and learn what it's all about yet.",
    "ts": "1483122403.007564",
    "id": "30de58322",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3C4RMQ9W> ButterKnife is not a dependency injection library.",
    "ts": "1483122801.007565",
    "id": "30de58323",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it just generates the `findViewById()` calls for you based on annotations you put on fields",
    "ts": "1483122816.007566",
    "id": "30de58324",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "thus reducing boilerplate inside your personal codebase",
    "ts": "1483122824.007567",
    "id": "30de58325",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so that you avoid the manual casting, for example",
    "ts": "1483122839.007568",
    "id": "30de58326",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "DI library would be Dagger2",
    "ts": "1483122860.007569",
    "id": "30de58327",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "<@U39P7U6EP> your right its Dagger2 I'm thinking of",
    "ts": "1483123178.007570",
    "id": "30de58328",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3C4RMQ9W> Dagger2 is e z p z",
    "ts": "1483123196.007571",
    "id": "30de58329",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "I'm using mosby to develop an app and I always see Dagger2 and RXJava mentioned",
    "ts": "1483123234.007572",
    "id": "30de58330",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "are they the same thing",
    "ts": "1483123238.007573",
    "id": "30de58331",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "no, they are 3 entirely different things",
    "ts": "1483123252.007574",
    "id": "30de58332",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "mosby is this so-called \"mvp framework\" although i never needed a framework for mvp",
    "ts": "1483123265.007575",
    "id": "30de58333",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "dagger2 is a dependency injection library",
    "ts": "1483123272.007576",
    "id": "30de58334",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "RxJava is this funky framework that converts all \"observable\" event streams into Observables, and provides operators for handling them - essentially converting all callback-based or asynchronous logic into synchronous chain of method calls",
    "ts": "1483123309.007577",
    "id": "30de58335",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "----------",
    "ts": "1483123316.007578",
    "id": "30de58336",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "as for dagger2, i wrote this thing about it that might be a good explanation <@U3C4RMQ9W>  <http://stackoverflow.com/questions/40545075/dagger2-and-android/40546157#40546157>",
    "attachments": [
      {
        "title": "Dagger2 and Android",
        "title_link": "http://stackoverflow.com/questions/40545075/dagger2-and-android/40546157#40546157",
        "text": "I am trying to implement Dagger Dependency Injection into my app but I am having a hard time understanding how it works, especially coming from Spring where DI was much easier and much more declara...",
        "fallback": "Dagger2 and Android",
        "thumb_url": "https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded",
        "from_url": "http://stackoverflow.com/questions/40545075/dagger2-and-android/40546157#40546157",
        "thumb_width": 316,
        "thumb_height": 316,
        "service_icon": "https://cdn.sstatic.net/Sites/stackoverflow/img/favicon.ico?v=4f32ecc8f43d",
        "service_name": "stackoverflow.com",
        "id": 1
      }
    ],
    "ts": "1483123329.007579",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U3C4RMQ9W"
        ],
        "count": 2
      }
    ],
    "id": "30de58337",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DKNLCB1",
    "text": "<@U39P7U6EP> Side question - How do you manage presenter/view state on configuration change without an mvp library? \n\nI’m in the middle of converting an app to use mvp… so far so good, but I’m afraid I’ll get bit sooner or later when I have to deal with screen rotation or something...",
    "ts": "1483123587.007581",
    "id": "30de58338",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1Q9VN3J6",
    "text": "event bus / otto",
    "ts": "1483123701.007582",
    "id": "30de58339",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0DKNLCB1> if your app does not deal with screen rotation, then it does not deal with process death",
    "ts": "1483123707.007583",
    "id": "30de58340",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "which is bad",
    "ts": "1483123711.007584",
    "id": "30de58341",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3C4RMQ9W",
    "text": "<@U39P7U6EP> thank you I really appreciate the help. I'm gonna check out the article you linked to",
    "ts": "1483123717.007585",
    "id": "30de58342",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i need to ask if you use RxJava or not, because the answer differs",
    "ts": "1483123719.007586",
    "id": "30de58343",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DKNLCB1",
    "text": "No rx… not yet at least :wink: One thing at a time...",
    "ts": "1483123747.007587",
    "id": "30de58344",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0DKNLCB1> that makes the answer easier",
    "ts": "1483123760.007588",
    "id": "30de58345",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "because for Rx to handle rotation, it needs to use an RxReplayingShare",
    "ts": "1483123776.007589",
    "id": "30de58346",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<https://github.com/JakeWharton/RxReplayingShare> &lt;-- this thing",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "JakeWharton/RxReplayingShare",
        "title_link": "https://github.com/JakeWharton/RxReplayingShare",
        "text": "RxReplayingShare - An RxJava 2 transformer which combines replay(1), publish(), and refCount() operators.",
        "fallback": "GitHub: JakeWharton/RxReplayingShare",
        "thumb_url": "https://avatars2.githubusercontent.com/u/66577?v=3&s=400",
        "from_url": "https://github.com/JakeWharton/RxReplayingShare",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1483123807.007590",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U0DKNLCB1"
        ],
        "count": 2
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "30de58347",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so anyways",
    "ts": "1483123831.007592",
    "id": "30de58348",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "if your app does not deal with screen rotation, then it does not deal with process death",
    "ts": "1483123835.007593",
    "id": "30de58349",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "which is bad",
    "ts": "1483123839.007594",
    "id": "30de58350",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's why you need to persist your state in `onSaveinstanceState()` no matter what",
    "ts": "1483123847.007595",
    "id": "30de58351",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "which essentially means that your Presenter's state can be saved in `onSaveInstanceState()` and restored in `onCreate()` if such state exists",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1483123898.000000"
    },
    "ts": "1483123891.007596",
    "id": "30de58352",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but considering your presenter's state can die and be restored",
    "ts": "1483123919.007598",
    "id": "30de58353",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "the question is whether you want to retain your presenter across config change, or just recreate and restore like you do with activities in general",
    "ts": "1483123934.007599",
    "id": "30de58354",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "honestly, both solutions make sense",
    "ts": "1483123943.007600",
    "id": "30de58355",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "----------\n\nyou have to save and restore the state of the presenter in `onSaveInstanceState()` and in `onCreate()` either way, otherwise you lose state across process death.",
    "edited": {
      "user": "U39P7U6EP",
      "ts": "1483124106.000000"
    },
    "ts": "1483124099.007601",
    "id": "30de58356",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DKNLCB1",
    "text": "Dang… that makes sense. Definitely going to tackle this now rather than later. Thanks for your feedback!",
    "ts": "1483124180.007603",
    "id": "30de58357",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "if you want to retain the presenter across config change, then the simple way to do it is to preserve the presenter in either a retained fragment, or via `onRetainCustomNonConfigurationInstance()` callback of AppCompatActivity",
    "ts": "1483124244.007604",
    "id": "30de58358",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "personally as I use Dagger2, i think retaining the scoped component itself is a simplified way of handling this issue",
    "ts": "1483124320.007605",
    "id": "30de58359",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "because the scoped component has a scoped instance of the presenter",
    "ts": "1483124335.007606",
    "id": "30de58360",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I think these `ThirtyInch` and `Mosby` libraries dictate too much with a whole bunch of magic",
    "ts": "1483124361.007607",
    "id": "30de58361",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i've never used 'em",
    "ts": "1483124365.007608",
    "id": "30de58362",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DKNLCB1",
    "text": "I just got Dagger 2 up and running on this app, so I could probably use that, too.",
    "ts": "1483124371.007609",
    "id": "30de58363",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "subscoping is difficult to set up imo",
    "ts": "1483124380.007610",
    "id": "30de58364",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i just had an example that does it",
    "ts": "1483124386.007611",
    "id": "30de58365",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "previously in other apps, I used to have 1 singleton component",
    "ts": "1483124395.007612",
    "id": "30de58366",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "all presenters were unscoped, and were recreated when rotation happened",
    "ts": "1483124403.007613",
    "id": "30de58367",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DKNLCB1",
    "text": "As for `ThirtyInch` and `Mosby`, I agree… there’s too much going on. I’ve been following the sample skeleton from here:\n\n<https://github.com/Syhids/android-architecture/tree/todo-mvp-fragmentless>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Syhids/android-architecture",
        "title_link": "https://github.com/Syhids/android-architecture/tree/todo-mvp-fragmentless",
        "text": "android-architecture - A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.",
        "fallback": "GitHub: Syhids/android-architecture",
        "thumb_url": "https://avatars0.githubusercontent.com/u/671202?v=3&s=400",
        "from_url": "https://github.com/Syhids/android-architecture/tree/todo-mvp-fragmentless",
        "thumb_width": 100,
        "thumb_height": 100,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1483124433.007614",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "30de58368",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0DKNLCB1> that is nice, although I think it would make more sense to use only 1 activity",
    "ts": "1483124704.007616",
    "id": "30de58369",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "why  extends RelativeLayout",
    "ts": "1483124778.007617",
    "id": "30de58370",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "why not? custom viewgroup makes sense",
    "ts": "1483124785.007618",
    "id": "30de58371",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "its more costly",
    "ts": "1483124788.007619",
    "id": "30de58372",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "than FrameLayout?",
    "ts": "1483124794.007620",
    "id": "30de58373",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye",
    "ts": "1483124797.007621",
    "id": "30de58374",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i almost always extend relativelayout",
    "ts": "1483124803.007622",
    "id": "30de58375",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Better to extend FrameLayout",
    "ts": "1483124805.007623",
    "id": "30de58376",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "because i'm like \"lol whatever\"",
    "ts": "1483124807.007624",
    "id": "30de58377",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "typically when i need to put things here and there in the view, i need to use a relative layout anyways",
    "ts": "1483124820.007625",
    "id": "30de58378",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "FrameLayout has the simplest view hierarchy",
    "ts": "1483124834.007626",
    "id": "30de58379",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "you can use a layout",
    "ts": "1483124841.007627",
    "id": "30de58380",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and put what ever you want",
    "ts": "1483124846.007628",
    "id": "30de58381",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "lol",
    "ts": "1483124848.007629",
    "id": "30de58382",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "unless its a custom widget or something",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1483124972.000000"
    },
    "ts": "1483124874.007630",
    "id": "30de58383",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "but in terms of fragment less it makes sense to extend FrameLayout",
    "ts": "1483124904.007631",
    "id": "30de58384",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "and having an activity per View defeats the object of fragmentless",
    "ts": "1483125048.007633",
    "id": "30de58385",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": ":zipper_mouth_face:",
    "ts": "1483125069.007634",
    "id": "30de58386",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "&gt; and having an activity per View defeats the object of fragmentless\n\nword",
    "ts": "1483125497.007635",
    "id": "30de58387",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U0DKNLCB1> I've been tinkering with this example project but the tests are still heavily work in progress <https://github.com/Zhuinden/ExampleGithubClient/tree/master/app/src/main/java/com/zhuinden/examplegithubclient>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "Zhuinden/ExampleGithubClient",
        "title_link": "https://github.com/Zhuinden/ExampleGithubClient/tree/master/app/src/main/java/com/zhuinden/examplegithubclient",
        "text": "ExampleGithubClient - This is heavily a work in progress, and merely a POC at most.",
        "fallback": "GitHub: Zhuinden/ExampleGithubClient",
        "thumb_url": "https://avatars3.githubusercontent.com/u/11718392?v=3&s=400",
        "from_url": "https://github.com/Zhuinden/ExampleGithubClient/tree/master/app/src/main/java/com/zhuinden/examplegithubclient",
        "thumb_width": 308,
        "thumb_height": 308,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1483125533.007636",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U0DKNLCB1"
        ],
        "count": 2
      }
    ],
    "id": "30de58388",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "and so is the data layer",
    "ts": "1483125969.007638",
    "id": "30de58389",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I'm not too keen on that example, I don't want to pick holes :smile: so I'll leave it at that, its not that its bad I just don't like the way some of it is structured, but like you said its a wip.",
    "ts": "1483126008.007639",
    "id": "30de58390",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> i am however open to criticism",
    "ts": "1483126073.007640",
    "id": "30de58391",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i do however realize that subscoping + presenter retention is additional unnecessary complexity",
    "ts": "1483126085.007641",
    "id": "30de58392",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Good to know, some people get easily offended",
    "ts": "1483126087.007642",
    "id": "30de58393",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but it's what everyone does lately :smile:",
    "ts": "1483126089.007643",
    "id": "30de58394",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "hey, even i'm not entirely happy with it",
    "ts": "1483126096.007644",
    "id": "30de58395",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "`MainPresenter.initializeView()` is too long",
    "ts": "1483126102.007645",
    "id": "30de58396",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "`MainComponentConfig ` is interesting",
    "ts": "1483126203.007646",
    "id": "30de58397",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "it's so that you can modify the modules from the tests, of course",
    "ts": "1483126365.007647",
    "id": "30de58398",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye thats nice I need to do that",
    "ts": "1483126380.007648",
    "id": "30de58399",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "currently i just reset all dependencies directly in the test though, lol",
    "ts": "1483126410.007649",
    "id": "30de58400",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I'm not very experienced with tests yet",
    "ts": "1483126413.007650",
    "id": "30de58401",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "so there's still stuff to figure out",
    "ts": "1483126414.007651",
    "id": "30de58402",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "me neither",
    "ts": "1483126416.007652",
    "id": "30de58403",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "that's what this example was originally written for XD",
    "ts": "1483126422.007653",
    "id": "30de58404",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "nice I will download and have a play around",
    "ts": "1483126432.007654",
    "id": "30de58405",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "technically flowless + test integration along with the service provider + subscoping",
    "ts": "1483126433.007655",
    "id": "30de58406",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "my unit tests are broken atm",
    "ts": "1483126440.007656",
    "id": "30de58407",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "because i added a data layer that works a bit differently and i haven't figured it out yet how to make it pretty XD",
    "ts": "1483126457.007657",
    "id": "30de58408",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i'm trying to mirror Realm's behavior",
    "ts": "1483126463.007658",
    "id": "30de58409",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "without it being Realm",
    "ts": "1483126465.007659",
    "id": "30de58410",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "haha",
    "ts": "1483126505.007660",
    "id": "30de58411",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I mean the structure",
    "ts": "1483126570.007663",
    "id": "30de58412",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I dont use and RxBus either",
    "ts": "1483126663.007666",
    "id": "30de58413",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "i think the Data Manager is funny because that's pretty much \"Realm\" on my side",
    "ts": "1483126774.007667",
    "id": "30de58414",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye",
    "ts": "1483126779.007668",
    "id": "30de58415",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "mine is an interface",
    "edited": {
      "user": "U3E2EEX38",
      "ts": "1483126789.000000"
    },
    "ts": "1483126783.007669",
    "id": "30de58416",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "I can replace any DB I want just modify the datamanager",
    "ts": "1483126804.007671",
    "id": "30de58417",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "my datamanger interfaces with realm or sqlite",
    "ts": "1483126839.007672",
    "id": "30de58418",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "granted realm require extending from realmObject which is why I got rid of it",
    "ts": "1483126864.007673",
    "id": "30de58419",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "one of the reasons*",
    "ts": "1483126871.007674",
    "id": "30de58420",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "welp, if i ever get myself to remove Realm, that'll be for completely different reasons",
    "ts": "1483126887.007675",
    "id": "30de58421",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "I'm going to miss my synchronous data access tho",
    "ts": "1483126894.007676",
    "id": "30de58422",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "haha",
    "ts": "1483126899.007677",
    "id": "30de58423",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "Ribot doesn't actually use an event bus anymore in their example.",
    "ts": "1483126907.007678",
    "id": "30de58424",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "Honestly I dont miss it I have almost the same thing with SQlite",
    "ts": "1483126911.007679",
    "id": "30de58425",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ahh, well its stil in there",
    "ts": "1483126920.007680",
    "id": "30de58426",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "just not in use?",
    "ts": "1483126928.007681",
    "id": "30de58427",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "They have RxEventBus but doesn't seem to be used.",
    "ts": "1483127076.007682",
    "id": "30de58428",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "ye I just checked",
    "ts": "1483127081.007683",
    "id": "30de58429",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3E2EEX38",
    "text": "there is a unit test",
    "ts": "1483127088.007684",
    "id": "30de58430",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "<@U3E2EEX38> well i could have some <http://Schedulers.io|Schedulers.io>() =&gt; main thread thing with Rx",
    "ts": "1483127455.007686",
    "id": "30de58431",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U39P7U6EP",
    "text": "but i still miss lazy evaluation too XD",
    "ts": "1483127479.007687",
    "id": "30de58432",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3KCS5BNV",
    "text": "<@U3KCS5BNV|rugh> has joined the channel",
    "subtype": "channel_join",
    "ts": "1483133774.007688",
    "id": "30de58433",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3L6029LL",
    "text": "<@U3L6029LL|ptilouis> has joined the channel",
    "subtype": "channel_join",
    "ts": "1483138420.007696",
    "id": "30de58434",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3KCUV49E",
    "text": "<@U3KCUV49E|dr8ton> has joined the channel",
    "subtype": "channel_join",
    "ts": "1483146276.007697",
    "id": "30de58435",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]