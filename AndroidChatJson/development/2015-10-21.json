[
  {
    "user": "U0CRXNLLV",
    "text": "<@U091EBYSU>: What do you mean? Like tablet version: two fragments at the same time in the display? Or just replace them by some action?",
    "ts": "1445414037.002419",
    "id": "21de14056",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CJH0JM9",
    "subtype": "channel_join",
    "text": "<@U0CJH0JM9|shrewmus> has joined the channel",
    "ts": "1445415904.002420",
    "id": "21de14057",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<@U091EBYSU>: yes its a normal thing. Most often used for expanding phone layouts to tablet layouts.",
    "ts": "1445430250.002421",
    "id": "21de14058",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "or as you found, viewpagers can use them too for tabs/items",
    "ts": "1445430276.002422",
    "id": "21de14059",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U0CRXNLLV> I meant several Fragments of exact same class attached to one Activity.  At first glance I thought that it's not a common thing, but then realized that usually it's ok for ViewPager pages with same structure but different content. \n",
    "ts": "1445430500.002423",
    "id": "21de14060",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "<@U055GGAHS> yep",
    "ts": "1445430508.002424",
    "id": "21de14061",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "yup, we do this too. just handing over different arguments",
    "ts": "1445432167.002425",
    "id": "21de14062",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "just make sure you set up your fragment to fragment and fragment to activity communication exactly like this.. <http://developer.android.com/training/basics/fragments/communicating.html>",
    "attachments": [
      {
        "text": "In order to reuse the Fragment UI components, you should build each as a completely self-contained, modular component that defines its own layout and behavior. Once you have defined these reusable Fragments, you can associate them with an Activity and…",
        "fallback": "In order to reuse the Fragment UI components, you should build each as a completely self-contained, modular component that defines its own layout and behavior. Once you have defined these reusable Fragments, you can associate them with an Activity and…",
        "from_url": "http://developer.android.com/training/basics/fragments/communicating.html",
        "id": 1
      }
    ],
    "ts": "1445432334.002426",
    "reactions": [
      {
        "name": "trollface",
        "users": [
          "U055GGAHS",
          "U0548MM6B",
          "U04U5KS3Z",
          "U091EBYSU"
        ],
        "count": 4
      }
    ],
    "id": "21de14063",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "they *really* need to just delete that page",
    "ts": "1445432360.002428",
    "id": "21de14064",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0BV29RLL",
    "text": "Hi, do you guys know something about generation  of tokens in the itoken of itau style?",
    "ts": "1445432608.002429",
    "id": "21de14065",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "<@U055GGAHS>: I can’t even count the amount of doXonFragmentY methods we have ._.",
    "ts": "1445432631.002430",
    "id": "21de14066",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CT7JDN3",
    "subtype": "channel_join",
    "text": "<@U0CT7JDN3|suhas> has joined the channel",
    "ts": "1445433839.002431",
    "id": "21de14067",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08SZ817D",
    "text": "anyone know the best way to go about using a recycler view to build something similar to this? (from google calendar app) trying to figure out how to allow for both vertical and horizontal scrolling, and vary the length of the different events. <http://33.media.tumblr.com/97f27ac6779fee756d9dbba9b0f6bd99/tumblr_inline_n68sk52hM51qc3ie2.png>",
    "attachments": [
      {
        "fallback": "422x750px image",
        "image_url": "http://33.media.tumblr.com/97f27ac6779fee756d9dbba9b0f6bd99/tumblr_inline_n68sk52hM51qc3ie2.png",
        "image_width": 422,
        "image_height": 750,
        "image_bytes": 85428,
        "from_url": "http://33.media.tumblr.com/97f27ac6779fee756d9dbba9b0f6bd99/tumblr_inline_n68sk52hM51qc3ie2.png",
        "id": 1
      }
    ],
    "ts": "1445440603.002432",
    "id": "21de14068",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "<@U055GGAHS>: in all seriousness, what should we use for fragment-fragment communication then?",
    "ts": "1445440613.002434",
    "id": "21de14069",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "depends on what you need to do",
    "ts": "1445440629.002435",
    "id": "21de14070",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "you can use broadcasts, event buses, observables, etc",
    "ts": "1445440642.002436",
    "id": "21de14071",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so there isn’t *an answer* but you should absolutely never do what google suggests there",
    "ts": "1445440661.002437",
    "id": "21de14072",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "their suggestion there was written by an interns intern",
    "ts": "1445440678.002438",
    "id": "21de14073",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "imho activites and fragments should communicate as minimum as possible. don’t see many reasons for talking between those two",
    "edited": {
      "user": "U0548MM6B",
      "ts": "1445440745.000000"
    },
    "ts": "1445440691.002439",
    "id": "21de14074",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yeah almost never, androidisms are typically the only valid reason but i cant think of any right now",
    "ts": "1445440737.002440",
    "id": "21de14075",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "alright thanks",
    "ts": "1445441086.002442",
    "id": "21de14076",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "*discreetly removes code in project*",
    "ts": "1445441098.002443",
    "id": "21de14077",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "lol",
    "ts": "1445441154.002444",
    "id": "21de14078",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "i think most of us have fallen victim to trusting the google developers guides",
    "ts": "1445441169.002445",
    "id": "21de14079",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "i now read what they say, then generally do the opposite",
    "ts": "1445441184.002446",
    "id": "21de14080",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "ahh, being young and naive….",
    "ts": "1445441186.002447",
    "id": "21de14081",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "so WHY is it bad?",
    "ts": "1445441540.002448",
    "id": "21de14082",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "because fragments are meant to be like most classes, little black boxes. When you have a fragment that forces dependencies into other classes like your activity that is pretty anti pattern",
    "ts": "1445441627.002449",
    "id": "21de14083",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "worse is a fragment knowing about another fragment",
    "ts": "1445441703.002450",
    "id": "21de14084",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "which they suggest via the activity as a communication bridge",
    "ts": "1445441714.002451",
    "id": "21de14085",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "also, communication between those is nearly always a code smell.",
    "ts": "1445441728.002452",
    "id": "21de14086",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "and if a fragment knows about a fragment over another activity",
    "ts": "1445441737.002453",
    "id": "21de14087",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "that’s basically three things with fragile lifecycles depending upon each other",
    "ts": "1445441756.002454",
    "id": "21de14088",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "i see..",
    "ts": "1445441760.002455",
    "id": "21de14089",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "thanks guys, that's good info there",
    "ts": "1445441764.002456",
    "id": "21de14090",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "also, Fragments have recently been further decoupled from Activities (getContext() is now recommended over getActivity())",
    "ts": "1445443210.002457",
    "id": "21de14091",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "so yeah, I’d agree they should mostly be treated as a black box of sorts",
    "ts": "1445443227.002458",
    "id": "21de14092",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "hey fellas",
    "ts": "1445444085.002459",
    "id": "21de14093",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "anyone here messed with the CPU/GPU/Network Profiler in Android Studio much?",
    "ts": "1445444116.002460",
    "id": "21de14094",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Spoiler: it sucks ",
    "ts": "1445444288.002461",
    "id": "21de14095",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I use ddms still for the simple tasks ",
    "ts": "1445444303.002462",
    "id": "21de14096",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "^ same",
    "ts": "1445444329.002463",
    "id": "21de14097",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "damn okay",
    "ts": "1445444353.002464",
    "id": "21de14098",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "i was trying to get the CPU profiler to show all threads on the same timeline",
    "ts": "1445444365.002465",
    "id": "21de14099",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "but dunno if that’s even possible",
    "ts": "1445444372.002466",
    "id": "21de14100",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A0S0WG0",
    "text": "jesus, DDMS seems even more useless for thread profiling than AS",
    "ts": "1445445343.002467",
    "id": "21de14101",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "performance is overrated",
    "ts": "1445445654.002468",
    "id": "21de14102",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "Gradle 2.8 was released yesterday: <https://docs.gradle.org/current/release-notes>",
    "ts": "1445446063.002469",
    "id": "21de14103",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "perf improvements",
    "ts": "1445446074.002470",
    "id": "21de14104",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "my drawerlayout is behind the buttons bar in marshmallow",
    "ts": "1445446105.002471",
    "id": "21de14105",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "WTF",
    "ts": "1445446107.002472",
    "id": "21de14106",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "WTF WTF WTF",
    "ts": "1445446110.002473",
    "id": "21de14107",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "I add it in runtime on request by fetching the topmost layout, and setting myself as it",
    "ts": "1445446137.002474",
    "id": "21de14108",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "so I know that’s what’s causing it",
    "ts": "1445446150.002475",
    "id": "21de14109",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "still, regression",
    "ts": "1445446153.002476",
    "id": "21de14110",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "hi guys. Im using a FragmentStatePagerAdapter to show some slides. Anyone has experience using this and deleting some slides? I would like to remove a slide without loading all the slides again.",
    "edited": {
      "user": "U085CP84F",
      "ts": "1445455565.000000"
    },
    "ts": "1445455504.002477",
    "id": "21de14111",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "just remove the slide (fragment) from the adapter data source the notify the adapter instance of the changes",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1445455611.000000"
    },
    "ts": "1445455589.002479",
    "id": "21de14112",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "I did but the slide still there",
    "ts": "1445455624.002481",
    "id": "21de14113",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "using notifyDataSetChanged",
    "ts": "1445455647.002482",
    "id": "21de14114",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "do you have an example?",
    "ts": "1445455662.002483",
    "id": "21de14115",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "<http://stackoverflow.com/a/26007241/1286667>",
    "attachments": [
      {
        "title": "Removing fragments from FragmentStatePagerAdapter",
        "title_link": "http://stackoverflow.com/a/26007241/1286667",
        "text": "UPDATE After some major fighting with this problem and help from SO users I managed to solve it. This is how my clearProgressUpTo looks like now. public void clearProgressUpTo(int progress) {...",
        "fallback": "Removing fragments from FragmentStatePagerAdapter",
        "thumb_url": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/a/26007241/1286667",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      }
    ],
    "ts": "1445455666.002484",
    "id": "21de14116",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "looks like its just another ‘fragments are terrible’ issue",
    "ts": "1445455699.002486",
    "id": "21de14117",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "hehe",
    "ts": "1445455709.002487",
    "id": "21de14118",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "basically the pager adapter is poorly implemented so guess you have to do that",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1445455725.000000"
    },
    "ts": "1445455714.002488",
    "id": "21de14119",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U085CP84F",
    "text": "I tried to find a better way to do it or a library, but no success",
    "ts": "1445455755.002490",
    "id": "21de14120",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CLZ2DU5",
    "text": "&gt; don’t see many reasons for talking between those two\n@bluecap I agree, and hate google for that messy architecture. In a case of mine, I have the activity being the orchestrator of the layouts depending on whether it's a phone or a tablet. Tapping an item on a list fragment causes a change in the right-side panel fragment if it's a tablet. If on a phone a new activity is spawned (or the list fragment gets replaced). Key point: list fragment item tap emits a message about it and parent activity decides what to do.",
    "edited": {
      "user": "U0CLZ2DU5",
      "ts": "1445457447.000000"
    },
    "ts": "1445457391.002491",
    "id": "21de14121",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07V5TJF4",
    "text": "<@U085CP84F>: if you’re not set on using fragments,  it’s pretty easy to implement your own PagerAdapter and just use Views instead of fragments. If you really need to save the view state when a view is detached, you can use `View#restoreHierarchyState` and `View#saveHierarchyState`",
    "edited": {
      "user": "U07V5TJF4",
      "ts": "1445458950.000000"
    },
    "ts": "1445458789.002495",
    "id": "21de14122",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "<https://sites.google.com/a/android.com/tools/recent/androidstudio141available|Android Studio 1.4.1 Available>\nAndroid Studio 1.4.1 is now available in the beta channel. Unless there are any surprises, we will promote it to the stable channel in a couple of days.1.4.1 is a pure bug fix release on top of 1.4. The following fixes are included:Fixed Gradle model caching bug (led to excessive Gradle syncing when the IDE was restarted)Fix code completion performance issue when using libraries with private resourcesFix deadlock when using native debuggingFix subversion 1.9 version validation189658: Do not...",
    "username": "Posts of Recent Changes",
    "icons": {
      "image_48": "https://slack.global.ssl.fastly.net/66f9/img/services/rss_48.png"
    },
    "bot_id": "B062SSUPJ",
    "attachments": [
      {
        "title": "Android Studio 1.4.1 Available - Android Tools Project Site",
        "title_link": "https://sites.google.com/a/android.com/tools/recent/androidstudio141available",
        "text": "Android tools project information site",
        "fallback": "Android Studio 1.4.1 Available - Android Tools Project Site",
        "image_url": "https://sites.google.com/a/android.com/tools/_/rsrc/1445471403065/recent/androidstudio141available/141.png",
        "from_url": "https://sites.google.com/a/android.com/tools/recent/androidstudio141available",
        "image_width": 644,
        "image_height": 203,
        "image_bytes": 36973,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1445472368.002497",
    "id": "21de14123",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "text": "<https://sites.google.com/a/android.com/tools/recent/androidstudio15preview2available|Android Studio 1.5 Preview 2 Available>\nWe've just released Android Studio 1.5 Preview 2 to the Canary <http://channel.In|channel.In> 1.5 we've reworked the build+deploy flow such that instead of first building with Gradle and then popping up the \"choose a device\" dialog, we now immediately ask for a device to push the APK to. Some users were using Run + Cancel to build an APK; we now added a separate \"Build APK\" action to the Build menu for that purpose.There are several new lint checks and a bunch of bug fixes as well.InstallationYou can update your...",
    "username": "Posts of Recent Changes",
    "icons": {
      "image_48": "https://slack.global.ssl.fastly.net/66f9/img/services/rss_48.png"
    },
    "bot_id": "B062SSUPJ",
    "attachments": [
      {
        "title": "Android Studio 1.5 Preview 2 Available - Android Tools Project Site",
        "title_link": "https://sites.google.com/a/android.com/tools/recent/androidstudio15preview2available",
        "text": "Android tools project information site",
        "fallback": "Android Studio 1.5 Preview 2 Available - Android Tools Project Site",
        "image_url": "https://sites.google.com/a/android.com/tools/_/rsrc/1445472112667/recent/androidstudio15preview2available/15p2.png",
        "from_url": "https://sites.google.com/a/android.com/tools/recent/androidstudio15preview2available",
        "image_width": 540,
        "image_height": 250,
        "image_bytes": 61234,
        "id": 1
      }
    ],
    "subtype": "bot_message",
    "ts": "1445472369.002499",
    "id": "21de14124",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "RXAndroid is very good tool to use but just question is that : Retrofit2 is doing same thing without block our UI main thread .",
    "edited": {
      "user": "U09UQHPQV",
      "ts": "1445490239.000000"
    },
    "ts": "1445490227.002501",
    "id": "21de14125",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "What does actual purpose to create RX Java . Sorry this a silly question that i put but i need to know .",
    "ts": "1445490342.002503",
    "id": "21de14126",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "you mean why use the rxjava calladapter?",
    "ts": "1445490398.002504",
    "id": "21de14127",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C0MQXEX",
    "text": "<@U09UQHPQV>: RxJava and Retrofit is two different libs for different purpose",
    "edited": {
      "user": "U0C0MQXEX",
      "ts": "1445490410.000000"
    },
    "ts": "1445490400.002505",
    "id": "21de14128",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0546QERR>:  yes .",
    "ts": "1445490444.002507",
    "id": "21de14129",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "rxjava has a ton of operators that facilitate functional programming beyond just moving your network calls to a background thread",
    "ts": "1445490500.002508",
    "id": "21de14130",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "basically what <@U0C0MQXEX> said",
    "ts": "1445490512.002509",
    "id": "21de14131",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0C0MQXEX>:  yes i am familiar with retrofit but why do i have to subcribe with RXJava ?",
    "ts": "1445490516.002510",
    "id": "21de14132",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C0MQXEX",
    "text": "<@U09UQHPQV>: you don’t have to subscribe with RxJava, in your case you need to understand clearly what is rxJava and how you want to use it before including this dependency in your project, retrofit working fine without RxJava",
    "edited": {
      "user": "U0C0MQXEX",
      "ts": "1445490777.000000"
    },
    "ts": "1445490745.002511",
    "id": "21de14133",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0C0MQXEX>:  I read about RXJava and there are work with observer and observable (class,interface) . If i am register webservice with Retrofit it will work fine that's what i done but there are many article recommend a RXAndroid to subscribe our call and both are work on background thread if i am not wrong.",
    "ts": "1445491147.002513",
    "id": "21de14134",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0546QERR>:",
    "ts": "1445491191.002514",
    "id": "21de14135",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C0MQXEX",
    "text": "<@U09UQHPQV>:Are  you want to add RxJava to just follow articles you read?",
    "edited": {
      "user": "U0C0MQXEX",
      "ts": "1445491261.000000"
    },
    "ts": "1445491253.002515",
    "id": "21de14136",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "rxjava has a lot of power if you have use cases for it. for example, chaining observables where one depends on the output of another",
    "ts": "1445491305.002517",
    "id": "21de14137",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "but if you are just using it as a replacement for retrofit's Callback it doesn't really add much value",
    "ts": "1445491320.002518",
    "id": "21de14138",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0C0MQXEX",
    "text": "<@U09UQHPQV>: if everything working fine - you probably don’t need RxJava and RxAndroid in your project - first you need to find a problem that rxJava could solve and then use it)",
    "ts": "1445491364.002519",
    "id": "21de14139",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0546QERR>:  yes ..correct when dependency come from other API it would be beneficial.",
    "ts": "1445491421.002520",
    "id": "21de14140",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0C0MQXEX>: Alright. Can you tell me any example of problem if you have ?",
    "edited": {
      "user": "U09UQHPQV",
      "ts": "1445491546.000000"
    },
    "ts": "1445491540.002521",
    "id": "21de14141",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "Which you faced and RXJava resolved it for you.",
    "edited": {
      "user": "U09UQHPQV",
      "ts": "1445491657.000000"
    },
    "ts": "1445491635.002523",
    "id": "21de14142",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "I am personally still pretty new with Rx, but my favorite use case I've had so far is deferring the evaluation of the contents of an EditText view until a user stops typing. say, if you want to make a network call to search a user's query, but you don't want to do it after every single letter they type, you can use the debounce operator. debounce will delay the emission of an observable for a specified period of time, and further events will cancel previous ones if they occur within that time period",
    "ts": "1445491846.002526",
    "id": "21de14143",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "the best example I have of rxjava in a networking aspect is when I know my data is not to be trusted. I’m requesting data, and then verifying it’s correct before I use it. Invalid data causes an onError. Another example is dependent network calls. I need a file A file before I get file B, and if file A doesn’t exist, I can just flatmap my file B retrieval after file A retrieval.",
    "ts": "1445491929.002527",
    "id": "21de14144",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0546QERR>: Yes .. request will cancel when debounce  value reach that's good reason to use RXAndroid .",
    "ts": "1445492222.002528",
    "id": "21de14145",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "I liked dan lew's series on RxJava, if you're looking for some introductory reading <http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/>",
    "attachments": [
      {
        "service_name": "Dan Lew Codes",
        "title": "Grokking RxJava, Part 1: The Basics",
        "title_link": "http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/",
        "text": "RxJava is the new hotness amongst Android developers these days. The only problem is that it can be difficult to approach initially. Functional Reactive Programming is hard when you come from an imperative world, but once you understand it, it's...",
        "fallback": "Dan Lew Codes: Grokking RxJava, Part 1: The Basics",
        "ts": 1410793883,
        "from_url": "http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/",
        "id": 1
      }
    ],
    "ts": "1445492232.002529",
    "id": "21de14146",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U053PPGDC>:  Yes Wrap up many error if any wrong with response (i.e json malformed) and as you said file dependency.",
    "ts": "1445492430.002531",
    "id": "21de14147",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "<@U0546QERR>: Sure i will check this.",
    "ts": "1445492534.002532",
    "id": "21de14148",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]