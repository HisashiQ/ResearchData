[
  {
    "user": "U086F1Z9U",
    "text": "Hey guys :D anyone developed games with Unity?",
    "ts": "1443342047.002365",
    "id": "27de10735",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<@U061HDV96>: did I believe :simple_smile:",
    "ts": "1443344655.002366",
    "id": "27de10736",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<@U0B8R3VV4>: bindingAdapters are awesome",
    "ts": "1443356300.002367",
    "id": "27de10737",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<https://plus.google.com/u/0/+LisaWrayZeitouni/posts/LTr5tX5M9mb>",
    "attachments": [
      {
        "title": "Android pro tip: One-line custom fonts in XML with data binding!  I started…",
        "title_link": "https://plus.google.com/u/0/+LisaWrayZeitouni/posts/LTr5tX5M9mb",
        "text": "Android pro tip: One-line custom fonts in XML with data binding! I started playing with data binding last night for real, and I'm amazed by the power it… - Lisa Wray - Google+",
        "fallback": "Android pro tip: One-line custom fonts in XML with data binding!  I started…",
        "image_url": "http://lh3.googleusercontent.com/-tKaOQyzL0jE/VehoP3F9ibI/AAAAAAAAOJw/6jTuVSUwRL8/w506-h281/shamuLMY48Ilisawray09032015113130.png",
        "from_url": "https://plus.google.com/u/0/+LisaWrayZeitouni/posts/LTr5tX5M9mb",
        "image_width": 506,
        "image_height": 227,
        "image_bytes": 31197,
        "id": 1
      }
    ],
    "ts": "1443356301.002368",
    "id": "27de10738",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "that's nice for stuff that is derived from TextView and easily accessible, but not a solution if you want to have a consistent look and feel throughout the whole app",
    "ts": "1443357345.002370",
    "id": "27de10739",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "<@U086F1Z9U>: I have. But I have put it off for some time because I don't have time for it.",
    "ts": "1443364289.002371",
    "id": "27de10740",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "<@U04TK850N>: i guess that’s where theming and styling comes in",
    "ts": "1443364543.002372",
    "id": "27de10741",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "<@U086F1Z9U>: I work with unity sometimes at my job but not really like super deep in the game dev area",
    "ts": "1443373473.002373",
    "id": "27de10742",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "<https://github.com/ivacf/archi>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "ivacf/archi",
        "title_link": "https://github.com/ivacf/archi",
        "text": "Repository that showcases 3 Android app architectures: \"Standard Android\", MVP and MVVM. The exact same app is built 3 times following the different patterns.",
        "fallback": "GitHub: ivacf/archi",
        "thumb_url": "https://avatars3.githubusercontent.com/u/1452346?v=3&s=400",
        "from_url": "https://github.com/ivacf/archi",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1443374531.002374",
    "id": "27de10743",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U051G3BC3",
    "text": "love the idea",
    "ts": "1443374538.002376",
    "id": "27de10744",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "yeah spells it out pretty well",
    "ts": "1443374588.002377",
    "id": "27de10745",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "This is a long shot but is there an effective way to have android handle null strings silently without the app crashing?",
    "ts": "1443377578.002378",
    "id": "27de10746",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "not a very clear question as the obvious answer is to simply prevent null/handle it",
    "ts": "1443377973.002379",
    "id": "27de10747",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "can use TextUtils.isEmpty() to evaluate the string - <https://developer.android.com/reference/android/text/TextUtils.html#isEmpty(java.lang.CharSequence)>",
    "ts": "1443378101.002380",
    "id": "27de10748",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "hmm thanks i guess that's the only way to do it",
    "ts": "1443383428.002381",
    "id": "27de10749",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "the reason im asking is because when my backend dev starts fiddling with stuff, things break and start returning null for some time",
    "ts": "1443383494.002382",
    "id": "27de10750",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "so during this time it's annoying for me",
    "ts": "1443383505.002383",
    "id": "27de10751",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "tell them not to do that",
    "ts": "1443394146.002384",
    "id": "27de10752",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "^ basically the answer",
    "ts": "1443395413.002385",
    "id": "27de10753",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "Defensive coding sucks but is the way to go",
    "ts": "1443396445.002386",
    "id": "27de10754",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "check for null and empty on every value you get from the server",
    "ts": "1443396471.002387",
    "id": "27de10755",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "Worst case you can sanitize it post-serialization to safe empty values for most types",
    "edited": {
      "user": "U0B8R3VV4",
      "ts": "1443396555.000000"
    },
    "ts": "1443396509.002388",
    "id": "27de10756",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "I should have done that for our current app rather than relying on server POJOs as viewmodels -.-",
    "ts": "1443396533.002389",
    "id": "27de10757",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "Something I miss in Gson coming from Jackson is to just ignore nulls",
    "edited": {
      "user": "U0B8R3VV4",
      "ts": "1443396954.000000"
    },
    "ts": "1443396681.002391",
    "id": "27de10758",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "but the 7k method cost may not be worth it :stuck_out_tongue:",
    "ts": "1443396711.002392",
    "id": "27de10759",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "apparently no polymorphic deserialization out of the box either, you need a custom deserializer or something like  <https://github.com/julman99/gson-fire>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "julman99/gson-fire",
        "title_link": "https://github.com/julman99/gson-fire",
        "text": "gson-fire - A java library that adds some very useful features to Gson, like Date serializing to unix timestamp or RFC3339, method (getters) serialization, pre/post processors and many others. Chec...",
        "fallback": "GitHub: julman99/gson-fire",
        "thumb_url": "https://avatars0.githubusercontent.com/u/508718?v=3&s=400",
        "from_url": "https://github.com/julman99/gson-fire",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "edited": {
      "user": "U0B8R3VV4",
      "ts": "1443397098.000000"
    },
    "ts": "1443397082.002394",
    "id": "27de10760",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "&gt;check for null and empty on every value you get from the server",
    "ts": "1443397107.002397",
    "id": "27de10761",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "no thanks",
    "ts": "1443397109.002398",
    "id": "27de10762",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "Yeah me neither, but when the client controls the server",
    "edited": {
      "user": "U0B8R3VV4",
      "ts": "1443399272.000000"
    },
    "ts": "1443397161.002399",
    "id": "27de10763",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "you do that or you crash",
    "ts": "1443397168.002400",
    "id": "27de10764",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "scrap the no gson polymorphism, found the snippet <https://futurestud.io/blog/how-to-deserialize-a-list-of-polymorphic-objects-with-gson/>",
    "attachments": [
      {
        "service_name": "Future Studio Blog",
        "title": "How to De/Serialize a List of Polymorphic Objects with Gson",
        "title_link": "https://futurestud.io/blog/how-to-deserialize-a-list-of-polymorphic-objects-with-gson/",
        "text": "Recently, I ran into a situation where I receive a list of objects in JSON from a REST endpoint. So far, this is nothing unusual and not a problem. However, the catch was that the objects were polymorphic and it...",
        "fallback": "Future Studio Blog: How to De/Serialize a List of Polymorphic Objects with Gson",
        "ts": 1415692820,
        "from_url": "https://futurestud.io/blog/how-to-deserialize-a-list-of-polymorphic-objects-with-gson/",
        "id": 1
      }
    ],
    "ts": "1443397218.002402",
    "id": "27de10765",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "sounds like a position i don’t want to be in",
    "ts": "1443397218.002403",
    "id": "27de10766",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "lol. Yeah, I’d quit",
    "ts": "1443397227.002405",
    "id": "27de10767",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "so the last one",
    "ts": "1443397230.002407",
    "id": "27de10768",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "yeah",
    "ts": "1443397231.002408",
    "id": "27de10769",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "i am",
    "ts": "1443397232.002409",
    "id": "27de10770",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "i suspect <@U0542GLTE> is too",
    "ts": "1443397256.002410",
    "id": "27de10771",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yeah, but not remote",
    "ts": "1443397272.002411",
    "id": "27de10772",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Glad I work on both the app and the server",
    "ts": "1443399759.002415",
    "id": "27de10773",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "And I know how to do the backend unlike the developer(s) you work with",
    "ts": "1443399781.002416",
    "id": "27de10774",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Anyhow, goodnight everyone",
    "ts": "1443399816.002417",
    "id": "27de10775",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "<https://plus.google.com/+EtienneLawlor/posts/bxRQVzEYfyC>",
    "attachments": [
      {
        "title": "When using Retrofit (http://square.github.io/retrofit/) when you make an API…",
        "title_link": "https://plus.google.com/+EtienneLawlor/posts/bxRQVzEYfyC",
        "text": "When using Retrofit (<http://square.github.io/retrofit/>) when you make an API call you need to use a Callback to deal with the response : … - Etienne Lawlor - Google+",
        "fallback": "When using Retrofit (http://square.github.io/retrofit/) when you make an API…",
        "from_url": "https://plus.google.com/+EtienneLawlor/posts/bxRQVzEYfyC",
        "id": 1
      }
    ],
    "ts": "1443418437.002418",
    "id": "27de10776",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]