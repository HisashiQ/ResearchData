[
  {
    "user": "U07LKUGBY",
    "subtype": "channel_join",
    "text": "<@U07LKUGBY|ankur> has joined the channel",
    "ts": "1436955308.004096",
    "id": "15de4273",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "Hey...",
    "ts": "1436956074.004097",
    "id": "15de4274",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U18ANZ",
    "text": "anyone with experience with GcmListenerService?",
    "ts": "1436956099.004098",
    "id": "15de4275",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053QMQRL",
    "text": "yerp",
    "ts": "1436972689.004099",
    "id": "15de4276",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "shameless self promotion here: <http://www.michaelevans.org/blog/2015/07/14/improving-your-code-with-android-support-annotations/>",
    "attachments": [
      {
        "text": "Improving your code with Android Support Annotations",
        "fallback": "Improving your code with Android Support Annotations",
        "from_url": "http://www.michaelevans.org/blog/2015/07/14/improving-your-code-with-android-support-annotations/",
        "id": 1
      }
    ],
    "ts": "1436973195.004100",
    "id": "15de4277",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "maybe you'll learn about a new annotation or two...wink wink",
    "ts": "1436973202.004102",
    "id": "15de4278",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "The need for @NonNull and @Nullable are just further validation of Kotlin's choice to integrate null into the type system",
    "ts": "1436973272.004103",
    "id": "15de4279",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "sure",
    "ts": "1436973277.004104",
    "id": "15de4280",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "but if you're not using Kotlin :stuck_out_tongue:",
    "ts": "1436973284.004105",
    "id": "15de4281",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I use both of those constantly",
    "ts": "1436973303.004106",
    "id": "15de4282",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "^",
    "ts": "1436973307.004107",
    "id": "15de4283",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "@Keep was new to me",
    "ts": "1436973323.004108",
    "id": "15de4284",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I was pretty excited about the new ones they added at I/O",
    "ts": "1436973324.004109",
    "id": "15de4285",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "that's what inspired this post",
    "ts": "1436973328.004110",
    "id": "15de4286",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "pretty cool features",
    "ts": "1436973346.004111",
    "id": "15de4287",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U060Q7J2Y>: yeah, one of the reasons I don't use ProGuard is all the work that goes into making sure it doesn't blow everything up",
    "ts": "1436973396.004112",
    "id": "15de4288",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "yep",
    "ts": "1436973403.004113",
    "id": "15de4289",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "sometimes hard to avoid with method limit",
    "ts": "1436973410.004114",
    "id": "15de4290",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "yeah",
    "ts": "1436973413.004115",
    "id": "15de4291",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "does proguard run on dependencies?",
    "ts": "1436973424.004116",
    "id": "15de4292",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yes",
    "ts": "1436973460.004117",
    "id": "15de4293",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "yep",
    "ts": "1436973466.004118",
    "id": "15de4294",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "libraries can even include proguard rules",
    "ts": "1436973474.004119",
    "id": "15de4295",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "s oyou dont need to write them",
    "ts": "1436973479.004120",
    "id": "15de4296",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "but they canâ€™t include lint rules",
    "ts": "1436973484.004121",
    "id": "15de4297",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "for now",
    "ts": "1436973490.004122",
    "id": "15de4298",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "so if your library has lint issues please fix it",
    "ts": "1436973491.004123",
    "id": "15de4299",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "well",
    "ts": "1436973491.004124",
    "id": "15de4300",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "they can",
    "ts": "1436973492.004125",
    "id": "15de4301",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "but you have to hack around",
    "ts": "1436973498.004126",
    "id": "15de4302",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "well I knew that, I just don't want a situation where proguard decides to strip methods out when it packages a library up as a dependency",
    "ts": "1436973507.004127",
    "id": "15de4303",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yeah im tired of fucking hacks because gradle is still alpha",
    "ts": "1436973510.004128",
    "id": "15de4304",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "gradle isnt alpha",
    "ts": "1436973526.004129",
    "id": "15de4305",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yes it is",
    "ts": "1436973529.004130",
    "id": "15de4306",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "it's both beta and pre-alpha experimental at the same time",
    "ts": "1436973536.004131",
    "id": "15de4307",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "well the plugin",
    "ts": "1436973541.004132",
    "id": "15de4308",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "not gradle itself",
    "ts": "1436973544.004133",
    "id": "15de4309",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "that's different",
    "ts": "1436973545.004134",
    "id": "15de4310",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "Google's definition of \"beta\" ranges from \"horribly broken\" to \"GMail\"",
    "ts": "1436973561.004135",
    "id": "15de4311",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "yerp",
    "ts": "1436973619.004136",
    "id": "15de4312",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07M52K3P",
    "subtype": "channel_join",
    "text": "<@U07M52K3P|cristopher> has joined the channel",
    "ts": "1436977045.004137",
    "id": "15de4313",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07M4NS23",
    "subtype": "channel_join",
    "text": "<@U07M4NS23|pedro> has joined the channel",
    "ts": "1436977055.004138",
    "id": "15de4314",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07M52NBX",
    "subtype": "channel_join",
    "text": "<@U07M52NBX|alex> has joined the channel",
    "ts": "1436977076.004139",
    "id": "15de4315",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07M5RRLZ",
    "subtype": "channel_join",
    "text": "<@U07M5RRLZ|antoinemerle> has joined the channel",
    "ts": "1436978011.004140",
    "id": "15de4316",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "anyone know if there is a significant difference between http authentication by implementing an okhttp Authenticator, and just adding the Authorization header in a RequestInterceptor?",
    "ts": "1436978449.004141",
    "id": "15de4317",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "requestinterceptor in retrofit i mean",
    "ts": "1436978463.004142",
    "id": "15de4318",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0546QERR>: don't think so",
    "ts": "1436978485.004143",
    "id": "15de4319",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yeahâ€¦ all depends on what kind of auth you are doing",
    "ts": "1436978489.004144",
    "id": "15de4320",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "oh yeah, if you need something more dynamic, use a request interceptor",
    "ts": "1436978521.004145",
    "id": "15de4321",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i use basic auth to get an oauth2 token which i just pass on subsequent requests",
    "ts": "1436978527.004146",
    "id": "15de4322",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "bleh, nevermind me, I'm misreading things left and right",
    "ts": "1436978576.004147",
    "id": "15de4323",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "<@U0546QERR>: just use a session singleton and a Request Interceptor",
    "ts": "1436978598.004148",
    "id": "15de4324",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "everything was working fine with RequestInterceptor, I just noticed Authenticator in OkHttp the other day and was confused because it seems like the same thing",
    "ts": "1436978630.004149",
    "id": "15de4325",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "I think Iâ€™ll just keep it that way and donâ€™t bother with authenticator",
    "ts": "1436978648.004150",
    "id": "15de4326",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "well there is one main difference",
    "ts": "1436978712.004151",
    "id": "15de4327",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "requestinterceptor is deprecated in 1.9 and removed in 2.0",
    "ts": "1436978729.004152",
    "id": "15de4328",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "(of retrofit)",
    "ts": "1436978735.004153",
    "id": "15de4329",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "oh really",
    "ts": "1436978738.004154",
    "id": "15de4330",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "ya",
    "ts": "1436978741.004155",
    "id": "15de4331",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "for what &gt;_&gt; iâ€™ll take a look",
    "ts": "1436978747.004156",
    "id": "15de4332",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "okhttp interceptors",
    "ts": "1436978751.004157",
    "id": "15de4333",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "oh haha",
    "ts": "1436978755.004158",
    "id": "15de4334",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "everythingâ€™s making sense now",
    "ts": "1436978770.004159",
    "id": "15de4335",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": ":simple_smile:",
    "ts": "1436978772.004160",
    "id": "15de4336",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07M69AVC",
    "subtype": "channel_join",
    "text": "<@U07M69AVC|mechi> has joined the channel",
    "ts": "1436981243.004161",
    "id": "15de4337",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "Think this ridiculous issue will finally be wrapped up <https://github.com/square/leakcanary/pull/161#issuecomment-121688389>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "#159 Renamed resources leading with &quot;__&quot; by ToxicBakery Â· Pull Request #161 Â· square/leakcanary Â· GitHub",
        "title_link": "https://github.com/square/leakcanary/pull/161#issuecomment-121688389",
        "text": "Build tools \"1.3.0 rc1\" changed the rules for resources. This commit simply removes the lead \"__\" from the offending resources in the project.",
        "fallback": "GitHub: #159 Renamed resources leading with \"__\" by ToxicBakery Â· Pull Request #161 Â· square/leakcanary",
        "thumb_url": "https://avatars2.githubusercontent.com/u/1614281?v=3&s=400",
        "from_url": "https://github.com/square/leakcanary/pull/161#issuecomment-121688389",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1436982658.004162",
    "id": "15de4338",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Is there anything sticky headers related in 22 or is that only in the M preview",
    "ts": "1436986897.004164",
    "id": "15de4339",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "sticky headers in M?",
    "ts": "1436986944.004165",
    "id": "15de4340",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I thought there was some recyclerview talked about at I/O?",
    "ts": "1436987033.004166",
    "id": "15de4341",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Or am I confusing that with the collapse thing?",
    "ts": "1436987042.004167",
    "id": "15de4342",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "aka. I want to rip out StickyListHeaders if possible",
    "ts": "1436987069.004168",
    "id": "15de4343",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "/ also donâ€™t want to use a listview",
    "ts": "1436987079.004169",
    "id": "15de4344",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "sticky headers for recyclerview? how about header views period :disappointed:",
    "ts": "1436987174.004170",
    "id": "15de4345",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07MMKA4F",
    "subtype": "channel_join",
    "text": "<@U07MMKA4F|androidrio> has joined the channel",
    "ts": "1436993838.004171",
    "id": "15de4346",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07MUKUBW",
    "subtype": "channel_join",
    "text": "<@U07MUKUBW|gaara87> has joined the channel",
    "ts": "1437004049.004172",
    "id": "15de4347",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07MWM1TL",
    "subtype": "channel_join",
    "text": "<@U07MWM1TL|rsicarelli> has joined the channel",
    "ts": "1437006572.004173",
    "id": "15de4348",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061XPD8D",
    "subtype": "channel_join",
    "text": "<@U061XPD8D|baitouwei> has joined the channel",
    "ts": "1437014591.004174",
    "id": "15de4349",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "has anyone run into this issue? <http://stackoverflow.com/questions/31171204/android-camera-saves-photo-without-exif>",
    "attachments": [
      {
        "title": "Android camera saves photo without ExIf",
        "title_link": "http://stackoverflow.com/questions/31171204/android-camera-saves-photo-without-exif",
        "text": "I want to take photo using MediaStore.ACTION_IMAGE_CAPTURE intent, and save with MediaStore.EXTRA_OUTPUT. My code is same as this link: <http://developer.android.com/training/camera/photobasics.html>",
        "fallback": "Android camera saves photo without ExIf",
        "thumb_url": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&a",
        "from_url": "http://stackoverflow.com/questions/31171204/android-camera-saves-photo-without-exif",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      }
    ],
    "ts": "1437019323.004175",
    "id": "15de4350",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]