[
  {
    "user": "U30QCJ09Y",
    "text": "<@U30QCJ09Y|hendrawd> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478764819.000771",
    "id": "10de49953",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U30PJ8GV9",
    "text": "<@U30PJ8GV9|mgasiorowski> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478772314.000772",
    "id": "10de49954",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0H67LJUA",
    "text": "When using webview.addJavascriptInterface(new asdfJavascriptInterface(), “Android”); the linter gives me \n```\nWebView.addJavascriptInterface should not be called with minSDK&lt;17 for security reasons: Javascript can use reflection to manipulate application\n```\n\n Anyone know of a workaround for this? I need to expose them methods. minSDK must be 15",
    "edited": {
      "user": "U0H67LJUA",
      "ts": "1478773987.000000"
    },
    "ts": "1478773950.000773",
    "id": "10de49955",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0H67LJUA",
    "text": "would verifying the URL/host be enough for example?",
    "ts": "1478774035.000776",
    "id": "10de49956",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09UQHPQV",
    "text": "Give access this method only running on version 4.2 or later.",
    "ts": "1478774276.000777",
    "id": "10de49957",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "just discovered this repo with versions. <https://github.com/orhanobut/versionist>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "orhanobut/versionist",
        "title_link": "https://github.com/orhanobut/versionist",
        "text": "versionist - A curated list of latest versions of Android platform and libraries. The list is fetched from the latest versions and generated by a script every day.",
        "fallback": "GitHub: orhanobut/versionist",
        "thumb_url": "https://avatars2.githubusercontent.com/u/1089616?v=3&s=400",
        "from_url": "https://github.com/orhanobut/versionist",
        "thumb_width": 400,
        "thumb_height": 400,
        "service_icon": "https://github.com/apple-touch-icon.png",
        "id": 1
      }
    ],
    "ts": "1478774906.000778",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "+1",
        "users": [
          "U09UQHPQV"
        ],
        "count": 1
      }
    ],
    "id": "10de49958",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Would like a bit of help re. Realm observables if anyone has a minute?",
    "ts": "1478775087.000780",
    "id": "10de49959",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "I have a `RealmResults` which I’m getting back with standard `realm.where(…).findAllAsync().asObservable()`, I need to then iterate over the results, update any items based on the results of a second realm query, then return the original (or same type) observable containing all the updated results",
    "ts": "1478775322.000781",
    "id": "10de49960",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0H67LJUA",
    "text": "<@U09UQHPQV> that would be too big of a compromise, I’ll have to look for a different solution",
    "ts": "1478779702.000782",
    "id": "10de49961",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "Is there any way of convertin realm transaction to a rx observable ?",
    "ts": "1478788554.000783",
    "id": "10de49962",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "<@U18E0PY49> From the last few days of experience, nope, but what’s the problem you’re solving?",
    "ts": "1478788691.000784",
    "id": "10de49963",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "Not really a problem, but I want to handle my transactions in a sync matter and since most of my async stuff is written in rx i want to keep it that way",
    "ts": "1478788889.000785",
    "id": "10de49964",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Oh, can’t just do something like\n ```realm.where(…).findAllAsync()\n.asObservable()\n.filter(isValid)\n.filter(isLoaded)\n.flatMap(Observable::from)\n.map(item -&gt; realm.executeTransaction(realm1 -&gt; {\ndo some stuff\n})\n.doOnCompleted(realm::close);\n```",
    "edited": {
      "user": "U1LJG0Y03",
      "ts": "1478789163.000000"
    },
    "ts": "1478789104.000786",
    "id": "10de49965",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "But what about setting ?",
    "ts": "1478789216.000788",
    "id": "10de49966",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "Or is this scenario for both ?",
    "ts": "1478789220.000789",
    "id": "10de49967",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Setting?",
    "ts": "1478789226.000790",
    "id": "10de49968",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "I'm copying objects over to realm",
    "ts": "1478789237.000791",
    "id": "10de49969",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Oh",
    "ts": "1478789248.000792",
    "id": "10de49970",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Yeah I just use the `executeTransaction()` like normal for that",
    "ts": "1478789315.000793",
    "id": "10de49971",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "How do you do callbacks then ?",
    "ts": "1478789473.000794",
    "id": "10de49972",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "Just basic interfaces ?",
    "ts": "1478789478.000795",
    "id": "10de49973",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CLC803W",
    "text": "is the way to transfer wav throught push?",
    "ts": "1478789495.000796",
    "id": "10de49974",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "I’ve not needed them, if you’re using Observables then any changes to the data will be seen in onNext",
    "ts": "1478789523.000797",
    "id": "10de49975",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TR4R4PL",
    "text": "Hi, im developing an app which have to use the users location to search nearby places. I've followed android developers guide and it works, but its slow.\n\nFor example in this app it finds your location almost inmmediatly (tested with the same device)\n\n<https://play.google.com/store/apps/details?id=com.anuntis.fotocasa>\n\nAnyone knows a good tutorial to get your location as fast as possible?",
    "ts": "1478789537.000798",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "10de49976",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N7D6F50",
    "text": "",
    "bot_id": "B0N7DNUT0",
    "attachments": [
      {
        "fallback": "Fotocasa rent and sale",
        "text": "★★★★★ “Fast searches, good interface… Good application.” ★★★★★ “Easy search, good photos, loads very well.” ★★★★★ “I have never had any problems and I enjoy looking at properties out of interest and it always works perfectly on my Note 2.” Fotocasa is the solution whether you´re looking for a flat to buy, rent or share or if you want to rent or sell your own home. Quickly find the flat, apartment, house, room, office, garage, box room or plot of land you are looking for because “there is always something better”. If you´re looking for a home, you can use our app to: • Draw inspiration to find somewhere to live with your friends, on your own, with your partner or family. • Receive alerts when you have a new message or there is a property that might interest you and, best of all, you can deal with them straight away! • Publish and manage your advertisements on any device. • Have the best real estate offer in Spain constantly up to date and readily accessible. • Store your searches and favourite advertisements so you can query them from any device. • Search by town, area, places of interest or proximity to you. • Write or say what you are looking for using keywords such as “house with swimming pool”. • Receive alerts of new advertisements for homes with features that might interest you. • Find detailed information on properties: photos, features, how to get to the property, energy certificate, extras, etc. • See the location map of the home with its amenities: schools, nurseries, health centres, etc. Download our FREE app, rate it and tell us what you think by emailing us at <mailto:movil@fotocasa.es|movil@fotocasa.es>.",
        "title": "Fotocasa rent and sale",
        "id": 1,
        "color": "3F51B5",
        "fields": [
          {
            "title": "Author",
            "value": "Schibsted Classified Media Spain, S.L.",
            "short": true
          },
          {
            "title": "Price",
            "value": "Free",
            "short": true
          },
          {
            "title": "Last updated",
            "value": "November 9, 2016",
            "short": true
          },
          {
            "title": "Downloads",
            "value": "1,000,000 - 5,000,000",
            "short": true
          },
          {
            "title": "All hail his Majesty",
            "value": "@nish",
            "short": true
          }
        ],
        "mrkdwn_in": [
          "title",
          "text"
        ]
      }
    ],
    "ts": "1478789537.000799",
    "id": "10de49977",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TR4R4PL",
    "text": "Ups,didnt expect link bait, sorry",
    "ts": "1478789568.000800",
    "id": "10de49978",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U18E0PY49|devmatt> uploaded a file: <https://androidchat.slack.com/files/devmatt/F31KNT2JK/-.java|Untitled>",
    "file": {
      "id": "F31KNT2JK",
      "created": 1478789608,
      "timestamp": 1478789608,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U18E0PY49",
      "editable": true,
      "size": 155,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F31KNT2JK/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F31KNT2JK/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/devmatt/F31KNT2JK/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F31KNT2JK-bfebacc9b2",
      "edit_link": "https://androidchat.slack.com/files/devmatt/F31KNT2JK/-.java/edit",
      "preview": "  public Observable<RealmResults<User>> getUsers(){\r\n\r\n    return realm.where(User.class)\r\n            .findAllAsync()\r\n            .asObservable();\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>  <span class=\"cm-keyword\">public</span> <span class=\"cm-variable\">Observable</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">RealmResults</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">User</span><span class=\"cm-operator\">&gt;&gt;</span> <span class=\"cm-def\">getUsers</span>(){</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre>    <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">realm</span>.<span class=\"cm-variable\">where</span>(<span class=\"cm-variable\">User</span>.<span class=\"cm-keyword\">class</span>)</pre></div>\n<div><pre>            .<span class=\"cm-variable\">findAllAsync</span>()</pre></div>\n<div><pre>            .<span class=\"cm-variable\">asObservable</span>();</pre></div>\n</div>\n</div>\n",
      "lines": 7,
      "lines_more": 2,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U18E0PY49",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U18E0PY49|devmatt>",
    "bot_id": null,
    "ts": "1478789608.000801",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "10de49979",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "So if anyone subscribes to this it will pop onnext each time realm gets a new user ?",
    "ts": "1478789633.000802",
    "id": "10de49980",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1LJG0Y03",
    "text": "Put a break point in the onNext to that, then make another method which modifies the user inside a transaction and call it",
    "ts": "1478789648.000803",
    "id": "10de49981",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U18E0PY49|devmatt> uploaded a file: <https://androidchat.slack.com/files/devmatt/F3126GDFX/-.java|Untitled>",
    "file": {
      "id": "F3126GDFX",
      "created": 1478790089,
      "timestamp": 1478790089,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U18E0PY49",
      "editable": true,
      "size": 410,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F3126GDFX/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F3126GDFX/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/devmatt/F3126GDFX/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F3126GDFX-3fbe37f5b6",
      "edit_link": "https://androidchat.slack.com/files/devmatt/F3126GDFX/-.java/edit",
      "preview": " public Observable<RealmObject> addUser(final User user) {\r\n    \r\n    return Observable.create(subscriber -> {\r\n\r\n      if(subscriber.isUnsubscribed()) return;\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre> <span class=\"cm-keyword\">public</span> <span class=\"cm-variable\">Observable</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">RealmObject</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-def\">addUser</span>(<span class=\"cm-keyword\">final</span> <span class=\"cm-variable\">User</span> <span class=\"cm-variable\">user</span>) {</pre></div>\n<div><pre>    </pre></div>\n<div><pre>    <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">Observable</span>.<span class=\"cm-variable\">create</span>(<span class=\"cm-variable\">subscriber</span> <span class=\"cm-operator\">-&gt;</span> {</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre>      <span class=\"cm-keyword\">if</span>(<span class=\"cm-variable\">subscriber</span>.<span class=\"cm-variable\">isUnsubscribed</span>()) <span class=\"cm-keyword\">return</span>;</pre></div>\n</div>\n</div>\n",
      "lines": 16,
      "lines_more": 11,
      "preview_is_truncated": false,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U18E0PY49",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U18E0PY49|devmatt>",
    "bot_id": null,
    "ts": "1478790090.000804",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "10de49982",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "I think I just managed to write it in this way",
    "ts": "1478790097.000805",
    "id": "10de49983",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1N5PJDTL",
    "text": "Gson question.  I’m trying to parse a particular json. \n\nOne of the elements returns as either a single string, or a list of strings.  Is it possible for gson to parse the single string as an list with one item instead?  Would I need to make my own deserializer for that?",
    "ts": "1478795197.000806",
    "id": "10de49984",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U18E0PY49",
    "text": "<@U1N5PJDTL> you’re asking if you get a response, if the json field is only one string assign it to a single string instead of a list of size of 1 ?",
    "ts": "1478796584.000807",
    "id": "10de49985",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1N5PJDTL",
    "text": "the json response has either a string, or a list of strings.  I want gson to deserialize the response always as a list of strings",
    "ts": "1478801415.000808",
    "id": "10de49986",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "You should be able to achieve that with either a deserializer or your own TypeAdapterFactory.",
    "edited": {
      "user": "U05473HHT",
      "ts": "1478801823.000000"
    },
    "ts": "1478801811.000809",
    "id": "10de49987",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "But a deserealizer is probably easier and more straight forward.",
    "ts": "1478801869.000811",
    "id": "10de49988",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1N5PJDTL",
    "text": "Thanks <@U18E0PY49> <@U05473HHT> \n\nMaking my own deserializer worked.  Ended up doing something like \n\n```\nSet&lt;Map.Entry&lt;String, JsonElement&gt;&gt; entries = jsonObject.entrySet();\nfor (Map.Entry&lt;String, JsonElement&gt; entry : entries) {\n        if (entry.getValue().isJsonPrimitive() ||\n                  entry.getValue().isJsonNull()) {\n                           JsonArray jsonArray = new JsonArray();\n                           jsonArray.add(entry.getValue());\n                          entry.setValue(jsonArray);\n        }\n}\n```",
    "edited": {
      "user": "U1N5PJDTL",
      "ts": "1478806026.000000"
    },
    "ts": "1478805962.000812",
    "id": "10de49989",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U3173MK8U",
    "text": "<@U3173MK8U|archit> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478808691.000814",
    "id": "10de49990",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U2M0WUZ7A",
    "text": "<@U0CLC803W>\n&gt; is the way to transfer wav throught push?\n\nYou can send a push like `Hey, app, download this: http://...`",
    "ts": "1478813896.000815",
    "id": "10de49991",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U31T1Q1MM",
    "text": "<@U31T1Q1MM|kirill> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478817058.000816",
    "id": "10de49992",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U31T1Q1MM",
    "text": "Does anyone have workaround for this bug? <https://code.google.com/p/android/issues/detail?id=183931&amp;q=gradle%20test%20unit%20instrumentation&amp;colspec=ID%20Status%20Priority%20Owner%20Summary%20Stars%20Reporter%20Opened>",
    "ts": "1478817288.000817",
    "id": "10de49993",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U320Q1B39",
    "text": "<@U320Q1B39|anoopss> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478841145.000818",
    "id": "10de49994",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U320K7YHL",
    "text": "<@U320K7YHL|josemachava> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478843560.000819",
    "id": "10de49995",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U320X9JGP",
    "text": "<@U320X9JGP|asmjs> has joined the channel",
    "subtype": "channel_join",
    "ts": "1478843783.000820",
    "id": "10de49996",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]