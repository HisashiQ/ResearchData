[
  {
    "user": "U04UBTWEE",
    "text": "hi guys",
    "ts": "1462262417.002583",
    "id": "03de34375",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "```/**\n * Container for a tabbed window view. This object holds two children: a set of tab labels that the\n * user clicks to select a specific tab, and a FrameLayout object that displays the contents of that\n * page. The individual elements are typically controlled using this container object, rather than\n * setting values on the child elements themselves.\n *\n * &lt;p&gt;See the &lt;a href=\"{@docRoot}resources/tutorials/views/hello-tabwidget.html\"&gt;Tab Layout\n * tutorial&lt;/a&gt;.&lt;/p&gt;\n */```\n\nWhere is this docRoot which holds these tutorials?",
    "ts": "1462262435.002584",
    "id": "03de34376",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Use TabLayout from the design support lib instead :wink:",
    "ts": "1462262574.002585",
    "id": "03de34377",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "TabWidget is ooooold",
    "ts": "1462262578.002586",
    "id": "03de34378",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "oh really?",
    "ts": "1462262707.002587",
    "id": "03de34379",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "<@U04TK850N>: whats the difference, quick google inconclusive!",
    "ts": "1462262882.002588",
    "id": "03de34380",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "they do the same thing it looks like",
    "ts": "1462262911.002589",
    "id": "03de34381",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "One gives you Material Design tabs :wink:",
    "ts": "1462263028.002590",
    "id": "03de34382",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "funny u say that, because material text &amp; icon u need to provide your own view. boo",
    "ts": "1462263169.002591",
    "id": "03de34383",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "You mean icon on the tab?",
    "ts": "1462263255.002592",
    "id": "03de34384",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04UBTWEE",
    "text": "a material icon + text. i.e. icon top, text below",
    "ts": "1462263638.002593",
    "id": "03de34385",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "how to handle Incompatible class gracefully, I have an old class which was serialized withount any serialVersionUID and now updated to use specific serialVersionUID",
    "ts": "1462268836.002594",
    "id": "03de34386",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "for first time user no issue but, user who already using it cant parse it",
    "ts": "1462268858.002595",
    "id": "03de34387",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "<@U0XCFE6AH> if a `serialVersionUID` is not provided then a default one is computed according to the class' details. Your first step would be to obtain that generated number and add it as the serial number static field. Then when you want to upgrade the class increment the number. You can obtain that autogenerated serial by extending `ObjectInputStream` I believe",
    "ts": "1462269927.002596",
    "id": "03de34388",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "Also for the future it is worth considering something like gson for serialization",
    "ts": "1462269954.002597",
    "id": "03de34389",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "yeah using GSON now but some old class still having problem...",
    "ts": "1462270010.002598",
    "id": "03de34390",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "You should also smack whoever implemented serializable and did not supply a serial number",
    "ts": "1462270016.002599",
    "id": "03de34391",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "hahah..",
    "ts": "1462270092.002600",
    "id": "03de34392",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U15MF8J9K",
    "subtype": "channel_join",
    "text": "<@U15MF8J9K|dreadthar> has joined the channel",
    "ts": "1462279254.002601",
    "id": "03de34393",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055JANKU",
    "text": "```\n:app:transformClassesWithDexForDevDebug\nTo run dex in process, the Gradle daemon needs a larger heap.\nIt currently has approximately 3641 MB.\nFor faster builds, increase the maximum heap size for the Gradle daemon to more than 5120 MB.\nTo do this set org.gradle.jvmargs=-Xmx5120M in the project gradle.properties.\nFor more information see <https://docs.gradle.org/current/userguide/build_environment.html>\n```",
    "edited": {
      "user": "U055JANKU",
      "ts": "1462286908.000000"
    },
    "ts": "1462286900.002602",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "03de34394",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055JANKU",
    "text": "Should I do this? :stuck_out_tongue:",
    "ts": "1462286904.002603",
    "id": "03de34395",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "anybody knows how to emit an error with rxrelay?, probably this is not the best case for a relay",
    "edited": {
      "user": "U0KTPB91V",
      "ts": "1462287307.000000"
    },
    "ts": "1462287302.002605",
    "id": "03de34396",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "<https://gist.github.com/nebiros/ce22662dfff92c0e587f02ef933ce7e3>",
    "ts": "1462287404.002607",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "03de34397",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0KTPB91V>: correct, from RxRelay’s docs:\n&gt; Basically: A Subject except without the ability to call onComplete or onError.",
    "ts": "1462290939.002608",
    "id": "03de34398",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "just use a subject or something",
    "ts": "1462290951.002609",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U0KTPB91V"
        ],
        "count": 1
      }
    ],
    "id": "03de34399",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "indeed",
    "ts": "1462291338.002610",
    "id": "03de34400",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U15PYAZN0",
    "subtype": "channel_join",
    "text": "<@U15PYAZN0|anato1iy> has joined the channel",
    "ts": "1462295264.002611",
    "id": "03de34401",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "is there a way to debug why databinding is failing to generate classes",
    "ts": "1462298642.002612",
    "id": "03de34402",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "all I get is a ridiculous stacktrace and absolutely no clue to what the issue is",
    "ts": "1462298657.002613",
    "id": "03de34403",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I tried removing all references to custom binding implementations since I have seem similar happen when those are broken but no dice here",
    "ts": "1462298704.002614",
    "id": "03de34404",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "ha! Write code in XML they said, there is nothing wrong with that, they said…",
    "ts": "1462298884.002615",
    "id": "03de34405",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yeah basically",
    "ts": "1462298901.002616",
    "id": "03de34406",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "its just code generation that sucks… its all great until you have a problem then it becomes significantly harder to debug",
    "ts": "1462298928.002617",
    "id": "03de34407",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "Im fairly confident I have wasted significantly more time between RX and data binding than if I had just done it the more manual ‘hard’ way",
    "ts": "1462298956.002618",
    "id": "03de34408",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "¯\\_(ツ)_/¯",
    "ts": "1462298971.002619",
    "id": "03de34409",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "X[ML]ipster",
    "ts": "1462299062.002620",
    "id": "03de34410",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "lol well im just trying to understand all the rage",
    "ts": "1462299080.002621",
    "id": "03de34411",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "RX is pretty awesome but it has some of the similar issue that databinding has. Some of the stacktraces ive had RX throw are just useless",
    "ts": "1462299104.002622",
    "id": "03de34412",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "its like 200 lines of ¯\\_(ツ)_/¯",
    "ts": "1462299114.002623",
    "id": "03de34413",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "yeah",
    "ts": "1462299147.002624",
    "id": "03de34414",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "I’m working with tons of Rx bindings to the ui, the main problem is that I need to revert all those stream chains back in my head when I read the code…",
    "ts": "1462299192.002625",
    "id": "03de34415",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "i imagine a good bit of it comes from my inexperience but im not sure how trading problems is better. While its easier to write code that doesnt break, when it does break its harder to fix. (with rx)",
    "edited": {
      "user": "U055GGAHS",
      "ts": "1462299216.000000"
    },
    "ts": "1462299200.002626",
    "id": "03de34416",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "pbbly databinding with xml will be easier to read",
    "ts": "1462299213.002627",
    "id": "03de34417",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "well requery is nice there because it can create the observables for you except that they dont work in all cases and sometimes joins are impossible it seems with the way it does the data mapping. I imagine he’ll fix the misc query issues eventually but right now it feels like im using a lot of potentially good stuff but none of it is really there yet",
    "ts": "1462299289.002629",
    "id": "03de34418",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "// khm khm, use StorIO, khm",
    "ts": "1462299332.002630",
    "id": "03de34419",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "heh.. shameless self plug?",
    "ts": "1462299386.002631",
    "id": "03de34420",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "I don’t undestand what are you talking about",
    "ts": "1462299423.002632",
    "reactions": [
      {
        "name": "kappa",
        "users": [
          "U055GGAHS",
          "U091EBYSU"
        ],
        "count": 2
      },
      {
        "name": "shuffleparrot",
        "users": [
          "U055GGAHS"
        ],
        "count": 1
      },
      {
        "name": "ok_hand",
        "users": [
          "U04U5KS3Z"
        ],
        "count": 1
      }
    ],
    "id": "03de34421",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yeah so I can write manual queries in requery too similar to how yours are laid out",
    "ts": "1462299496.002633",
    "id": "03de34422",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I just really don’t want to, eventually all the ORM side of things will just work. He’s almost there I think as all the basic operations work great except for upsert which I have yet to get working lol",
    "ts": "1462299528.002634",
    "id": "03de34423",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U091EBYSU",
    "text": "lol, it’s pretty good, I know",
    "ts": "1462299596.002635",
    "id": "03de34424",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "the stacktraces for rx can be pretty long, but I haven’t seen them be useless",
    "ts": "1462302310.002636",
    "id": "03de34425",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "first thing i learned from the dan lew talk at droidcon was to always implement onError",
    "ts": "1462302400.002637",
    "id": "03de34426",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "which helps with stack traces",
    "ts": "1462302410.002638",
    "id": "03de34427",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "if you're already doing that, i dunno",
    "ts": "1462302414.002639",
    "id": "03de34428",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "yes but its possible to have thread crashes that even onerror can’t catch",
    "ts": "1462302427.002640",
    "id": "03de34429",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "and then you have a crash with no trace to where it even came from just that something in rx died",
    "ts": "1462302442.002641",
    "id": "03de34430",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "a thread crash doesn't propagate to the Scheduler that spawned it?",
    "ts": "1462302554.002642",
    "id": "03de34431",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "ive seen cases where it crashes inside rx and there’s no catching it",
    "ts": "1462302691.002643",
    "id": "03de34432",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I believe one instance is if you fill the queue on the executor",
    "ts": "1462302743.002644",
    "id": "03de34433",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055GGAHS",
    "text": "I know I have hit others though",
    "ts": "1462302766.002645",
    "id": "03de34434",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08KK98UU",
    "text": "hmm, weird",
    "ts": "1462302945.002646",
    "id": "03de34435",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U15RL3LCC",
    "subtype": "channel_join",
    "text": "<@U15RL3LCC|manucasariego> has joined the channel",
    "ts": "1462304323.002647",
    "id": "03de34436",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0W3JFY57",
    "text": "Does anyone ever get their Gradle build stuck on detachedConfiguration2?",
    "ts": "1462307583.002648",
    "id": "03de34437",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XNRE25S",
    "text": "Has anyone had issues with proguard using retrofit and gson? I have the rules setup for my pojo models, but still getting errors when they are instantiated",
    "ts": "1462309249.002649",
    "id": "03de34438",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "I usually annotate them with @SerializedName(“name”) , not add proguard rules",
    "ts": "1462309647.002650",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U091EBYSU",
          "U0546QERR"
        ],
        "count": 2
      }
    ],
    "id": "03de34439",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<@U0W3JFY57> nope",
    "ts": "1462309654.002651",
    "id": "03de34440",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0B8R3VV4",
    "text": "<@U0W3JFY57>:  check your proxy, and take that gradle offline from the Preferences menu",
    "edited": {
      "user": "U0B8R3VV4",
      "ts": "1462312905.000000"
    },
    "ts": "1462312895.002652",
    "id": "03de34441",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0W3JFY57",
    "text": "Yup was a network issue. Thanks!",
    "ts": "1462313190.002654",
    "id": "03de34442",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0DC95VCP",
    "text": "Totally agree about the Rx stuff. I went in super thrilled, and then spent a ton of time writing Rx and refactoring and relearning and it’s beautiful and elegant….as long as nothing goes wrong. However, when something fails…it’s hard to troubleshoot. And I’ve had that issue where I’ve had onError implemented and have just had crashes where I get absolutely nothing. Don’t even know they are happening except that my subscribers no longer update. Very frustrating. It’s likely to be a newb issue since I’m really new to using it, but just wrapping my head around it all has made me a little more weary of using it everywhere just yet.",
    "ts": "1462318345.002655",
    "id": "03de34443",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U15UAR2TZ",
    "subtype": "channel_join",
    "text": "<@U15UAR2TZ|ecdpalma> has joined the channel",
    "ts": "1462324017.002656",
    "id": "03de34444",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "<@U0DC95VCP>: If the error is not propagating correctly it means that the observable is not propagating it correctly.",
    "ts": "1462340716.002657",
    "id": "03de34445",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "I’ve never really come across something like that. So make sure that the observable you’re subscribing to, either from a library or one you wrote yourself propagates the onError correctly.",
    "ts": "1462340820.002658",
    "id": "03de34446",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "Hey everyone. Anyone has any good reads on Dagger 2 best practices? I am refactoring my app to take full advantage of scoping but there are some little tidbits that I want to iron out and surprisingly it's very hard to find any material on advanced scope usage",
    "ts": "1462345044.002659",
    "reactions": [
      {
        "name": "heavy_plus_sign",
        "users": [
          "U0DRFMA87"
        ],
        "count": 1
      }
    ],
    "id": "03de34447",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]