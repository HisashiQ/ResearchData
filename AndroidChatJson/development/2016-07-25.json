[
  {
    "user": "U07CUTEUS",
    "text": "Good morning my fellow Devs. I have started another poll this week: Do you use a Reactive Pattern or an Event Bus Driven pattern in your applications? As a Freelancer I see many companies that make what I would call an incorrect usage of those patterns, sometimes overlapping them and not having a clear idea of the purpose of both (and in some legacy code neither one or the other!). Feel free to vote, share and leave any comment. \n\n<https://twitter.com/eenriquelopez/status/757479517967544320>",
    "attachments": [
      {
        "fallback": "<https://twitter.com/eenriquelopez|@eenriquelopez>: Do you use a Reactive Pattern or an Event Bus Driven pattern in your applications? (or none/both of them)",
        "ts": 1469432165,
        "author_name": "Enrique López Mañas",
        "author_link": "https://twitter.com/eenriquelopez/status/757479517967544320",
        "author_icon": "https://pbs.twimg.com/profile_images/656369605385023488/qPrvbS19_normal.jpg",
        "author_subname": "@eenriquelopez",
        "text": "Do you use a Reactive Pattern or an Event Bus Driven pattern in your applications? (or none/both of them)",
        "service_name": "twitter",
        "service_url": "https://twitter.com/",
        "from_url": "https://twitter.com/eenriquelopez/status/757479517967544320",
        "id": 1,
        "footer": "Twitter",
        "footer_icon": "https://a.slack-edge.com/6e067/img/services/twitter_pixel_snapped_32.png"
      }
    ],
    "ts": "1469432357.000619",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U053PPGDC",
          "U1U643L7Q",
          "U1UJV29K6"
        ],
        "count": 4
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "25de40596",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "hm",
    "ts": "1469435105.000621",
    "id": "25de40597",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "I’m in the minority I suppose",
    "ts": "1469435110.000622",
    "id": "25de40598",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "still got some legacy otto somewhere in there",
    "ts": "1469435122.000623",
    "id": "25de40599",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": ":slightly_smiling_face:",
    "ts": "1469435124.000624",
    "id": "25de40600",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "would go fully reactive in a new app",
    "ts": "1469435139.000625",
    "id": "25de40601",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07CUTEUS",
    "text": "I do believe both can co-exist, but against my own opinion not many people think the same",
    "ts": "1469435166.000626",
    "id": "25de40602",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U07CUTEUS",
    "text": "I am also surprised that so far 29% of the people voted “none of them\"",
    "ts": "1469435177.000627",
    "id": "25de40603",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "depends - maybe people find the term “reactive pattern” too vague?",
    "ts": "1469435956.000628",
    "id": "25de40604",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1U643L7Q",
    "text": "I would say \"more reactive then event bus”",
    "ts": "1469436085.000629",
    "id": "25de40605",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0UETGCJU",
    "text": "hey guys\n\nknow of any good articles to prepare me and the crew for effectively running an open beta testing phase?\nhave some tips of your own to share?",
    "ts": "1469436424.000630",
    "id": "25de40606",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1U643L7Q",
    "text": "<@U0UETGCJU>: - create a google plus group and add your intended beta users there. It’s easy to propagate new updates and get feedback on bugs. I hope you have implemented crashlytics or any other tool so that you can know more data if crash happens. Secondly, sometimes it’s better for beta testers to know which version they are using -&gt; you can display the version somewhere in settings so that if they have to report something they can mention that.",
    "ts": "1469436693.000631",
    "id": "25de40607",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "<@U0KU8TDV2> can’t you just pause it?",
    "ts": "1469436985.000632",
    "id": "25de40608",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "my foreground gradient doesn’t appear -only- on M7 with lollipop. anyone got experience with that?",
    "ts": "1469437603.000633",
    "reactions": [
      {
        "name": "lollipop",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "25de40609",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "<@U1T13H6S3>:  hope you not making the pokemon go map...",
    "ts": "1469437606.000634",
    "id": "25de40610",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KU8TDV2",
    "text": "<@U0548MM6B>: yep, maybe manually pause it is the only way",
    "ts": "1469438667.000635",
    "id": "25de40611",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "<@U0XCFE6AH>: I made one :smile:",
    "ts": "1469439070.000636",
    "id": "25de40612",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "<@U04TK850N>: give me too",
    "ts": "1469439122.000637",
    "id": "25de40613",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "It doesn’t persist login data yet so it’s kinda annyoing cause you have to login on each start",
    "ts": "1469439152.000638",
    "id": "25de40614",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "ahok",
    "ts": "1469439347.000639",
    "id": "25de40615",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "what service you using?",
    "ts": "1469439354.000640",
    "id": "25de40616",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "same API the original client uses",
    "ts": "1469439369.000641",
    "id": "25de40617",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0UETGCJU",
    "text": "thanks <@U1U643L7Q>",
    "ts": "1469439374.000642",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U1U643L7Q"
        ],
        "count": 1
      }
    ],
    "id": "25de40618",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "who thats cool",
    "ts": "1469439391.000643",
    "id": "25de40619",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1UJV29K6",
    "text": "Anyone used Dagger 2 + Android Databining together ?",
    "ts": "1469442461.000644",
    "id": "25de40620",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1UJV29K6",
    "text": "the app wont compile untill we un-necessaritly use Guava as apt dependency causing 15,000 method to be added  :disappointed: dex over flow",
    "ts": "1469442507.000645",
    "id": "25de40621",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "Hey guys. I got an ImageView that I want to zoom in on (best option is `matrix.postScale` I guess)",
    "ts": "1469443654.000646",
    "id": "25de40622",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "But after that my x,y event from onTouch are totally messed up. How can I scale them to be correct?",
    "ts": "1469443687.000647",
    "id": "25de40623",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "I can’t seem to find much good information on how the matrix scaling works. And the inner code is native so no luck checking out what happens",
    "ts": "1469443716.000648",
    "id": "25de40624",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TAPEH0E",
    "text": "What are the best practices for unit or instrumentation testing the SMS parts of an Android app?",
    "ts": "1469445903.000649",
    "id": "25de40625",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TAPEH0E",
    "text": "I have been looking for ways to test SMS reading functionality of my app, but haven’t found any satisfactory way to do so.",
    "ts": "1469445969.000650",
    "id": "25de40626",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1UQ97SMB",
    "text": "<@U1UQ97SMB|megan> has joined the channel",
    "subtype": "channel_join",
    "ts": "1469451546.000651",
    "id": "25de40627",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1CV5DAMT",
    "text": "I am implementing Dagger2 into my project and am wondering if this is possible. I have two classes for example one for DB data management and one for Analytics management and an activity that uses them both.  I would like to inject both into the activity but I would also like to inject the Analytics management class into the Data Management class.  Is this possible to have a class being both a provider and consumer?",
    "ts": "1469455931.000652",
    "id": "25de40628",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1N5PJDTL",
    "text": "I don’t see why that would be a problem.  You should be able use constructor injection to provide your Analytics class to your Data Management class",
    "ts": "1469456487.000653",
    "id": "25de40629",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1UR71AGY",
    "text": "<@U1UR71AGY|mbrum> has joined the channel",
    "subtype": "channel_join",
    "ts": "1469457680.000654",
    "id": "25de40630",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "<@U1CV5DAMT>: this will work",
    "ts": "1469459587.000655",
    "id": "25de40631",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "```\n@Module\npublic class AnalyticsModule {\n    @Provides\n    @Singleton\n    public Analytics provideAnalytics() {\n        return new Analytics();\n    }\n}\n\n@Module\npublic class DataModule {\n    @Provides\n    @Singleton\n    public DataManagement provideDataManagement(Analytics analytics) {\n        return new DataManagement(analytics); // analytics will come from AnalyticsModule\n    }\n}\n\n@Component(modules = { DataModule.class, AnalyticsModule.class })\npublic interface ApplicationComponent {\n    void inject(MyActivity myActivity);\n\n    // exposing both for your activity\n    Analytics analytics();\n    DataManagement dataManagement();\n}\n\npublic class MyActivity extends AppCompatActivity {\n\t// these are injected from ApplicationComponent\n    @Inject Analytics analytics;\n    @Inject DataManagement dataManagement;\n\n    @Override protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        DaggerApplicationComponent.\n         \t\t.create()\n                .inject(this);\n    }\n}\n```",
    "edited": {
      "user": "U09T8SFG8",
      "ts": "1469459634.000000"
    },
    "ts": "1469459588.000656",
    "id": "25de40632",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "You need to `provide` the analytics object through a module and expose it through a component",
    "ts": "1469459666.000659",
    "id": "25de40633",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "dagger will figure out the rest",
    "ts": "1469459671.000660",
    "id": "25de40634",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TKETBU3",
    "text": "Hi channel, in your opinion what is the best game engine to develop  a prototype of a android game, taking into account 3 main features: \n1- Networking (web sockets, web services, sockets) \n2- Sensors reading (accelerometer, gyroscope, cameras) and \n3- easy to install, deploy and test. \nThanks for your answers",
    "ts": "1469463208.000661",
    "id": "25de40635",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KC373GX",
    "text": "<@U1TKETBU3>: why not stick to the tried and tested Unity &amp; Unreal?",
    "ts": "1469463549.000662",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U1TKETBU3"
        ],
        "count": 1
      }
    ],
    "id": "25de40636",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TKETBU3",
    "text": "<@U0KC373GX>: thanks, i'm doing it right now with unity, but i want to see what other options do i have",
    "ts": "1469463713.000663",
    "id": "25de40637",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KC373GX",
    "text": "<@U1TKETBU3>: ehhh I would stick to unity, there aren’t any other real options for sensors + networking (I think). but there are other libraries, just not sure they would be better considering your constraints",
    "ts": "1469463781.000664",
    "id": "25de40638",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TKETBU3",
    "text": "<@U0KC373GX>: some one in other chat suggest me Phaser with <http://socket.io|socket.io>, have you hear about that one?",
    "ts": "1469463873.000665",
    "id": "25de40639",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KC373GX",
    "text": "I think I have, but isn’t that mostly for chat applications?",
    "ts": "1469463934.000666",
    "id": "25de40640",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1TKETBU3",
    "text": "i think <http://socket.io|socket.io> yes, but i've never hear about phaser",
    "ts": "1469463996.000667",
    "id": "25de40641",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "Hi all, I’m having problems refreshing my UI. After the user clicks the sellButton my textview does not get set to the right quantity. but i can see the quantity being updated correctly in the database table.  so when i exit my app and go back i can see the textview is updated.  how do i fix this so that I dont have to go out of the app and go back in again? here is my code. ```  public void bindView(View view, Context Context, Cursor cursor) {\n     ...\n     …..\n        final TextView textqntity = (TextView) view.findViewById(R.id.lv_qntity);\n        textqntity.setText(quantity);\n\n        Button sellButton = (Button) view.findViewById(R.id.sale_button);\n        sellButton.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                DatabaseController controller = new DatabaseController(view.getContext());\n                int qntity = controller.getRow(rowId);\n\n                if (qntity &gt; 0) {\n                    qntity = qntity - 1;\n                }\n                controller.updateRow(rowId, qntity);\n\n                textqntity.setText(String.valueOf(qntity));\n\n                Toast.makeText(context, \"sale \" + String.valueOf(qntity), Toast.LENGTH_LONG).show();\n                notifyDataSetChanged();\n            }\n        });\n\n    }```",
    "edited": {
      "user": "U1FECKXA9",
      "ts": "1469475560.000000"
    },
    "ts": "1469473641.000668",
    "id": "25de40642",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1G4VJR3K",
    "text": "Can you try calling txtqntity.invalidate() after you set the text?",
    "ts": "1469474332.000671",
    "id": "25de40643",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i think you're updating the TextView but then using the old results when rebinding the viewholder",
    "ts": "1469474409.000674",
    "id": "25de40644",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "so it's getting set back to the original value",
    "ts": "1469474417.000675",
    "id": "25de40645",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "somebody has looking at the google samples about architecture?",
    "ts": "1469474450.000676",
    "id": "25de40646",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "dunno why they create dagger modules for each activity, and each presenter",
    "ts": "1469474482.000677",
    "id": "25de40647",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KTPB91V",
    "text": "any real benefit of doing it that way?",
    "ts": "1469474491.000678",
    "id": "25de40648",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "hi <@U1G4VJR3K> thanks i tried that like this but it didnt work: ```  textqntity.setText(String.valueOf(qntity));\n                textQty.invalidate();```",
    "ts": "1469474649.000679",
    "id": "25de40649",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "hi <@U0546QERR> thanks. how to make sure it uses the new value?",
    "ts": "1469475078.000680",
    "id": "25de40650",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "hmm i haven't worked with databases/Cursors so i'm not too sure. but just know when you call `notifyDataSetChanged`, `bindView` is going to be called again for that view holder",
    "ts": "1469475289.000681",
    "id": "25de40651",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "perhaps you can keep an object in memory that you can update with the current configuration, and synchronizes its state with your database",
    "ts": "1469475395.000682",
    "id": "25de40652",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "ah yea i found it",
    "ts": "1469475416.000683",
    "id": "25de40653",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "i just moved   notifyDataSetChanged(); outside onclick\\",
    "ts": "1469475433.000684",
    "id": "25de40654",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "thanks <@U0546QERR>",
    "ts": "1469475439.000685",
    "id": "25de40655",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "no problem",
    "ts": "1469475934.000687",
    "id": "25de40656",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "btw if it's outside onClick you don't need it at all :wink:",
    "ts": "1469475952.000688",
    "id": "25de40657",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1N5PJDTL",
    "text": "anyone here happen to be familiar with aws cognito?",
    "ts": "1469476149.000689",
    "id": "25de40658",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1FECKXA9",
    "text": "<@U0546QERR>:  that’s good to know. thanks",
    "ts": "1469477226.000690",
    "id": "25de40659",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1U643L7Q",
    "text": "is there any tool/website which displays the latest versions of famous/widely used Android 3rd party libs? A place where you give a look and sync specified versions in your gradle",
    "ts": "1469479036.000691",
    "id": "25de40660",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0677FXK8",
    "text": "does anyone have issues with butterknife and findbugs?",
    "ts": "1469479063.000692",
    "id": "25de40661",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0677FXK8",
    "text": "findbugs thinks we are accessing uninitialized fields",
    "ts": "1469479153.000693",
    "id": "25de40662",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0677FXK8",
    "text": "even though in the constructor of our view holder we are calling `bind(this, view)`",
    "edited": {
      "user": "U0677FXK8",
      "ts": "1469479210.000000"
    },
    "ts": "1469479189.000694",
    "id": "25de40663",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0KC373GX",
    "text": "<@U1U643L7Q>: you can add libraries thru project settings and it’ll get the latest versions (I THINK)",
    "ts": "1469480468.000696",
    "id": "25de40664",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U05473HHT",
    "text": "<@U1U643L7Q>: I used to refer to <https://gradleplease.appspot.com/> but it seems to be grabbing outdated versions for some libraries now.",
    "edited": {
      "user": "U05473HHT",
      "ts": "1469497908.000000"
    },
    "ts": "1469497024.000697",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "25de40665",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1CV5DAMT",
    "text": "<@U09T8SFG8>: Thanks for the help.  I will try that.",
    "ts": "1469509281.000700",
    "id": "25de40666",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1V3R74CR",
    "text": "<@U1V3R74CR|chetan.bhalerao> has joined the channel",
    "subtype": "channel_join",
    "ts": "1469514326.000701",
    "id": "25de40667",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]