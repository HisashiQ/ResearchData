[
  {
    "user": "U1AVAAUQJ",
    "subtype": "channel_join",
    "text": "<@U1AVAAUQJ|sohailaziz> has joined the channel",
    "ts": "1463993308.004184",
    "id": "23de35821",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0F2AP42X",
    "text": "<@U1AELTZBQ>: thanks for the tips.. I’ll do some research into all those methods.",
    "ts": "1463994077.004185",
    "id": "23de35822",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "what is the best alternative of <http://Parse.com|Parse.com> (MBaaS) ?",
    "ts": "1463995224.004186",
    "id": "23de35823",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "For a single devloper.",
    "ts": "1463995257.004187",
    "id": "23de35824",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "Firebase",
    "ts": "1463995299.004188",
    "id": "23de35825",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "I browse about that",
    "ts": "1463995585.004189",
    "id": "23de35826",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "but it's database has a learning curve",
    "ts": "1463995596.004190",
    "id": "23de35827",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "it should be well worth the time learning",
    "ts": "1463997902.004191",
    "id": "23de35828",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "google seems to be investing even more heavily on firebase",
    "ts": "1463997910.004192",
    "id": "23de35829",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "After Parse, there aren't many choices for individual developers. ",
    "ts": "1463998428.004193",
    "id": "23de35830",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "but  what are the guarantees that any  MBaaS  wouldn't have the same fate as Parse? ",
    "ts": "1463998515.004194",
    "id": "23de35831",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U055JANKU",
    "text": "if you want the guarantee that your service will never ever go down then host it yourself",
    "ts": "1463998545.004195",
    "id": "23de35832",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "yeap that's one of the drawbacks",
    "ts": "1463999105.004196",
    "id": "23de35833",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Learn Python, Go, Ruby or whatever else there is if you don't want to use Firebase. But Firebase still is no replacement for a 'real' and advanced backend.",
    "edited": {
      "user": "U061HDV96",
      "ts": "1464013360.000000"
    },
    "ts": "1463999520.004197",
    "id": "23de35834",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "pretty sure Google less likely to go “down” than any of the self-hosted options",
    "ts": "1463999635.004198",
    "id": "23de35835",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "thing is, they are in the infrastructure business, whereas facebook is not",
    "ts": "1463999690.004199",
    "id": "23de35836",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "I’d say Google, Amazon and Microsoft are way safer bets than parse ever was under fb",
    "ts": "1463999720.004200",
    "id": "23de35837",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "^ that",
    "ts": "1463999766.004201",
    "id": "23de35838",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "<@U1AVAAUQJ>: what were you using Parse for exactly? I guess you have 4-5 own apps using Parse and you are looking something to replace Parse directly? My main question is what lifetime do you want out of a service like that per app. 1 year, 2 years, forever?",
    "edited": {
      "user": "U09T8SFG8",
      "ts": "1463999879.000000"
    },
    "ts": "1463999864.004202",
    "id": "23de35839",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Firebase isn't gonna go down. Def not because of their TestLab now",
    "edited": {
      "user": "U061HDV96",
      "ts": "1464000138.000000"
    },
    "ts": "1464000119.004204",
    "id": "23de35840",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "although amazon is also a nice bet imho",
    "ts": "1464000565.004206",
    "id": "23de35841",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "just not sold on their “sdk generators\"",
    "ts": "1464000584.004207",
    "id": "23de35842",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "what's that?",
    "ts": "1464000606.004208",
    "id": "23de35843",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "went to their event on friday",
    "ts": "1464000607.004209",
    "id": "23de35844",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "baiscally you click through the features in their mobile hub, and they generate your app boilerplate",
    "ts": "1464000633.004210",
    "id": "23de35845",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "<https://aws.amazon.com/mobile/>",
    "attachments": [
      {
        "service_name": "Amazon Web Services, Inc.",
        "title": "AWS Mobile Hub – Develop, Test &amp; Launch Mobile Apps",
        "title_link": "https://aws.amazon.com/mobile/",
        "text": "Are you looking to develop, test, launch and track usage of mobile apps on the cloud? Learn how Amazon Web Services provides an integrated experience on its Mobile Hub platform.",
        "fallback": "Amazon Web Services, Inc.: AWS Mobile Hub – Develop, Test &amp; Launch Mobile Apps",
        "from_url": "https://aws.amazon.com/mobile/",
        "id": 1
      }
    ],
    "ts": "1464000647.004211",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "23de35846",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "like the Fabric plugin? eww",
    "ts": "1464000649.004213",
    "id": "23de35847",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "nah not that bad :slightly_smiling_face:",
    "ts": "1464000656.004214",
    "id": "23de35848",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "basically you get reference code",
    "ts": "1464000665.004215",
    "id": "23de35849",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "instead of crappy half-functional shit google calls documentation",
    "ts": "1464000686.004216",
    "id": "23de35850",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "they even generate a “sdk\"",
    "ts": "1464000755.004217",
    "id": "23de35851",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "all the classes etc",
    "ts": "1464000772.004218",
    "id": "23de35852",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "anyway - there are 3 tech giants who think MBaaS is a good business to be in, and have the capability to execute.",
    "ts": "1464000873.004219",
    "id": "23de35853",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "I would guess that choosing one would depend on the platform(s) your are building for. If you go just for mobile (Android and iOS) then Firebase would be good. If you go for desktop as well (e.g. Netflix) then AWS would probably be better",
    "ts": "1464001043.004220",
    "id": "23de35854",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "tbh all are quite on par with features",
    "ts": "1464001327.004221",
    "id": "23de35855",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "there’s been the most said about AWS, and you can find the most resources",
    "ts": "1464001375.004222",
    "id": "23de35856",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "Microsoft used to (I don’t know if still holds) have the most comprehensive free tier",
    "ts": "1464001406.004223",
    "id": "23de35857",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "and Google is going to be neatly integrated in AS",
    "ts": "1464001415.004224",
    "id": "23de35858",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "the integration is nice",
    "ts": "1464001493.004225",
    "id": "23de35859",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "personally I firstly compare with what has been around the most, that is why AWS would be on the top of my list but Firebase has been getting a lot of traction",
    "ts": "1464001544.004226",
    "id": "23de35860",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1AVAAUQJ",
    "text": "<@U09T8SFG8>: is it bad to look for the backend that last longer?  I'd like to have a service which lasts at least 5 years.  Parse was a good option for individual developers who want to test their ideas. ",
    "ts": "1464006500.004227",
    "id": "23de35861",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "still is if you host it yourself?",
    "ts": "1464006577.004228",
    "id": "23de35862",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "but most companies don’t announce 5y+ plans in the internet age",
    "ts": "1464006591.004229",
    "id": "23de35863",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U09T8SFG8",
    "text": "<@U1AVAAUQJ>: you want a backend that lasts at least 5 years or an app that lasts at least 5 years? If for a backend then it might be better to rollout your own",
    "ts": "1464007521.004230",
    "id": "23de35864",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XJ96KPG",
    "text": "Hey guys, have you tried firebase yet? I made some kind of social network. I used Laravel for backend. Now , I want to add notifications and chat. Is Firebase good solution for that? ",
    "ts": "1464019670.004232",
    "id": "23de35865",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "Has anyone seen graphical artifacts on SwitchCompat lately?",
    "ts": "1464023689.004233",
    "id": "23de35866",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "<@U0XJ96KPG>: I don't think it's a good idea to have multiple 'backends'.",
    "ts": "1464029411.004234",
    "id": "23de35867",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Use a library with your existing backend.",
    "ts": "1464029425.004235",
    "id": "23de35868",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XJ96KPG",
    "text": "So, what is the best to use for notifications? ",
    "ts": "1464029470.004236",
    "id": "23de35869",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "Look for a library?",
    "ts": "1464029495.004237",
    "id": "23de35870",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U061HDV96",
    "text": "I'm sure one exists for PHP, I'm just not gonna do the job of finding one for you.",
    "ts": "1464029521.004238",
    "id": "23de35871",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B4R73V4",
    "subtype": "channel_join",
    "text": "<@U1B4R73V4|orlandostuardo> has joined the channel",
    "ts": "1464034058.004239",
    "id": "23de35872",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "hey guys, weird question, how to replace this to for each\n```List&lt;Phones&gt; phones = getPhones();\n     mAdapter.addItem(new ProfileItem(“phones\", phones.get(0).getFormattedNumber()));\n     for (int i = 1; i &lt; phones.size(); i++) {\n            mAdapter.addItem(new ProfileItem(\"\", phones.get(i).getFormattedNumber()));\n      }\n```",
    "ts": "1464038113.004240",
    "id": "23de35873",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "I do this, because first element should have first parameter “phones”, all next should be empty",
    "ts": "1464038163.004241",
    "id": "23de35874",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "you would need a flag that you set after the first item i guess? or you just do it how you're doing it now :stuck_out_tongue:",
    "ts": "1464038353.004242",
    "id": "23de35875",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "I think he is talking about the for loop becoming foreach… but… not sure",
    "ts": "1464038379.004243",
    "id": "23de35876",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "I just need to replace",
    "ts": "1464038570.004244",
    "id": "23de35877",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "I know what is the foreach, and how it works, but one super programmer said that it should be in foreach",
    "ts": "1464038599.004245",
    "id": "23de35878",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U0QR1SM32|kristo> uploaded a file: <https://androidchat.slack.com/files/kristo/F1B5R2TC1/-.java|Untitled>",
    "file": {
      "id": "F1B5R2TC1",
      "created": 1464038690,
      "timestamp": 1464038690,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U0QR1SM32",
      "editable": true,
      "size": 195,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F1B5R2TC1/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F1B5R2TC1/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/kristo/F1B5R2TC1/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F1B5R2TC1-1d14814280",
      "edit_link": "https://androidchat.slack.com/files/kristo/F1B5R2TC1/-.java/edit",
      "preview": "List<Phones> phones = getPhones();\r\n\r\nboolean isfirst = true;\r\nfor (Phones p : phones) {\r\n\tmAdapter.addItem(new ProfileItem(isfirst ? \"phones\" : \"\", p.getFormattedNumber());\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-variable\">List</span><span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Phones</span><span class=\"cm-operator\">&gt;</span> <span class=\"cm-variable\">phones</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">getPhones</span>();</pre></div>\n<div><pre>&#8203;</pre></div>\n<div><pre><span class=\"cm-variable-3\">boolean</span> <span class=\"cm-variable\">isfirst</span> <span class=\"cm-operator\">=</span> <span class=\"cm-atom\">true</span>;</pre></div>\n<div><pre><span class=\"cm-keyword\">for</span> (<span class=\"cm-variable\">Phones</span> <span class=\"cm-variable\">p</span> : <span class=\"cm-variable\">phones</span>) {</pre></div>\n<div><pre>\t<span class=\"cm-variable\">mAdapter</span>.<span class=\"cm-variable\">addItem</span>(<span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">ProfileItem</span>(<span class=\"cm-variable\">isfirst</span> <span class=\"cm-operator\">?</span> <span class=\"cm-string\">&quot;phones&quot;</span> : <span class=\"cm-string\">&quot;&quot;</span>, <span class=\"cm-variable\">p</span>.<span class=\"cm-variable\">getFormattedNumber</span>());</pre></div>\n</div>\n</div>\n",
      "lines": 7,
      "lines_more": 2,
      "preview_is_truncated": null,
      "channels": [
        "C04NZAN54"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U0QR1SM32",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U0QR1SM32|kristo>",
    "bot_id": null,
    "ts": "1464038691.004246",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "23de35879",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0QR1SM32",
    "text": "But I mean … it’s not gonna do anything differently or look any prettier",
    "ts": "1464038692.004247",
    "id": "23de35880",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "if you're performing logic based on index, i don't see what's wrong with using a normal `for`",
    "ts": "1464038694.004248",
    "id": "23de35881",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "What are y’all setting minSdkVersion at these days?",
    "ts": "1464038715.004249",
    "id": "23de35882",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0QR1SM32",
    "text": "21 :smile:",
    "ts": "1464038722.004250",
    "id": "23de35883",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "15 here",
    "ts": "1464038725.004251",
    "id": "23de35884",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "yes, I agree",
    "ts": "1464038730.004252",
    "id": "23de35885",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "but this guy said that its complex",
    "ts": "1464038744.004253",
    "id": "23de35886",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "that's debatable but if he really feels that way, i'd just change it to <@U0QR1SM32>'s example and move on :stuck_out_tongue:",
    "ts": "1464038801.004254",
    "id": "23de35887",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B5GHT96",
    "subtype": "channel_join",
    "text": "<@U1B5GHT96|marcovan> has joined the channel",
    "ts": "1464038842.004255",
    "id": "23de35888",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0542GLTE",
    "text": "Yeah, gains nothing",
    "ts": "1464038856.004256",
    "id": "23de35889",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "you could argue it's less efficient because it allocates an iterator instead of an int",
    "ts": "1464038898.004257",
    "id": "23de35890",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "iterator and a boolean*",
    "ts": "1464038917.004258",
    "id": "23de35891",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0JBR7LUV",
    "text": "yeah, but as for me this way is more confusing",
    "ts": "1464039032.004259",
    "id": "23de35892",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0QR1SM32",
    "text": "flip a coin #yolo",
    "ts": "1464039059.004260",
    "id": "23de35893",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "well, you don’t know what the compiler (and runtime) will do",
    "ts": "1464039070.004261",
    "id": "23de35894",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "for example, iterator-based foreach in Kotlin will trigger the compiler to generate an efficient implementation without the allocation",
    "ts": "1464039108.004262",
    "id": "23de35895",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "I’m sure ART has some tricks as well",
    "ts": "1464039123.004263",
    "id": "23de35896",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "which is why #enumsmatter",
    "ts": "1464039133.004264",
    "id": "23de35897",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "How can an iterator-based `for` generate an implementation without allocations?",
    "ts": "1464039317.004265",
    "id": "23de35898",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0RGXBYUD>: \n&gt; will trigger the compiler to generate an efficient implementation without the allocation",
    "ts": "1464039413.004266",
    "id": "23de35899",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "Yep, how?",
    "ts": "1464039429.004267",
    "id": "23de35900",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "Creating an iterator is an allocation.",
    "ts": "1464039442.004268",
    "id": "23de35901",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "compiler can just swap in an index-based implementation",
    "ts": "1464039457.004269",
    "id": "23de35902",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "I should clarify, I mean something that normally would allocate an iterator would be replaced with an efficient implementation",
    "ts": "1464039461.004270",
    "id": "23de35903",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "for example: `for (i in 1..5)`",
    "ts": "1464039493.004271",
    "id": "23de35904",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "An iterator is never used in `IntRange` iterations. Even if you use `until` instead of `..`.",
    "ts": "1464039552.004272",
    "id": "23de35905",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0RGXBYUD>: because the compiler special-cases it",
    "ts": "1464039565.004273",
    "id": "23de35906",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "IntRange is an Iterable",
    "ts": "1464039571.004274",
    "id": "23de35907",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "That’s a very special case when the compiler knows internals of its platform type. Otherwise it cannot get rid of allocations in iterator-based for loops.",
    "ts": "1464039664.004275",
    "id": "23de35908",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "Moreover, `for (i in 1 until 5)` still produces an allocation.",
    "ts": "1464039699.004276",
    "id": "23de35909",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0RGXBYUD>: not an iterator allocation",
    "ts": "1464039891.004277",
    "id": "23de35910",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "Doesn’t matter I suppose. Still an allocation.",
    "ts": "1464039921.004278",
    "id": "23de35911",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B5EJLS0",
    "subtype": "channel_join",
    "text": "<@U1B5EJLS0|bsobe> has joined the channel",
    "ts": "1464040075.004279",
    "id": "23de35912",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "```\nfun loopOne() {\n  for (i in 1..5) {\n  }\n}\n\n// access flags 0x19\n  public final static loopOne()V\n   L0\n    LINENUMBER 66 L0\n    ICONST_1\n    ISTORE 0\n    ICONST_5\n    ISTORE 1\n    ILOAD 0\n    ILOAD 1\n    IF_ICMPGT L1\n   L2\n   L3\n    ILOAD 0\n    ILOAD 1\n    IF_ICMPEQ L1\n    IINC 0 1\n   L4\n    GOTO L2\n   L1\n    LINENUMBER 68 L1\n    RETURN\n   L5\n    LOCALVARIABLE i I L3 L4 0\n    MAXSTACK = 2\n    MAXLOCALS = 2\n\nfun loopTwo() {\n  for (i in 0 until 5) {\n  }\n}\n\n// access flags 0x19\n  public final static loopTwo()V\n   L0\n    LINENUMBER 100 L0\n    ICONST_0\n    ICONST_5\n    INVOKESTATIC kotlin/ranges/RangesKt.until (II)Lkotlin/ranges/IntRange;\n    DUP\n    INVOKEVIRTUAL kotlin/ranges/IntRange.getFirst ()I\n    ISTORE 0\n    INVOKEVIRTUAL kotlin/ranges/IntRange.getLast ()I\n    ISTORE 1\n    ILOAD 0\n    ILOAD 1\n    IF_ICMPGT L1\n   L2\n   L3\n    ILOAD 0\n    ILOAD 1\n    IF_ICMPEQ L1\n    IINC 0 1\n   L4\n    GOTO L2\n   L1\n    LINENUMBER 102 L1\n    RETURN\n   L5\n    LOCALVARIABLE i I L3 L4 0\n    MAXSTACK = 2\n    MAXLOCALS = 2\n```",
    "edited": {
      "user": "U053LEHJN",
      "ts": "1464040528.000000"
    },
    "ts": "1464040120.004280",
    "id": "23de35913",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0RGXBYUD>: ^",
    "ts": "1464040127.004281",
    "id": "23de35914",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054AD9CZ",
    "text": "Is that bytecode?",
    "edited": {
      "user": "U054AD9CZ",
      "ts": "1464040447.000000"
    },
    "ts": "1464040439.004282",
    "id": "23de35915",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "no immediate allocations, and the only one underneath is the IntRange object",
    "ts": "1464040477.004284",
    "id": "23de35916",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U054AD9CZ>: yes, two Kotlin functions each followed by the JVM bytecode kotlinc spits out",
    "ts": "1464040494.004285",
    "id": "23de35917",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054AD9CZ",
    "text": "Cool",
    "ts": "1464040507.004286",
    "id": "23de35918",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "`INVOKESTATIC kotlin/ranges/RangesKt.until (II)Lkotlin/ranges/IntRange;` - that’s an allocation.",
    "ts": "1464041003.004288",
    "id": "23de35919",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0RGXBYUD",
    "text": "So you cannot say there’s no allocations if the allocation is not explicit.",
    "edited": {
      "user": "U0RGXBYUD",
      "ts": "1464041068.000000"
    },
    "ts": "1464041059.004289",
    "id": "23de35920",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "<@U053LEHJN>: Kotlin has Kotlinp?",
    "ts": "1464042734.004291",
    "id": "23de35921",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U08GFT5V5>: built into the IDE, yeah",
    "ts": "1464042775.004292",
    "id": "23de35922",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U0RGXBYUD>: regardless, Kotlin can improve that through better inlining",
    "ts": "1464042904.004293",
    "id": "23de35923",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "and more to my point, further optimizations take place at install time as well as run time that could remove tiny allocations like that",
    "ts": "1464042939.004294",
    "id": "23de35924",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U08GFT5V5",
    "text": "<@U053LEHJN>: still not optimized enough. I’ve recommended for years that we all just move to binary for extreme optimization.",
    "ts": "1464043174.004295",
    "reactions": [
      {
        "name": "trollface",
        "users": [
          "U08GFT5V5",
          "U053LEHJN",
          "U0XJ96KPG"
        ],
        "count": 3
      }
    ],
    "id": "23de35925",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B6R5QCX",
    "subtype": "channel_join",
    "text": "<@U1B6R5QCX|jvretamero> has joined the channel",
    "ts": "1464052009.004296",
    "id": "23de35926",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B72V24C",
    "subtype": "channel_join",
    "text": "<@U1B72V24C|vixmemon> has joined the channel",
    "ts": "1464062367.004297",
    "id": "23de35927",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "Setting a *Typeface* on a *TextView* can sometimes cut off the last character in the text.  \n<http://stackoverflow.com/questions/10243374/textview-cutting-off-a-letter-in-android>\nNone of these proposed solution seem to work.  Does anyone have a fix for this?",
    "attachments": [
      {
        "title": "textview cutting off a letter in android",
        "title_link": "http://stackoverflow.com/questions/10243374/textview-cutting-off-a-letter-in-android",
        "text": "this is a screen shot from my android. the text is \"asd\". however the \"d\" is slightly cut off. here is the relevant view: &lt;TextView android:id=\"@+id/stuff\"",
        "fallback": "textview cutting off a letter in android",
        "thumb_url": "http://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/questions/10243374/textview-cutting-off-a-letter-in-android",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      }
    ],
    "ts": "1464065460.004298",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "23de35928",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1B7JRW93",
    "subtype": "channel_join",
    "text": "<@U1B7JRW93|ramakanthd92> has joined the channel",
    "ts": "1464065627.004300",
    "id": "23de35929",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "Ok this is pretty strange but I changed from `android:maxLines=“1\"` to `android:singleLine=“true\"` and now the text is not getting cut off.",
    "ts": "1464069147.004301",
    "id": "23de35930",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "there’s a whole science behind the text views",
    "ts": "1464069667.004302",
    "id": "23de35931",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "i thought those two attributes were equivalent",
    "ts": "1464069727.004303",
    "id": "23de35932",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0A1BE7KQ",
    "text": "but apparently not",
    "ts": "1464069731.004304",
    "id": "23de35933",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "depends, you can decompile the source in AS tho",
    "ts": "1464069772.004305",
    "id": "23de35934",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053PPGDC",
    "text": "also it might be different on different api versions",
    "ts": "1464069785.004306",
    "id": "23de35935",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]