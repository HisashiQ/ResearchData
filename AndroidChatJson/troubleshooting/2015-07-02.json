[
  {
    "user": "U04VA47NB",
    "text": "No manually, but I think I found the problem",
    "ts": "1435846745.001165",
    "id": "02tr1099",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04VA47NB",
    "text": "<@U054JURKR>",
    "ts": "1435846750.001166",
    "id": "02tr1100",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054JURKR",
    "text": "Great! <@U04VA47NB> I was checking stack overflow and it typically seems to be related to memory issues (not releasing/destroying object etc.)",
    "ts": "1435846835.001167",
    "id": "02tr1101",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04VA47NB",
    "text": "I think it was related to the way I was working with a handler. Made some changes and I can’t seem to repro it anymore :simple_smile:",
    "ts": "1435846873.001168",
    "id": "02tr1102",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054JURKR",
    "text": "You can’t fix what you can’t repro!",
    "ts": "1435847450.001169",
    "id": "02tr1103",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04VA47NB",
    "text": "Lol true",
    "ts": "1435847740.001170",
    "id": "02tr1104",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "<@U054JURKR>: question about your app: does it use onData() for finding elements in ListViews? Or will it just scroll the specific way?",
    "ts": "1435848165.001171",
    "id": "02tr1105",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054JURKR",
    "text": "<@U04TK850N>: Yes, the generated test uses onData for ListViews.",
    "ts": "1435849598.001172",
    "id": "02tr1106",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054JURKR",
    "text": "Did I answer your question?",
    "ts": "1435849629.001173",
    "id": "02tr1107",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Yup, I'll give it a try tomorrow :)",
    "ts": "1435849679.001174",
    "id": "02tr1108",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "Thanks!",
    "ts": "1435849683.001175",
    "id": "02tr1109",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054JURKR",
    "text": "Awesome! :simple_smile:",
    "ts": "1435850110.001176",
    "id": "02tr1110",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "How can I chain network events so after the previous one finishes a new one starts? I heard people say RxJava and I'm looking into it but see there's RxAndroid, RxJava, and a lot of similar things? I'm a little lost, I need some guidance haha",
    "edited": {
      "user": "U053TJ508",
      "ts": "1435859409.000000"
    },
    "ts": "1435859365.001177",
    "id": "02tr1111",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "RxAndroid is more like utils lib",
    "ts": "1435859479.001179",
    "id": "02tr1112",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0548MM6B",
    "text": "RxJava woul be what you want",
    "ts": "1435859498.001180",
    "id": "02tr1113",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I wouldn't start using RxAndroid now until they finished their rewrite",
    "edited": {
      "user": "U04TK850N",
      "ts": "1435859516.000000"
    },
    "ts": "1435859505.001181",
    "id": "02tr1114",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U053TJ508>: RxJava is the foundation",
    "ts": "1435859538.001183",
    "id": "02tr1115",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "So this is what I want? <https://github.com/ReactiveX/RxJava>",
    "attachments": [
      {
        "service_name": "GitHub",
        "title": "ReactiveX/RxJava",
        "title_link": "https://github.com/ReactiveX/RxJava",
        "text": "RxJava – Reactive Extensions for the JVM – a library for composing asynchronous and event-based programs using observable sequences for the Java VM.",
        "fallback": "GitHub: ReactiveX/RxJava",
        "thumb_url": "https://avatars3.githubusercontent.com/u/6407041?v=3&s=400",
        "from_url": "https://github.com/ReactiveX/RxJava",
        "thumb_width": 400,
        "thumb_height": 400,
        "id": 1
      }
    ],
    "ts": "1435859544.001184",
    "id": "02tr1116",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "yah",
    "ts": "1435859549.001186",
    "id": "02tr1117",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "and if you can't use retrolambda, then use Kotlin along with RxKotlin",
    "ts": "1435859571.001187",
    "id": "02tr1118",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "retrolambda?",
    "ts": "1435859607.001188",
    "id": "02tr1119",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "I can build subscriptions like:\nobservable subscribeWith {\n  onStart {\n    doThing()\n  }\n  onNext { obj -&gt;\n    doThingWith(obj)\n  }\n  onComplete {\n    doLastThing()\n  }\n}",
    "ts": "1435859652.001189",
    "id": "02tr1120",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U053TJ508>: backports Java 8 closures/anonymous functions to Java 6/7",
    "ts": "1435859672.001190",
    "id": "02tr1121",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "im learning it without retrolambda",
    "ts": "1435859731.001191",
    "id": "02tr1122",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "atm",
    "ts": "1435859731.001192",
    "id": "02tr1123",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "it’s messy but im slowly getting a good understanding of it",
    "ts": "1435859749.001193",
    "id": "02tr1124",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04U5KS3Z",
    "text": "seeing the guts of it",
    "ts": "1435859754.001194",
    "id": "02tr1125",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "does \"obj\" come from the result of doThing()?",
    "ts": "1435859766.001195",
    "id": "02tr1126",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "obj is the thing passed to onNext",
    "ts": "1435859782.001196",
    "id": "02tr1127",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "everything before the \"-&gt;\" are parameters to the function",
    "ts": "1435859797.001197",
    "id": "02tr1128",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "ohh",
    "ts": "1435859806.001198",
    "id": "02tr1129",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "So this is a lambda expression?",
    "ts": "1435859894.001199",
    "id": "02tr1130",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "yes",
    "ts": "1435860118.001200",
    "id": "02tr1131",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "AS always tells me I could use lambdas but then think Java 6/7 didn't even support them",
    "ts": "1435860133.001201",
    "id": "02tr1132",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "I love lambdas from the C# days",
    "edited": {
      "user": "U04TK850N",
      "ts": "1435860147.000000"
    },
    "ts": "1435860140.001202",
    "id": "02tr1133",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "This is the first time I'm hearing about lambdas",
    "ts": "1435860189.001204",
    "id": "02tr1134",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "wat",
    "ts": "1435860296.001205",
    "id": "02tr1135",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053LEHJN",
    "text": "<@U053TJ508>: prepare to write the most beautiful code you've ever written, then",
    "ts": "1435860318.001206",
    "id": "02tr1136",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U053TJ508",
    "text": "As my old computer programming teacher once said “Everything should look pretty; Make it look pretty.”",
    "ts": "1435860422.001207",
    "id": "02tr1137",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U06HSQSSJ",
    "subtype": "channel_join",
    "text": "<@U06HSQSSJ|elmorearoger> has joined the channel",
    "ts": "1435902627.001208",
    "id": "02tr1138",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]