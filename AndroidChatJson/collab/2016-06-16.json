[
  {
    "user": "U1HL0RVQF",
    "subtype": "channel_join",
    "text": "<@U1HL0RVQF|djrausch> has joined the channel",
    "ts": "1466103614.000222",
    "id": "16co2838",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HL4NZK7",
    "subtype": "channel_join",
    "text": "<@U1HL4NZK7|kevinmost> has joined the channel",
    "ts": "1466104202.000223",
    "id": "16co2839",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U1HL4NZK7",
    "text": "This was a conversation on /r/androiddev this morning. My contribution was that the sanest persistence wrappers I've used are SQLDelight + SQLBrite in tandem. They do enough for you that you're only touching raw SQL when you're changing your schema or making queries, but they don't do so much as to constrain you, and more importantly, they don't do enough that they're prone to being super-buggy like most ORMs. SQLDelight just generates models + SQL statement strings and then gets out of your way.",
    "ts": "1466104349.000224",
    "id": "16co2840",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]