[
  {
    "user": "U0NQ1CA3D",
    "subtype": "channel_join",
    "text": "<@U0NQ1CA3D|nachomv> has joined the channel",
    "ts": "1456301333.000245",
    "id": "24be2891",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "subtype": "channel_join",
    "text": "<@U0NQ6CY8G|crispy> has joined the channel",
    "ts": "1456302483.000246",
    "id": "24be2892",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQR57JM",
    "subtype": "channel_join",
    "text": "<@U0NQR57JM|stubbs> has joined the channel",
    "ts": "1456309810.000247",
    "id": "24be2893",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQQD4J0",
    "subtype": "channel_join",
    "text": "<@U0NQQD4J0|armen> has joined the channel",
    "ts": "1456312669.000248",
    "id": "24be2894",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NR6201G",
    "subtype": "channel_join",
    "text": "<@U0NR6201G|jowy> has joined the channel",
    "ts": "1456318085.000249",
    "id": "24be2895",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NRBHVH6",
    "subtype": "channel_join",
    "text": "<@U0NRBHVH6|reinhardt1053> has joined the channel",
    "ts": "1456320967.000250",
    "id": "24be2896",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NRG4GHW",
    "subtype": "channel_join",
    "text": "<@U0NRG4GHW|mariog> has joined the channel",
    "ts": "1456322886.000251",
    "id": "24be2897",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NRGGYDV",
    "subtype": "channel_join",
    "text": "<@U0NRGGYDV|tadeu.araujo> has joined the channel",
    "ts": "1456323047.000252",
    "id": "24be2898",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NRJ58Q3",
    "subtype": "channel_join",
    "text": "<@U0NRJ58Q3|yesez> has joined the channel",
    "ts": "1456324781.000253",
    "id": "24be2899",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "Seem a little stuck on JSON Parsing with GSON. If my JSON format is as below, what type of attributes should my custom object hold? List?\n\n```{  \n   \"status\":{  \n      \"timems\":3,\n      \"rid\":”+ABCDeFGHiJQ\"\n   },\n   \"hits\":{  },\n   \"ResponseMetadata\":{  \n      \"HTTPStatusCode\":200\n   }\n}```",
    "edited": {
      "user": "U0LETFK18",
      "ts": "1456325832.000000"
    },
    "ts": "1456325781.000254",
    "id": "24be2900",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Can you explain more clearly what you’re trying to do?",
    "ts": "1456325817.000255",
    "id": "24be2901",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "So i am trying to parse those to an object using Gson, but seems to not be working",
    "ts": "1456325859.000258",
    "id": "24be2902",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "Status, Hits, and ResponseMetadata ar objects",
    "ts": "1456325865.000259",
    "id": "24be2903",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "My custom class is:",
    "ts": "1456325865.000260",
    "id": "24be2904",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "there are objects",
    "ts": "1456325877.000261",
    "id": "24be2905",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "```public class SearchProductResponse {\n\n    private List&lt;String&gt; status = new ArrayList&lt;String&gt;();\n\n    private List&lt;String&gt; hits = new ArrayList&lt;String&gt;();\n\n    private List&lt;String&gt; ResponseMetadata = new ArrayList&lt;String&gt;();\n\n    public List&lt;String&gt; getStatus() {\n        return status;\n    }\n\n    public void setStatus(List&lt;String&gt; status) {\n        this.status = status;\n    }\n\n    public List&lt;String&gt; getHits() {\n        return hits;\n    }\n\n    public void setHits(List&lt;String&gt; hits) {\n        this.hits = hits;\n    }\n\n    public List&lt;String&gt; getResponseMetadata() {\n        return ResponseMetadata;\n    }\n\n    public void setResponseMetadata(List&lt;String&gt; responseMetadata) {\n        ResponseMetadata = responseMetadata;\n    }\n\n    public String toString() {\n        return \"SearchProductResponse {\" +\n                \"hits=\" + hits +\n                \", status='\" + status + \" \" +\n                \"ResponseMetadata\" + ResponseMetadata +\n                '}';\n    }\n}```",
    "ts": "1456325879.000262",
    "id": "24be2906",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "and timems is int",
    "ts": "1456325895.000263",
    "id": "24be2907",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "No lists",
    "ts": "1456325898.000264",
    "id": "24be2908",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "inside each one you will have for ex. Status fields, int timems, string rid",
    "ts": "1456325898.000265",
    "id": "24be2909",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "The way i am parsing is:\n```    @Override\n    protected Response&lt;SearchProductResponse&gt; parseNetworkResponse(NetworkResponse response) {\n\n        try {\n\n            String jsonString = new String(response.data, HttpHeaderParser.parseCharset(response.headers));\n            SearchProductResponse searchProductResponse = new Gson().fromJson(jsonString, SearchProductResponse.class);\n\n            return Response.success(searchProductResponse, HttpHeaderParser.parseCacheHeaders(response));\n\n        } catch (UnsupportedEncodingException e) {\n            return Response.error(new VolleyError(\"Unsupported encoding\", e));\n        } catch (JsonSyntaxException e) {\n            return Response.error(new VolleyError(\"Malformed Response\", e));\n        }\n    }```",
    "ts": "1456325907.000266",
    "id": "24be2910",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "You’ll need a class  called Status which has fields timems and rid",
    "ts": "1456325909.000267",
    "id": "24be2911",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "a class called ResponseMetaData with field HTTPStatusCode",
    "ts": "1456325925.000268",
    "id": "24be2912",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "jsonString comes back with the JSON response, but SearchProductResponse fails",
    "ts": "1456325926.000269",
    "id": "24be2913",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "and so on",
    "ts": "1456325927.000270",
    "id": "24be2914",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "class Status() { int timems; String rid }",
    "ts": "1456325944.000271",
    "id": "24be2915",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "same for the other ones",
    "ts": "1456325947.000272",
    "id": "24be2916",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "<@U0NNZ694Z>: So I will have 3 classes in this case",
    "edited": {
      "user": "U0LETFK18",
      "ts": "1456325996.000000"
    },
    "ts": "1456325990.000273",
    "id": "24be2917",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "One sec",
    "ts": "1456326002.000275",
    "id": "24be2918",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "yes",
    "ts": "1456326010.000276",
    "id": "24be2919",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "And then if i would like to keep the return format of the Response, then SearchProductResponse will contains those 3 classes as an attribute?",
    "edited": {
      "user": "U0LETFK18",
      "ts": "1456326059.000000"
    },
    "ts": "1456326051.000277",
    "id": "24be2920",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "```public class SearchProductResponse {\n    \n    public Status status;\n    public Hits hits;\n    public ResponseMetaData ResponseMetadata;\n    \n    private static class Status {\n        public int timems;\n        public String rid;\n    }\n    \n    private static class Hits {\n        \n    }\n    \n    private static class ResponseMetaData {\n        public int HTTPStatusCode;\n    }\n    \n}```",
    "ts": "1456326090.000279",
    "id": "24be2921",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "There’s a primitive example of what you’d be doing",
    "ts": "1456326097.000280",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U0N4RS70W",
          "U0LJ7B89L"
        ],
        "count": 2
      }
    ],
    "id": "24be2922",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Keep inner classes for the sub-JSONObjects of your parent, and keep fields for those",
    "ts": "1456326120.000281",
    "id": "24be2923",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "ahh i see",
    "ts": "1456326180.000282",
    "id": "24be2924",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "and those setter and getters will be generated in their respective classes ?",
    "ts": "1456326196.000283",
    "id": "24be2925",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "They won’t be generated automatically\nI created it as a sort of POJO where it’s generally acceptable to not use getters/setters and to just leave fields public",
    "ts": "1456326251.000284",
    "id": "24be2926",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "i see",
    "ts": "1456326295.000285",
    "id": "24be2927",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "You don’t need them though",
    "ts": "1456326300.000286",
    "id": "24be2928",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "```        new Gson().fromJson(json, SearchProductResponse.class);\n```",
    "ts": "1456326301.000287",
    "id": "24be2929",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Using it like that, if you pass your json, will generate the object correctly",
    "ts": "1456326313.000288",
    "id": "24be2930",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "btw, use this next time",
    "ts": "1456326341.000289",
    "id": "24be2931",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "<http://www.jsonschema2pojo.org/>",
    "attachments": [
      {
        "text": "Generate Plain Old Java Objects from JSON or JSON-Schema.",
        "fallback": "Generate Plain Old Java Objects from JSON or JSON-Schema.",
        "from_url": "http://www.jsonschema2pojo.org/",
        "id": 1
      }
    ],
    "ts": "1456326342.000290",
    "reactions": [
      {
        "name": "arrow_up",
        "users": [
          "U0N7D6F50",
          "U0NNZ694Z",
          "U0CT7JDN3"
        ],
        "count": 3
      },
      {
        "name": "arrow_down",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "24be2932",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "very useful tool",
    "ts": "1456326349.000292",
    "id": "24be2933",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Super cool, bookmarking",
    "ts": "1456326376.000293",
    "id": "24be2934",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "<@U0NNZ694Z>: cool! Thanks! will give it a go now, and see if i can parse them correctly",
    "ts": "1456326405.000294",
    "id": "24be2935",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "btw, I notice some code that have word `final` and `static`. What do they actually do to the attribute?",
    "ts": "1456326433.000295",
    "id": "24be2936",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "`final` Ensures that a reference is never changed.  If a primitive type is set to final, it will never change.  For example \n\n`final int x = 5`, x will **always** be 5.\n\nIf an object is set to final, it can be modified but it must always reference the same object:",
    "edited": {
      "user": "U0NNZ694Z",
      "ts": "1456326574.000000"
    },
    "ts": "1456326503.000296",
    "id": "24be2937",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "`final Cat cat = new Cat()`",
    "edited": {
      "user": "U0NNZ694Z",
      "ts": "1456326561.000000"
    },
    "ts": "1456326515.000297",
    "id": "24be2938",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "you can still call `cat.domethod()`, but you can’t say `cat = new Cat()`",
    "edited": {
      "user": "U0NNZ694Z",
      "ts": "1456326554.000000"
    },
    "ts": "1456326532.000298",
    "id": "24be2939",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "—\n`static` says that something belongs to the class itself, rather than the instantiation of the class, which is a harder thing to wrap your head around for java beginners (not sure what your experience is)",
    "ts": "1456326623.000303",
    "id": "24be2940",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Reference this SO post for more info on that: <http://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class>",
    "attachments": [
      {
        "title": "What does the 'static' keyword do in a class?",
        "title_link": "http://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class",
        "text": "To be specific, I was trying this code: package hello; public class Hello { Clock clock = new Clock(); public static void main(String args[]) { clock.sayTime(); } } But it...",
        "fallback": "What does the 'static' keyword do in a class?",
        "thumb_url": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      }
    ],
    "ts": "1456326648.000304",
    "id": "24be2941",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "I am a beginner =P",
    "ts": "1456326735.000306",
    "id": "24be2942",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "Did some reading about static and final, but can’t fully fathom it",
    "ts": "1456326745.000307",
    "id": "24be2943",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "Quick question about the JSON format again",
    "ts": "1456326756.000308",
    "id": "24be2944",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "also final calsses can’t be extended",
    "ts": "1456326790.000309",
    "id": "24be2945",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "```  \"hits\":{  \n      \"cursor\":\"VcIzzOkoQW9JSVFhME5PVFJOV1M5a2NtVnpjMkZpWld4c1pTODJNRFl6TUE9PQo\",\n      \"found\":2140,\n      \"hit\":[  \n         {  \n            \"fields\":{  \n               \"brand\":[  \n                  “YONEX\"\n               ],```",
    "ts": "1456326795.000310",
    "id": "24be2946",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "for this not sure about the hit object type. It’s an array, but what about those objects in it?",
    "edited": {
      "user": "U0LETFK18",
      "ts": "1456326823.000000"
    },
    "ts": "1456326807.000311",
    "id": "24be2947",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "give full json",
    "ts": "1456326836.000313",
    "id": "24be2948",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "i did this so far, am i on  the right track:\n```    public static class Hits {\n        public String cursor;\n        public int found;\n        public int start;\n\n    }```",
    "ts": "1456326867.000314",
    "id": "24be2949",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "<@U0830HE7P>: Can’t show all of it, because inside the hit array, there’s 2140 objects, but format is the same",
    "ts": "1456326897.000315",
    "id": "24be2950",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0N4RS70W",
    "text": "you are missing hit inside hits, that is an array of objects",
    "ts": "1456326956.000316",
    "id": "24be2951",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "```\npublic class ArrayMember {\n\tpublic Member[] fields;\n\n\tprivate static class Member {\n\t\tpublic String[] brands;\n\t}\n}\n\n```",
    "edited": {
      "user": "U0NNZ694Z",
      "ts": "1456327008.000000"
    },
    "ts": "1456327003.000317",
    "id": "24be2952",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "hit is an ArrayMember[]",
    "ts": "1456327012.000319",
    "id": "24be2953",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Something like that",
    "ts": "1456327017.000320",
    "id": "24be2954",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "<@U0N4RS70W>: ya, wasn’t sure how to structure it in terms of the type",
    "ts": "1456327061.000321",
    "id": "24be2955",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "<@U0NNZ694Z>: in the ArrayMember class, why is Member[] fields an array? isn’t {} representing an object? As in, hit is  an array of objects?",
    "ts": "1456327138.000322",
    "id": "24be2956",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "``` \"hit\":[  \n         {  \n            \"fields\":{  \n               \"brand\":[  \n                  \"YONEX\"\n               ],```",
    "ts": "1456327247.000323",
    "id": "24be2957",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "hit opens an array, which seems to contain JSON objects",
    "ts": "1456327258.000324",
    "id": "24be2958",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "so hit would be an array of JSONObjects",
    "ts": "1456327277.000325",
    "id": "24be2959",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "ArrayMember[]",
    "ts": "1456327285.000326",
    "id": "24be2960",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "object fields also contains array =)",
    "ts": "1456327305.000327",
    "id": "24be2961",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "oh wait",
    "ts": "1456327344.000328",
    "id": "24be2962",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "fields is  an object with a key pointing at an array",
    "ts": "1456327368.000329",
    "id": "24be2963",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "yep",
    "ts": "1456327388.000330",
    "id": "24be2964",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "ahh i see",
    "ts": "1456327894.000331",
    "id": "24be2965",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "Thanks so much <@U0NNZ694Z> <@U0830HE7P> <@U0N4RS70W> ! Will try to parse it!",
    "ts": "1456328023.000332",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U0N4RS70W",
          "U0830HE7P",
          "U0NNZ694Z"
        ],
        "count": 3
      }
    ],
    "id": "24be2966",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0830HE7P",
    "text": "try to shrink your json to contain only one member in array and use the tool I mentioned before to generate POJOs",
    "ts": "1456328103.000333",
    "id": "24be2967",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NRVKW8L",
    "subtype": "channel_join",
    "text": "<@U0NRVKW8L|greggie> has joined the channel",
    "ts": "1456329229.000334",
    "id": "24be2968",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NSJD45C",
    "subtype": "channel_join",
    "text": "<@U0NSJD45C|chadalderson> has joined the channel",
    "ts": "1456333889.000335",
    "id": "24be2969",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Hello guys, I have a problem. In my activity, I am using a LinearLayoutManager for my recyclerview, I want to change it to GridLayoutManager when user clicks on a button, while retaining the current LayoutManager type when the activity destroys/closes. How do I go about doing this?",
    "edited": {
      "user": "U0NQ6CY8G",
      "ts": "1456334194.000000"
    },
    "ts": "1456334162.000336",
    "id": "24be2970",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "use a GridLayoutManager instead",
    "ts": "1456334790.000338",
    "id": "24be2971",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "span count of 1",
    "ts": "1456334793.000339",
    "id": "24be2972",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U060Q7J2Y",
    "text": "`setSpanCount` to change it",
    "ts": "1456334799.000340",
    "id": "24be2973",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Thanks <@U060Q7J2Y>! So how do I maintain that state so that when I close the app and restart it, I get the layout it was when it was closed?",
    "ts": "1456335687.000341",
    "id": "24be2974",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NSQ8458",
    "subtype": "channel_join",
    "text": "<@U0NSQ8458|virmundi> has joined the channel",
    "ts": "1456335808.000342",
    "id": "24be2975",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NSJD45C",
    "subtype": "channel_leave",
    "text": "<@U0NSJD45C|chadalderson> has left the channel",
    "ts": "1456335995.000343",
    "id": "24be2976",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NSR2Z7T",
    "subtype": "channel_join",
    "text": "<@U0NSR2Z7T|willpate> has joined the channel",
    "ts": "1456335997.000344",
    "id": "24be2977",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U054A24ET",
    "text": "save it in sharedpreferences, then check it in `onCreate()`",
    "ts": "1456336464.000345",
    "id": "24be2978",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Thanks <@U054A24ET>. Also, <@U060Q7J2Y>, the view doesn’t change immediately I click on the button (which calls the setSpanCount method), It only changes the view when I touch the screen. How can I let it change immediately?",
    "ts": "1456337010.000346",
    "id": "24be2979",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "`adapter.notifyDataSetChanged()`",
    "ts": "1456337064.000347",
    "id": "24be2980",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Hello <@U0NNZ694Z>, thanks. I’ve now solved it using the requestLayout( ) method.",
    "edited": {
      "user": "U0NQ6CY8G",
      "ts": "1456337528.000000"
    },
    "ts": "1456337517.000348",
    "id": "24be2981",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Good stuff.  All really the same, same with `invalidate()` I would think.  The view really just needs to be told to redraw",
    "ts": "1456337542.000350",
    "reactions": [
      {
        "name": "+1",
        "users": [
          "U0NQ6CY8G",
          "U0542GLTE"
        ],
        "count": 2
      }
    ],
    "id": "24be2982",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "I'm not 100% sure that is the same actually. if you just ask the view to redraw, you're asking it to redraw with its current attributes. so your viewholders wouldn't rebind",
    "ts": "1456339297.000351",
    "id": "24be2983",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "by telling the adapter the data has changed, you can be sure that onBindViewHolder will be called for the visible items",
    "ts": "1456339339.000352",
    "id": "24be2984",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "`notifyDataSetChanged` is definitely the way to go",
    "ts": "1456339377.000353",
    "id": "24be2985",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "To redraw always do  `invalidate()` followed by `requestLayout()`",
    "ts": "1456343750.000354",
    "id": "24be2986",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "But changing `setSpanCount` requires `invalidate()` `requestLayout()` I think. Since the data didn’t change in this case",
    "ts": "1456343803.000355",
    "id": "24be2987",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0K1ALDQE",
    "text": "Incase the data changed, definitely use `notifyDataSetChanged` like damien suggested",
    "ts": "1456343825.000356",
    "id": "24be2988",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Hi all, in my app, I have a section that lets users create letters/cards, now I want it that while a user is typing, the user can format their writing  (bold, italics, highlights, list) just like evernote does when user makes a note, how can I implement this feature (like a library,etc)?",
    "ts": "1456350005.000357",
    "id": "24be2989",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U0CHUGUDN|1mike12> uploaded a file: <https://androidchat.slack.com/files/1mike12/F0NTX6SUB/-.java|Untitled>",
    "file": {
      "id": "F0NTX6SUB",
      "created": 1456350123,
      "timestamp": 1456350123,
      "name": "-.java",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "java",
      "pretty_type": "Java",
      "user": "U0CHUGUDN",
      "editable": true,
      "size": 275,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F0NTX6SUB/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F0NTX6SUB/download/-.java?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/1mike12/F0NTX6SUB/-.java",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F0NTX6SUB-525a1afe59",
      "edit_link": "https://androidchat.slack.com/files/1mike12/F0NTX6SUB/-.java/edit",
      "preview": "textView.setTypeface(null, Typeface.NORMAL);      // for Normal Text\r\ntextView.setTypeface(null, Typeface.BOLD);        // for Bold only\r\ntextView.setTypeface(null, Typeface.ITALIC);      // for Italic\r\ntextView.setTypeface(null, Typeface.BOLD_ITALIC); // for Bold and Italic",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre><span class=\"cm-variable\">textView</span>.<span class=\"cm-variable\">setTypeface</span>(<span class=\"cm-atom\">null</span>, <span class=\"cm-variable\">Typeface</span>.<span class=\"cm-variable\">NORMAL</span>);      <span class=\"cm-comment\">// for Normal Text</span></pre></div>\n<div><pre><span class=\"cm-variable\">textView</span>.<span class=\"cm-variable\">setTypeface</span>(<span class=\"cm-atom\">null</span>, <span class=\"cm-variable\">Typeface</span>.<span class=\"cm-variable\">BOLD</span>);        <span class=\"cm-comment\">// for Bold only</span></pre></div>\n<div><pre><span class=\"cm-variable\">textView</span>.<span class=\"cm-variable\">setTypeface</span>(<span class=\"cm-atom\">null</span>, <span class=\"cm-variable\">Typeface</span>.<span class=\"cm-variable\">ITALIC</span>);      <span class=\"cm-comment\">// for Italic</span></pre></div>\n<div><pre><span class=\"cm-variable\">textView</span>.<span class=\"cm-variable\">setTypeface</span>(<span class=\"cm-atom\">null</span>, <span class=\"cm-variable\">Typeface</span>.<span class=\"cm-variable\">BOLD_ITALIC</span>); <span class=\"cm-comment\">// for Bold and Italic</span></pre></div>\n</div>\n</div>\n",
      "lines": 4,
      "lines_more": 0,
      "preview_is_truncated": null,
      "channels": [
        "C055MSDCM"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 0
    },
    "user": "U0CHUGUDN",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U0CHUGUDN|1mike12>",
    "bot_id": null,
    "ts": "1456350123.000358",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "24be2990",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CHUGUDN",
    "text": "<@U0NQ6CY8G>",
    "ts": "1456350128.000359",
    "id": "24be2991",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CHUGUDN",
    "text": "<http://stackoverflow.com/questions/4623508/how-to-set-the-font-style-to-bold-italic-and-underlined-in-an-android-textview>",
    "attachments": [
      {
        "title": "How to set the font style to bold, italic and underlined in an Android TextView?",
        "title_link": "http://stackoverflow.com/questions/4623508/how-to-set-the-font-style-to-bold-italic-and-underlined-in-an-android-textview",
        "text": "I want to make a TextView's content bold, italic and underlined. I tried the following code and it works, but doesn't underline. &lt;Textview android:textStyle=\"bold|italic\" .. How do I do it? Any",
        "fallback": "How to set the font style to bold, italic and underlined in an Android TextView?",
        "thumb_url": "http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/questions/4623508/how-to-set-the-font-style-to-bold-italic-and-underlined-in-an-android-textview",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      }
    ],
    "ts": "1456350141.000360",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "24be2992",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "^^ that would end up being extremely difficult with formatting specific text snippets in a textview.",
    "ts": "1456350201.000362",
    "id": "24be2993",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Take a look at this API: <http://developer.android.com/reference/android/text/Html.html>",
    "ts": "1456350204.000363",
    "reactions": [
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50",
          "U08GFT5V5"
        ],
        "count": 2
      }
    ],
    "id": "24be2994",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "You’ll be able to do something like `textView.setText(Html.fromHtml(\"&lt;b&gt;cats&lt;/b&gt; are &lt;i&gt; awesome &lt;/i&gt;\"))`",
    "ts": "1456350240.000364",
    "id": "24be2995",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "then he'd have to generate the html instead of setting the spans though right?",
    "ts": "1456350278.000365",
    "id": "24be2996",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "seems like a different equally difficult problem",
    "ts": "1456350297.000366",
    "id": "24be2997",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "IMO way easier than setting typeface.  I can imagine the solution for using HTML now which some cool code",
    "ts": "1456350332.000367",
    "id": "24be2998",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Setting typeface will do so for a whole textview, so if you want part of your text bold, part italic, part bold *and* italic, your code quickly becomes ridiculous with multiple textviews and positiioning",
    "ts": "1456350363.000368",
    "id": "24be2999",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "oh no",
    "ts": "1456350381.000369",
    "id": "24be3000",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "Spans",
    "ts": "1456350383.000370",
    "id": "24be3001",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "```StyleSpan boldSpan = new StyleSpan( Typeface.BOLD );\n spannable.setSpan( boldSpan, 41, 52, Spannable.SPAN_INCLUSIVE_INCLUSIVE );```",
    "ts": "1456350416.000371",
    "id": "24be3002",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "that lets you set text styling to only certain sections of your text",
    "ts": "1456350433.000372",
    "id": "24be3003",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "I’m using a library called easyfonts, but is there a way to do something like evernote’s panel when a user is typing a note?",
    "ts": "1456350433.000373",
    "id": "24be3004",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NNZ694Z",
    "text": "Would it be buttons that a user can enable/disable for bold/italic/underline/etc?",
    "ts": "1456351374.000374",
    "id": "24be3005",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "<@U0NNZ694Z>: yes. It’ll be something like buttons/icons to make text bold while typing, include lists, include checkbox etc",
    "ts": "1456351484.000375",
    "id": "24be3006",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i'd be interested if you find anything, i think i'll need to do something like that for markdown text down the line",
    "ts": "1456351784.000376",
    "id": "24be3007",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NU91EKH",
    "subtype": "channel_join",
    "text": "<@U0NU91EKH|peperami> has joined the channel",
    "ts": "1456353198.000377",
    "id": "24be3008",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CHUGUDN",
    "text": "honestly it may be easier to use some library that can parse markdown, because I’ve run into trouble in the past, to get portion of text to be different colors, and have it localized. Huge pain in the ass, but basically you do have to use HTML",
    "ts": "1456355340.000378",
    "id": "24be3009",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Thanks <@U0CHUGUDN>. Currently, I’m having the following issue, when a user enters text in an edit text, and within sections of the edittext, made some letters bold, others italics, after writing, I want the those portions to remain the same when the user now previews what was written (in a textview), how do I retain those sections of the the edittext in the textview?",
    "ts": "1456357970.000379",
    "id": "24be3010",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0CHUGUDN",
    "text": "you can add a onTextChanged listener on the editText, then when you detect text changing, you have the textview preview redraw itself",
    "ts": "1456358027.000380",
    "id": "24be3011",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i'm a bit confused by the UX you're describing",
    "ts": "1456358325.000381",
    "id": "24be3012",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "the edittext has raw text, then you have a textview below which shows your formatting?",
    "ts": "1456358364.000382",
    "id": "24be3013",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "does the edittext have html/markdown tags or does it look the same minus the styling?",
    "ts": "1456358386.000383",
    "id": "24be3014",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "it’s not that I’m actually previewing both together. Its like a note taking feature, you create message cards, now after typing your message in the edittext, I want the message to be viewed the way it was in the edittext.",
    "ts": "1456358414.000384",
    "id": "24be3015",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "The edittext is in a different activity, and the textview (which displays what was written) is in another activity.",
    "ts": "1456358525.000385",
    "id": "24be3016",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "ah gotcha. so you need to save the text with styling and everything from your edittext, then display the same when you go back to where that note is displayed",
    "ts": "1456358666.000386",
    "id": "24be3017",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "exactly",
    "ts": "1456358691.000387",
    "id": "24be3018",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "i wonder if you can save the entered text as a CharSequence instead of say, a string which would be the obvious way",
    "ts": "1456358740.000388",
    "id": "24be3019",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "charsequence allows for styled characters",
    "ts": "1456358777.000389",
    "id": "24be3020",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "never done it but that's probably the first thing i would try",
    "ts": "1456358799.000390",
    "id": "24be3021",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NQ6CY8G",
    "text": "Thanks <@U0546QERR>. I’ll see how I can use CharSequence to do it.",
    "ts": "1456359262.000391",
    "id": "24be3022",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NUNDLGL",
    "subtype": "channel_join",
    "text": "<@U0NUNDLGL|jackowski> has joined the channel",
    "ts": "1456362441.000392",
    "id": "24be3023",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NUQ0QVA",
    "subtype": "channel_join",
    "text": "<@U0NUQ0QVA|marcioporto> has joined the channel",
    "ts": "1456363349.000393",
    "id": "24be3024",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0NUX039S",
    "subtype": "channel_join",
    "text": "<@U0NUX039S|cedric> has joined the channel",
    "ts": "1456367661.000394",
    "id": "24be3025",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0P022Z0V",
    "subtype": "channel_join",
    "text": "<@U0P022Z0V|ersanin> has joined the channel",
    "ts": "1456381680.000395",
    "id": "24be3026",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U04TK850N",
    "text": "<@U0546QERR>: pretty sure you meant Spannable and not CharSequence, right?",
    "ts": "1456383161.000396",
    "id": "24be3027",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "damn. i just associated the effect because it gets abstracted out to charsequence in bypass library",
    "ts": "1456386033.000397",
    "id": "24be3028",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0546QERR",
    "text": "scratch what i said then :smile:",
    "ts": "1456386113.000398",
    "id": "24be3029",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0LETFK18",
    "text": "is there a way to reduce edit text hint size only? Meaning the text size won’t be affected just the hint. I’ve seen someone posted on SO regarding putting the font size in the strings xml file like this\n`&lt;string name=\"edittext_hint\"&gt;&lt;font size=\"15\"&gt;Hint here!&lt;/font&gt;&lt;/string&gt;`. But I am guessing that won’t be good when it comes to different phone sizes without the help of the unit `sp`.",
    "ts": "1456386412.000399",
    "id": "24be3030",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]