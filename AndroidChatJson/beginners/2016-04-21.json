[
  {
    "user": "U0SNJDQDC",
    "text": "Is it possible to add RecyclerView dynamically?",
    "ts": "1461223096.000147",
    "id": "21be4428",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0SNJDQDC",
    "text": "I'd like to detach a horizontal RecyclerView inside a vertical one to a view class and then add it using `addView`",
    "ts": "1461223178.000148",
    "id": "21be4429",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0SNJDQDC",
    "text": "It's somewhat hard to read when everything is in the parent (vertical scrolling) adapter",
    "ts": "1461223203.000149",
    "id": "21be4430",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "subtype": "file_share",
    "text": "<@U0H67LJUA|versa> uploaded a file: <https://androidchat.slack.com/files/versa/F12FXD5B6/-.txt|Untitled> and commented: Hey, was just wondering if there is a way for  method parameters to accept a listener from any interface. Outside of using multiple constructors.\n\nLike say as an example extending a interface from a base interface, or some kind of casting, or using abstraction. A variation of Object or &lt;?&gt; for Interfaces etc.\n\nReally want to avoid hardcoding each possible accepted listener, and keep it open.",
    "file": {
      "id": "F12FXD5B6",
      "created": 1461226348,
      "timestamp": 1461226348,
      "name": "-.txt",
      "title": "Untitled",
      "mimetype": "text/plain",
      "filetype": "text",
      "pretty_type": "Plain Text",
      "user": "U0H67LJUA",
      "editable": true,
      "size": 246,
      "mode": "snippet",
      "is_external": false,
      "external_type": "",
      "is_public": true,
      "public_url_shared": false,
      "display_as_bot": false,
      "username": "",
      "url_private": "https://files.slack.com/files-pri/T04PLNDMP-F12FXD5B6/-.txt?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "url_private_download": "https://files.slack.com/files-pri/T04PLNDMP-F12FXD5B6/download/-.txt?t=xoxe-4802761737-135492341906-135492342354-a21523d532",
      "permalink": "https://androidchat.slack.com/files/versa/F12FXD5B6/-.txt",
      "permalink_public": "https://slack-files.com/T04PLNDMP-F12FXD5B6-24025c6886",
      "edit_link": "https://androidchat.slack.com/files/versa/F12FXD5B6/-.txt/edit",
      "preview": "public void request(Accepts any of the two (or more) listener) {\r\n     // Do something.\r\n}\r\n\r\npublic interface RequestCompletedListenerA {\r",
      "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\u200b/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>public void request(Accepts any of the two (or more) listener) {</pre></div>\n<div><pre>     // Do something.</pre></div>\n<div><pre>}</pre></div>\n<div><pre></pre></div>\n<div><pre>public interface RequestCompletedListenerA {</pre></div>\n<div><pre></pre></div>\n</div>\n</div>\n",
      "lines": 13,
      "lines_more": 8,
      "preview_is_truncated": false,
      "channels": [
        "C055MSDCM"
      ],
      "groups": [

      ],
      "ims": [

      ],
      "comments_count": 1,
      "initial_comment": {
        "id": "Fc12G5HDAL",
        "created": 1461226348,
        "timestamp": 1461226348,
        "user": "U0H67LJUA",
        "is_intro": true,
        "comment": "Hey, was just wondering if there is a way for  method parameters to accept a listener from any interface. Outside of using multiple constructors.\n\nLike say as an example extending a interface from a base interface, or some kind of casting, or using abstraction. A variation of Object or &lt;?&gt; for Interfaces etc.\n\nReally want to avoid hardcoding each possible accepted listener, and keep it open.",
        "channel": ""
      }
    },
    "user": "U0H67LJUA",
    "upload": true,
    "display_as_bot": false,
    "username": "<@U0H67LJUA|versa>",
    "bot_id": null,
    "ts": "1461226348.000152",
    "reactions": [
      {
        "name": "upvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      },
      {
        "name": "downvote",
        "users": [
          "U0N7D6F50"
        ],
        "count": 1
      }
    ],
    "id": "21be4431",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0XCFE6AH",
    "text": "You always use same listener and return the data  into listener using which will then decide what event it is.. like onActivityResult(int requestCode, int resultCode, Intent data)",
    "edited": {
      "user": "U0XCFE6AH",
      "ts": "1461226663.000000"
    },
    "ts": "1461226613.000153",
    "id": "21be4432",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U0H67LJUA",
    "text": "Thatâ€™ll work! Thanks <@U0XCFE6AH> :taco:",
    "ts": "1461226758.000155",
    "id": "21be4433",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12HRPY4A",
    "subtype": "channel_join",
    "text": "<@U12HRPY4A|lundblom> has joined the channel",
    "ts": "1461237358.000156",
    "id": "21be4434",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12H6RXHR",
    "subtype": "channel_join",
    "text": "<@U12H6RXHR|panich> has joined the channel",
    "ts": "1461247239.000157",
    "id": "21be4435",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12H6RXHR",
    "text": "Hello everyone! Can some1 help me with my questions?\n<http://stackoverflow.com/questions/36765860/android-scrollview-focus-down>\n<http://stackoverflow.com/questions/36645549/drawable-resolution-in-custom-widgets>\nI will vote up any good answers :smile: Thx a lot )",
    "attachments": [
      {
        "title": "Android: ScrollView FOCUS_DOWN",
        "title_link": "http://stackoverflow.com/questions/36765860/android-scrollview-focus-down",
        "text": "I have layout with ScrollView and TextView inside of it. My TextView is a \"timer\" and updates every 1 second. Also inside my ScrollView I have EditText field, i.e. I have keyboard input. So I want...",
        "fallback": "Android: ScrollView FOCUS_DOWN",
        "thumb_url": "http://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/questions/36765860/android-scrollview-focus-down",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 1
      },
      {
        "title": "Drawable resolution in custom widgets",
        "title_link": "http://stackoverflow.com/questions/36645549/drawable-resolution-in-custom-widgets",
        "text": "Good day, I am a little confused and sorry if it is dublicated, but I cant find correct answer. My task is to create widget (RadioButton, RatingBar) with custom drawables + make them high quality a...",
        "fallback": "Drawable resolution in custom widgets",
        "thumb_url": "http://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded&a",
        "from_url": "http://stackoverflow.com/questions/36645549/drawable-resolution-in-custom-widgets",
        "thumb_width": 316,
        "thumb_height": 316,
        "id": 2
      }
    ],
    "ts": "1461249017.000158",
    "id": "21be4436",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12M7GG2Z",
    "subtype": "channel_join",
    "text": "<@U12M7GG2Z|saulsanchez> has joined the channel",
    "ts": "1461260911.000160",
    "id": "21be4437",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12NFT84T",
    "subtype": "channel_join",
    "text": "<@U12NFT84T|guruchaga> has joined the channel",
    "ts": "1461279127.000161",
    "id": "21be4438",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12PXEK16",
    "subtype": "channel_join",
    "text": "<@U12PXEK16|falconim> has joined the channel",
    "ts": "1461279631.000162",
    "id": "21be4439",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  },
  {
    "user": "U12R4F3AM",
    "subtype": "channel_join",
    "text": "<@U12R4F3AM|luisgdelahozl> has joined the channel",
    "ts": "1461292045.000163",
    "id": "21be4440",
    "thread": [
      {
        "position": "null",
        "number": 0
      }
    ],
    "label": [
      {
        "type": "null",
        "position": "null"
      }
    ]
  }
]